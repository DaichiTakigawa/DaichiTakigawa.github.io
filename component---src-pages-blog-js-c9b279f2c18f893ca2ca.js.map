{"version":3,"sources":["webpack:///./src/components/molecules/BlogList.js","webpack:///./src/pages/blog.js"],"names":["query","render","data","BlogList","props","getlist","this","allMarkdownRemark","edges","map","obj","info","node","frontmatter","Segment","StyledContainer","Responsive","as","Title","minWidth","onlyTablet","MobileTitle","maxWidth","onlyMobile","StyledDivider","React","Component","Item","getTags","tags","tag","Label","size","style","marginLeft","rhythm","title","slug","description","date","name","thumbnail","FlexContainer","width","marginRight","fileName","alt","margin","StyledLink","to","Info","Description","Divider","styled","div","h1","scale","fontSize","Link","p","Date","h4","App","Seo","Content","active"],"mappings":"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","file":"component---src-pages-blog-js-c9b279f2c18f893ca2ca.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport { Responsive, Divider, Label } from \"semantic-ui-react\"\nimport { scale, rhythm } from \"../../utils/typography\"\n\nimport CutomImage from \"../atoms/CustomImage\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n          edges {\n            node {\n              frontmatter {\n                title\n                description\n                slug\n                date(formatString: \"YYYY.MM.DD\")\n                tags\n                thumbnail {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <BlogList data={data} />}\n  />\n)\n\nclass BlogList extends React.Component {\n  constructor(props) {\n    super(props)\n    this.data = props.data\n  }\n\n  getlist() {\n    let edges = this.data.allMarkdownRemark.edges\n    return edges.map(obj => {\n      let info = obj.node.frontmatter\n      return <Item info={info} />\n    })\n  }\n\n  render() {\n    return (\n      <Segment>\n        <StyledContainer>\n          <Responsive as={Title} minWidth={Responsive.onlyTablet.minWidth}>\n            Blog\n          </Responsive>\n          <Responsive\n            as={MobileTitle}\n            maxWidth={Responsive.onlyMobile.maxWidth}\n          >\n            Blog\n          </Responsive>\n          <StyledDivider />\n          {this.getlist()}\n        </StyledContainer>\n      </Segment>\n    )\n  }\n}\n\nclass Item extends React.Component {\n  getTags(tags) {\n    return tags.map(tag => {\n      return (\n        <Label\n          tag\n          size=\"mini\"\n          style={{\n            marginLeft: rhythm(1),\n          }}\n        >\n          {tag}\n        </Label>\n      )\n    })\n  }\n\n  render() {\n    let info = this.props.info\n    let title = info.title\n    let slug = info.slug\n    let description = info.description\n    let date = info.date\n    let tags = info.tags\n    let name = info.thumbnail.name\n    return (\n      <div>\n        <Responsive\n          as={FlexContainer}\n          minWidth={Responsive.onlyTablet.minWidth}\n        >\n          <div style={{ width: rhythm(8), marginRight: rhythm(2) }}>\n            <CutomImage fileName={name} alt=\"thumbnail\" />\n          </div>\n          <div style={{ margin: \"auto\", width: \"100%\" }}>\n            <StyledLink to={slug}>{title}</StyledLink>\n            <Info>\n              <Date>{date}</Date>\n              <div>{this.getTags(tags)}</div>\n            </Info>\n            <Description>{description}</Description>\n          </div>\n        </Responsive>\n        <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\n          <CutomImage fileName={name} alt=\"thumbnail\" />\n          <div>\n            <StyledLink to={slug}>{title}</StyledLink>\n            <Info>\n              <Date>{date}</Date>\n              <div>{this.getTags(tags)}</div>\n            </Info>\n            <Description>{description}</Description>\n          </div>\n        </Responsive>\n        <Divider />\n      </div>\n    )\n  }\n}\n\nconst Segment = styled.div`\n  background-color: white\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 3px 5px;\n`\n\nconst StyledContainer = styled.div`\n  padding-top: ${rhythm(2)}\n  padding-bottom: ${rhythm(4)}\n  margin: auto\n  width: 80%\n`\n\nconst Title = styled.h1`\n  font-size: ${scale(1).fontSize}\n  line-height: ${rhythm(3)}\n  color: rgb(70, 70, 70);\n  padding-top: ${rhythm(2)}\n  margin-bottom: 0\n`\n\nconst MobileTitle = styled.h1`\n  font-size: ${scale(1 / 2).fontSize}\n  line-height: ${rhythm(2)}\n  color: rgb(70, 70, 70);\n  padding-top: ${rhythm(1)}\n`\n\nconst StyledDivider = styled(Divider)`\n  margin-top: 0 !important;\n`\n\nconst StyledLink = styled(Link)`\n  font-size: ${scale(1).fontSize}\n  line-height: ${rhythm(2)}\n`\nconst Info = styled.div`\n  display: flex\n  justify-content: space-between\n  margin-top: ${rhythm(1 / 4)}\n`\n\nconst Description = styled.p`\n  font-size: ${scale(0).fontSize}\n  line-height: ${rhythm(1)}\n  margin-top: ${rhythm(1 / 4)}\n`\n\nconst Date = styled.h4`\n  font-size: ${scale(0).fontSize}\n  line-height: ${rhythm(1)}\n  padding-top: ${rhythm(1 / 7)}\n  margin-bottom: 0\n  color:  #4b5454\n`\n\nconst FlexContainer = styled.div`\n  display: flex;\n`\n","import React from \"react\"\n\nimport Content from \"../components/organisms/Content\"\nimport App from \"../components/organisms/App\"\nimport BlogList from \"../components/molecules/BlogList\"\nimport Seo from \"../components/atoms/Seo\"\n\nexport default () => (\n  <App>\n    <Seo title=\"ブログ\" description=\"ブログ\" />\n    <Content active=\"Blog\">\n      <BlogList />\n    </Content>\n  </App>\n)\n"],"sourceRoot":""}