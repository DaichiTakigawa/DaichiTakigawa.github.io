{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","webpack:///./src/pages/404.js"],"names":["Container","props","children","className","content","fluid","text","textAlign","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","isNil","handledProps","propTypes","App","title","description","style","paddingTop","rhythm","Title","Divider","Text","role","aria-label","styled","h1","scale","fontSize","p"],"mappings":"6OASA,SAASA,EAAUC,GACjB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAQJ,EAAMI,MACdC,EAAOL,EAAMK,KACbC,EAAYN,EAAMM,UAClBC,EAAU,IAAG,KAAM,YAAWF,EAAM,QAAS,YAAWD,EAAO,SAAU,YAAiBE,GAAY,YAAaJ,GACnHM,EAAO,OAAAC,EAAA,GAAkBV,EAAWC,GACpCU,EAAc,OAAAC,EAAA,GAAeZ,EAAWC,GAC5C,OAAO,IAAMY,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDN,UAAWK,IACT,IAAcM,MAAMZ,GAAYE,EAAUF,GAGhDF,EAAUe,aAAe,CAAC,KAAM,WAAY,YAAa,UAAW,QAAS,OAAQ,aACrFf,EAAUgB,UAqBN,GACW,Q,wTCvCA,4BACb,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,MAAMC,YAAY,cAC7B,kBAAC,EAAD,CAAWZ,UAAU,SAASa,MAAO,CAAEC,WAAYC,YAAO,KACxD,kBAACC,EAAD,YACA,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAD,mDAEE,0BAAMC,KAAK,MAAMC,aAAW,OACzB,IADH,KAEK,SAVE,IAiBTJ,EAAQK,IAAOC,GAAV,IACIC,YAAM,GAAGC,SACPT,YAAO,IAElBG,EAAOG,IAAOI,EAAV,IACKF,YAAM,IAAOC,SACXT,YAAO,GACZA,YAAO","file":"component---src-pages-404-js-edaf40a173bab523896d.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Container, Divider } from \"semantic-ui-react\"\nimport { scale, rhythm } from \"../utils/typography\"\n\nimport SEO from \"../components/atoms/Seo\"\nimport App from \"../components/organisms/App\"\n\nexport default () => (\n  <App>\n    <SEO title=\"404\" description=\"無効なURLです。\" />\n    <Container textAlign=\"center\" style={{ paddingTop: rhythm(4) }}>\n      <Title>404</Title>\n      <Divider />\n      <Text>\n        There isn't a web site you are looking for.\n        <span role=\"img\" aria-label=\"sad\">\n          {\" \"}\n          😢{\" \"}\n        </span>\n      </Text>\n    </Container>\n  </App>\n)\n\nconst Title = styled.h1`\n  font-size: ${scale(1).fontSize}\n  line-height: ${rhythm(2)}\n`\nconst Text = styled.p`\n  font-size: ${scale(1 / 2).fontSize}\n  line-height: ${rhythm(2)}\n  margin: ${rhythm(3)}\n`\n"],"sourceRoot":""}