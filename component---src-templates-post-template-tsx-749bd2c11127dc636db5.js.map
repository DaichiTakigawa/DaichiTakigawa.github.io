{"version":3,"sources":["webpack:///./src/components/atoms/tag/index.tsx","webpack:///./src/components/atoms/copyright/index.tsx","webpack:///./src/components/atoms/toc/index.tsx","webpack:///./src/components/atoms/shareButtons/index.tsx","webpack:///./src/components/molecules/blogPage/blogMeta.tsx","webpack:///./src/components/molecules/blogPage/index.tsx","webpack:///./src/templates/post-template.tsx"],"names":["Tag","fontSize","scale","background","borderRadius","marginLeft","rhythm","display","content","paddingLeft","paddingRight","Footer","height","width","margin","borderTop","paddingTop","color","Copyright","className","data-content","Background","padding","backgroundColor","responsive","tablet","minWidth","Title","fontWeight","FlexContainer","ClickCircle","cursor","textAlign","TocContainer","li","listStyle","lineHeight","p","ul","marginTop","a","textDecoration","textShadow","Toc","html","useState","expand","state","setState","toc","dangerouslySetInnerHTML","__html","onClick","Container","ShareButton","props","Hatena","ShareButtons","url","title","href","target","rel","marginBottom","Date","Tags","alignSelf","Description","Info","BlogMeta","date","tags","description","map","tag","paddingBottom","Html","h2","h3","listStylePosition","tr","BlogPage","slug","shareTitle","fileName","thumbnail","alt","query","Post","data","fm","markdown","frontmatter","site","siteMetadata","siteUrl","imageUrl","publicURL","isPostPage","name"],"mappings":"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","file":"component---src-templates-post-template-tsx-749bd2c11127dc636db5.js","sourcesContent":["import styled from \"@emotion/styled\"\nimport { rhythm, scale } from \"../../../utils/typography\"\n\nconst Tag = styled.span({\n  fontSize: scale(-1 / 6).fontSize,\n  background: \"rgba(204, 204, 204, 0.3)\",\n  borderRadius: \"10%\",\n  marginLeft: rhythm(1 / 2),\n  display: \"inline-block\",\n  \"&::before\": {\n    content: `\"\"`,\n    paddingLeft: \"0.5rem\"\n  },\n  \"&::after\": {\n    content: `\"\"`,\n    paddingRight: \"0.5rem\"\n  }\n})\n\nexport default Tag","import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { rhythm, scale } from \"../../../utils/typography\"\n\nconst Copyright: React.FC = () => (\n  <Footer>\n    <div className=\"is-divider\" data-content=\"© 2019- TAKIGAWA MEMO\" />\n  </Footer>\n)\n\nconst Footer = styled.footer({\n  height: rhythm(4),\n  width: \"80%\",\n  margin: \"auto\",\n  \"& > .is-divider\": {\n    borderTop: \"0.14rem solid rgba(34, 36, 38, 0.15)\",\n  },\n  \"& > .is-divider::after\": {\n    fontSize: scale(1 / 6).fontSize,\n    paddingTop: \".1rem\",\n    color: \"gray\"\n  }\n})\n\nexport default Copyright","import * as React from \"react\"\nimport { useState } from \"react\"\nimport styled from \"@emotion/styled\"\n\nimport { rhythm, scale } from \"../../../utils/typography\"\nimport { responsive } from \"../../../../config\"\n\ntype Props = {\n  html: string\n}\n\nconst Toc: React.FC<Props> = ({ html }) => {\n  const [state, setState] = useState({ expand: true })\n\n  let toc = null\n  if (state.expand) {\n    toc = (\n      <TocContainer>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </TocContainer>\n    )\n  }\n\n  return (\n    <Background>\n      <FlexContainer>\n        <div>\n          <Title>目次</Title>\n        </div>\n        <ClickCircle onClick={() => setState({ expand: !state.expand })}>\n          <span>{state.expand ? \"-\" : \"+\"}</span>\n        </ClickCircle>\n      </FlexContainer>\n      {toc}\n    </Background>\n  )\n}\n\nconst Background = styled.div({\n  margin: `${rhythm(3)} 0 ${rhythm(2)} 0`,\n  padding: `${rhythm(1 / 2)} ${rhythm(1)}`,\n  backgroundColor: \"rgba(224, 224, 224, 0.5)\",\n  [`@media (min-width: ${responsive.tablet.minWidth}px)`]: {\n    width: \"56%\"\n  }\n})\n\nconst Title = styled.span({\n  fontSize: scale(1 / 6).fontSize,\n  fontWeight: \"bold\",\n  color: \"rgb(87, 87, 87)\",\n})\n\nconst FlexContainer = styled.div({\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-between\"\n})\n\nconst ClickCircle = styled.div({\n  cursor: \"pointer\",\n  width: rhythm(1.2),\n  height: rhythm(1.2),\n  borderRadius: \"50%\",\n  background: \"rgba(156, 156, 156, 0.5)\",\n  textAlign: \"center\",\n  paddingTop: \"2px\",\n  \"& > span\": {\n    fontWeight: \"bold\"\n  }\n})\n\nconst TocContainer = styled.div({\n  width: \"80%\",\n  margin: \"0 auto\",\n  padding: `${rhythm(1)} 0 0 0`,\n  \"& ul\": {\n    width: \"auto\",\n    li: {\n      color: \"#96acb3\",\n      listStyle: \"decimal\",\n      lineHeight: rhythm(3 / 2),\n      p: {\n        margin: \"0 auto\"\n      },\n      ul: {\n        marginTop: 0\n      }\n    },\n    a: {\n      textDecoration: \"none\",\n      textShadow: \"none\",\n      color: \"rgb(82, 82, 82)\"\n    }\n  }\n})\n\nexport default Toc","import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { rhythm } from \"../../../utils/typography\"\n\ntype Props = {\n  url: string\n  title: string\n}\n\ntype SBProps = {\n  color: string\n}\n\nconst ShareButtons: React.FC<Props> = ({ url, title }) => (\n  <Container className=\"columns is-mobile\">\n    <ShareButton color=\"#3b5998\" className=\"column\">\n      <a\n        href={`https://www.facebook.com/share.php?u=${url}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n\n      >\n        <i className=\"fab fa-facebook\" />\n      </a>\n    </ShareButton>\n    <ShareButton color=\"#55acee\" className=\"column\">\n      <a\n        href={`https://twitter.com/share?url=${url}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        <i className=\"fab fa-twitter\" />\n      </a>\n    </ShareButton>\n    <ShareButton color=\"#008fde\" className=\"column\">\n      <a\n        href={`https://b.hatena.ne.jp/add?mode=confirm&url=${url}&title=${title}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        <Hatena>B!</Hatena>\n      </a>\n    </ShareButton>\n    <ShareButton color=\"#d3505a\" className=\"column\">\n      <a\n        href={`https://getpocket.com/edit?url=${url}&title=${title}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        <i className=\"fab fa-get-pocket\" />\n      </a>\n    </ShareButton>\n  </Container>\n)\n\nconst Container = styled.div({\n  marginTop: 0,\n  width: \"100%\",\n  margin: \"auto\"\n})\n\nconst ShareButton = styled.div((props: SBProps) => ({\n  background: `${props.color}`,\n  padding: 0,\n  \"& > a\": {\n    display: \"block\",\n    color: \"#fff\",\n    padding: `${rhythm(1 / 4)} 0`,\n    textAlign: \"center\",\n    fontSize: \"1.3rem\",\n  }\n}))\n\nconst Hatena = styled.span({\n  fontWeight: \"bold\"\n})\n\nexport default ShareButtons","import * as React from \"react\"\nimport styled from \"@emotion/styled\"\n\nimport Tag from \"../../atoms/tag\"\nimport { rhythm, scale } from \"../../../utils/typography\"\nimport { responsive } from \"../../../../config\"\n\ntype Props = {\n  title: string\n  date: string\n  tags: string[]\n  description: string\n}\n\nconst BlogMeta: React.FC<Props> = ({ title, date, tags, description }) => (\n  <>\n    <Title>{title}</Title>\n    <Info>\n      <div>\n        <Date>{date}</Date>\n      </div>\n      <Tags>\n        {tags.map(tag => <Tag>{tag}</Tag>)}\n      </Tags>\n    </Info>\n    <Description>{description}</Description>\n  </>\n)\n\nconst Title = styled.h1({\n  paddingTop: rhythm(2),\n  fontSize: scale(1).fontSize,\n  lineHeight: rhythm(2),\n  fontWeight: \"bold\",\n  marginBottom: 0,\n  [`@media (min-width: ${responsive.tablet.minWidth}px)`]: {\n    paddingTop: rhythm(4),\n    fontSize: scale(3 / 2).fontSize,\n    lineHeight: scale(3 / 2).lineHeight\n  }\n})\n\nconst Date = styled.h4({\n  fontSize: scale(0).fontSize,\n  lineHeight: rhythm(2),\n  textAlign: \"center\",\n  color: \"#4b5454\",\n  margin: \"auto\"\n})\n\nconst Tags = styled.div({\n  marginLeft: rhythm(1 / 2),\n  lineHeight: rhythm(1),\n  alignSelf: \"center\",\n})\n\nconst Description = styled.p({\n  fontSize: `${scale(0).fontSize} !important`,\n  lineHeight: `${scale(0).lineHeight} !important`,\n  margin: \"0 !important\"\n})\n\nconst Info = styled.div({\n  display: \"flex\",\n  paddingTop: rhythm(1 / 4)\n})\n\n\nexport default BlogMeta","import * as React from \"react\"\nimport styled from \"@emotion/styled\"\n\nimport Copyright from \"../../atoms/copyright\"\nimport Toc from \"../../atoms/toc\"\nimport ShareButtons from \"../../atoms/shareButtons\"\nimport Divider from \"../../atoms/divider\"\nimport AdSense from \"../../atoms/adsense\"\nimport Image from \"../../atoms/image\"\nimport BlogMeta from \"./blogMeta\"\nimport { rhythm, scale } from \"../../../utils/typography\"\nimport { responsive } from \"../../../../config\"\n\ntype Props = {\n  title: string\n  slug: string\n  date: string\n  description: string\n  tags: string[]\n  thumbnail: string\n  html: string\n  toc: string\n}\n\nconst BlogPage: React.FC<Props> = (props) => {\n\n  let url = `https://www.takigawa-memo.com${props.slug}`\n  let shareTitle = `${props.title} - TAKIGAWA MEMO`\n\n  return (\n    <>\n      <Container>\n        <BlogMeta\n          title={props.title}\n          date={props.date}\n          description={props.description}\n          tags={props.tags}\n        />\n        <Divider />\n        <Image fileName={props.thumbnail} alt=\"thumbnail\" />\n        <ShareButtons url={url} title={shareTitle} />\n        <Toc html={props.toc} />\n        <AdSense />\n        <Html dangerouslySetInnerHTML={{ __html: props.html }} />\n        <ShareButtons url={url} title={shareTitle} />\n        <AdSense />\n      </Container>\n      <Copyright />\n    </>\n  )\n}\n\nconst Container = styled.div({\n  paddingBottom: rhythm(4),\n  margin: `0 ${rhythm(1)}`,\n  [`@media (min-width: ${responsive.tablet.minWidth}px)`]: {\n    width: \"86%\",\n    margin: \"0 auto\"\n  }\n})\n\nconst Html = styled.div({\n  paddingBottom: rhythm(2),\n  h2: {\n    fontWeight: \"bold\",\n    fontSize: scale(1 / 2).fontSize,\n    lineHeight: rhythm(2),\n    margin: `${rhythm(3 / 2)} 0`\n  },\n  h3: {\n    fontWeight: \"bold\",\n    fontSize: scale(1 / 6).fontSize,\n    lineHeight: rhythm(2),\n    margin: `${rhythm(1)} 0`,\n  },\n  li: {\n    fontSize: scale(0).fontSize,\n    lineHeight: rhythm(1)\n  },\n  ul: {\n    listStyle: \"disc\",\n    listStylePosition: \"inside\"\n  },\n  tr: {\n    fontSize: scale(0).fontSize,\n    lineHeight: rhythm(1)\n  },\n  [`@media (min-width: ${responsive.tablet.minWidth}px)`]: {\n    li: {\n      lineHeight: rhythm(3 / 2)\n    },\n    tr: {\n      lineHeight: rhythm(3 / 2)\n    }\n  }\n})\n\nexport default BlogPage ","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport App from \"../components/organisms/app\"\nimport Content from \"../components/organisms/content\"\nimport Seo from \"../components/atoms/seo\"\nimport BlogPage from \"../components/molecules/blogPage\"\nimport { PostTemplateQuery } from \"../../types/graphql-types\"\n\ntype Props = {\n  data: PostTemplateQuery\n}\n\nconst Post: React.FC<Props> = ({ data }) => {\n  let fm = data.markdown.frontmatter\n  let url = `${data.site.siteMetadata.siteUrl}${fm.slug}`\n  let imageUrl = `${data.site.siteMetadata.siteUrl}${fm.thumbnail.publicURL}`\n\n  return (\n    <App>\n      <Seo\n        isPostPage\n        title={fm.title}\n        description={fm.description}\n        url={url}\n        imageUrl={imageUrl}\n      />\n      <Content>\n        <BlogPage\n          title={fm.title}\n          date={fm.date}\n          description={fm.description}\n          slug={fm.slug}\n          thumbnail={fm.thumbnail.name}\n          tags={fm.tags}\n          html={data.markdown.html}\n          toc={data.markdown.toc}\n        />\n      </Content>\n    </App>\n\n  )\n}\n\nexport const query = graphql`\n  query PostTemplate($slug: String!) {\n    markdown: markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        slug\n        date(formatString: \"YYYY.MM.DD\")\n        tags\n        title\n        description\n        thumbnail {\n          name\n          publicURL\n        }\n      }\n      html\n      toc: tableOfContents(pathToSlugField: \"frontmatter.slug\")\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`\n\nexport default Post"],"sourceRoot":""}