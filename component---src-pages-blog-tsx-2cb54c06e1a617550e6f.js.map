{"version":3,"sources":["webpack:///./src/components/molecules/blogList/blogRow.tsx","webpack:///./src/components/molecules/blogList/index.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/components/atoms/tag/index.tsx"],"names":["Container","responsive","tablet","minWidth","display","ImageContainer","width","rhythm","marginRight","PageData","margin","StyledLink","Link","color","fontSize","scale","fontWeight","lineHeight","Info","justifyContent","marginTop","Description","Date","paddingTop","marginBottom","BlogRow","title","slug","description","date","tags","thumbnail","fileName","alt","to","map","tag","idx","key","paddingBottom","Title","BlogList","list","useStaticQuery","markdown","edges","edge","fm","node","frontmatter","name","query","Component","data","site","siteMetadata","currentPage","Tag","background","borderRadius","marginLeft","content","paddingLeft","paddingRight"],"mappings":"8QAkCMA,EAAY,sEACOC,IAAWC,OAAOC,SADzB,OACyC,CACvDC,QAAS,QAFK,OAMZC,EAAiB,sEACEJ,IAAWC,OAAOC,SADpB,OACoC,CACvDG,MAAOC,YAAO,GACdC,YAAaD,YAAO,IAHD,OAOjBE,EAAW,sEACQR,IAAWC,OAAOC,SAD1B,OAC0C,CACvDO,OAAQ,OACRJ,MAAO,QAHM,OAOXK,EAAa,YAAOC,OAAP,sBAAa,CAC9BC,MAAO,UACPC,SAAUC,YAAM,EAAI,GAAGD,SACvBE,WAAY,OACZC,WAAYV,YAAO,MAJF,IAObW,EAAO,wCAAW,CACtBd,QAAS,OACTe,eAAgB,gBAChBC,UAAWb,YAAO,EAAI,IAHX,IAMPc,EAAc,sCAAS,CAC3BP,SAAUC,YAAM,GAAGD,SACnBG,WAAeV,YAAO,GAAZ,cACVG,OAAWH,YAAO,IAAZ,qBAHY,IAMde,EAAO,uCAAU,CACrBR,SAAUC,YAAM,GAAGD,SACnBG,WAAYV,YAAO,GACnBgB,WAAYhB,YAAO,EAAI,GACvBiB,aAAc,EACdX,MAAO,WALI,IAQEY,EA/DkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,KAAMC,EAAzC,EAAyCA,UAAzC,OAC/B,YAAC/B,EAAD,KACE,YAACK,EAAD,KACE,YAAC,IAAD,CAAO2B,SAAUD,EAAWE,IAAI,eAElC,YAACxB,EAAD,KACE,YAACE,EAAD,CAAYuB,GAAIP,GAAOD,GACvB,YAACR,EAAD,KACE,YAAC,EAAD,KAAOW,GACP,uBAAMC,EAAKK,KAAI,SAACC,EAAKC,GAAN,OAAc,YAAC,IAAD,CAAKC,IAAKD,GAAMD,QAE/C,YAACf,EAAD,KAAcO,M,YCyCd5B,EAAY,wCAAW,CAC3BuB,WAAYhB,YAAO,GACnBgC,cAAehC,YAAO,GACtBG,OAAQ,OACRJ,MAAO,OAJS,IAOZkC,EAAQ,4CACZ1B,SAAUC,YAAM,IAAOD,SACvBG,WAAYV,YAAO,GACnBM,MAAO,kBACPU,WAAYhB,YAAO,KAJP,sBAKWN,IAAWC,OAAOC,SAL7B,OAK6C,CACvDW,SAAUC,YAAM,GAAGD,SACnBG,WAAYV,YAAO,GACnBgB,WAAYhB,YAAO,GACnBiB,aAAc,GATJ,OAaCiB,EApEY,WAAM,IAsBzBC,EArBqBC,yBAAe,aAAlCC,SAqBcC,MAAMV,KAAI,SAACW,GAC/B,IAAIC,EAAKD,EAAKE,KAAKC,YACnB,OACE,4BACE,YAAC,EAAD,CACEvB,MAAOqB,EAAGrB,MACVC,KAAMoB,EAAGpB,KACTC,YAAamB,EAAGnB,YAChBE,KAAMiB,EAAGjB,KACTD,KAAMkB,EAAGlB,KACTE,UAAWgB,EAAGhB,UAAUmB,OAE1B,YAAC,IAAD,UAKN,OACE,YAAC,EAAD,KACE,YAACV,EAAD,aACA,YAAC,IAAD,MACCE,I,YCzCMS,EAAQ,aAUNC,UApBoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjC,YAAC,IAAD,KACE,YAAC,IAAD,CAAK3B,MAAM,MAAME,YAAayB,EAAKC,KAAKC,aAAa3B,cAErD,YAAC,IAAD,CAAS4B,YAAY,QACnB,YAAC,EAAD,U,8DChBAC,EAAM,yCAAY,CACtB3C,SAAUC,aAAO,EAAI,GAAGD,SACxB4C,WAAY,2BACZC,aAAc,MACdC,WAAYrD,YAAO,IACnBH,QAAS,eACT,YAAa,CACXyD,QAAS,KACTC,YAAa,UAEf,WAAY,CACVD,QAAS,KACTE,aAAc,WAZN,IAgBGN","file":"component---src-pages-blog-tsx-2cb54c06e1a617550e6f.js","sourcesContent":["import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\n\nimport Image from \"../../atoms/image\"\nimport Tag from \"../../atoms/tag\"\nimport { rhythm, scale } from \"../../../utils/typography\"\nimport { responsive } from \"../../../../config\"\n\ntype Props = {\n  title: string\n  slug: string\n  description: string\n  date: string\n  tags: string[]\n  thumbnail: string\n}\n\nconst BlogRow: React.FC<Props> = ({ title, slug, description, date, tags, thumbnail }) => (\n  <Container>\n    <ImageContainer>\n      <Image fileName={thumbnail} alt=\"thumbnail\" />\n    </ImageContainer>\n    <PageData>\n      <StyledLink to={slug}>{title}</StyledLink>\n      <Info>\n        <Date>{date}</Date>\n        <div>{tags.map((tag, idx) => <Tag key={idx}>{tag}</Tag>)}</div>\n      </Info>\n      <Description>{description}</Description>\n    </PageData>\n  </Container>\n)\n\nconst Container = styled.div({\n  [`@media (min-width: ${responsive.tablet.minWidth}px)`]: {\n    display: \"flex\"\n  }\n})\n\nconst ImageContainer = styled.div({\n  [`@media (min-width: ${responsive.tablet.minWidth}px)`]: {\n    width: rhythm(8),\n    marginRight: rhythm(2)\n  }\n})\n\nconst PageData = styled.div({\n  [`@media (min-width: ${responsive.tablet.minWidth}px)`]: {\n    margin: \"auto\",\n    width: \"100%\"\n  }\n})\n\nconst StyledLink = styled(Link)({\n  color: \"#3273dc\",\n  fontSize: scale(3 / 4).fontSize,\n  fontWeight: \"bold\",\n  lineHeight: rhythm(3 / 2)\n})\n\nconst Info = styled.div({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginTop: rhythm(1 / 4)\n})\n\nconst Description = styled.p({\n  fontSize: scale(0).fontSize,\n  lineHeight: `${rhythm(1)} !important`,\n  margin: `${rhythm(1 / 2)} 0 0 0 !important`,\n})\n\nconst Date = styled.h4({\n  fontSize: scale(0).fontSize,\n  lineHeight: rhythm(1),\n  paddingTop: rhythm(1 / 7),\n  marginBottom: 0,\n  color: \"#4b5454\"\n})\n\nexport default BlogRow","import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport BlogRow from \"./blogRow\"\nimport Divider from \"../../atoms/divider\"\nimport { rhythm, scale } from \"../../../utils/typography\"\nimport { responsive } from \"../../../../config\"\nimport { MarkdownRemarkFrontmatter } from \"../../../../types/graphql-types\"\n\ntype edge = {\n  node: {\n    frontmatter: MarkdownRemarkFrontmatter\n  }\n}\n\ntype data = {\n  markdown: {\n    edges: edge[]\n  }\n}\n\nconst BlogList: React.FC = () => {\n  const { markdown }: data = useStaticQuery(graphql`\n    query {\n      markdown: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}) {\n        edges {\n          node {\n            frontmatter {\n              title\n              description\n              slug\n              date(formatString: \"YYYY.MM.DD\")\n              tags\n              thumbnail {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const list = markdown.edges.map((edge: edge) => {\n    let fm = edge.node.frontmatter\n    return (\n      <>\n        <BlogRow\n          title={fm.title}\n          slug={fm.slug}\n          description={fm.description}\n          tags={fm.tags}\n          date={fm.date}\n          thumbnail={fm.thumbnail.name}\n        />\n        <Divider />\n      </>\n    )\n  })\n\n  return (\n    <Container>\n      <Title>Blog</Title>\n      <Divider />\n      {list}\n    </Container>\n  )\n}\n\nconst Container = styled.div({\n  paddingTop: rhythm(2),\n  paddingBottom: rhythm(4),\n  margin: \"auto\",\n  width: \"80%\"\n})\n\nconst Title = styled.h1({\n  fontSize: scale(1 / 2).fontSize,\n  lineHeight: rhythm(2),\n  color: \"rgb(70, 70, 70)\",\n  paddingTop: rhythm(1),\n  [`@media (min-width: ${responsive.tablet.minWidth}px)`]: {\n    fontSize: scale(1).fontSize,\n    lineHeight: rhythm(3),\n    paddingTop: rhythm(2),\n    marginBottom: 0\n  }\n})\n\nexport default BlogList","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Content from \"../components/organisms/content\"\nimport App from \"../components/organisms/app\"\nimport BlogList from \"../components/molecules/blogList\"\nimport Seo from \"../components/atoms/seo\"\n\nimport { SiteDescriptionQuery } from \"../../types/graphql-types\"\n\ntype Props = {\n  data: SiteDescriptionQuery\n}\n\nconst Component: React.FC<Props> = ({ data }) => (\n  <App>\n    <Seo title=\"ブログ\" description={data.site.siteMetadata.description} />\n\n    <Content currentPage=\"Blog\">\n      <BlogList />\n    </Content>\n  </App>\n)\n\nexport const query = graphql`\n  query SiteDescription {\n    site {\n      siteMetadata {\n        description\n      }\n    }\n  }\n`\n\nexport default Component","import styled from \"@emotion/styled\"\nimport { rhythm, scale } from \"../../../utils/typography\"\n\nconst Tag = styled.span({\n  fontSize: scale(-1 / 6).fontSize,\n  background: \"rgba(204, 204, 204, 0.3)\",\n  borderRadius: \"10%\",\n  marginLeft: rhythm(1 / 2),\n  display: \"inline-block\",\n  \"&::before\": {\n    content: `\"\"`,\n    paddingLeft: \"0.5rem\"\n  },\n  \"&::after\": {\n    content: `\"\"`,\n    paddingRight: \"0.5rem\"\n  }\n})\n\nexport default Tag"],"sourceRoot":""}