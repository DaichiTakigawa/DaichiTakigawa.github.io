{"version":3,"sources":["webpack:///./node_modules/core-js/internals/object-set-prototype-of.js","webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js","webpack:///./node_modules/core-js/internals/object-get-prototype-of.js","webpack:///./node_modules/core-js/internals/correct-prototype-getter.js","webpack:///./node_modules/core-js/internals/array-buffer-view-core.js","webpack:///./node_modules/core-js/internals/classof.js","webpack:///./node_modules/core-js/internals/to-string-tag-support.js","webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./node_modules/core-js/modules/es.typed-array.sort.js","webpack:///./node_modules/gl-matrix/esm/common.js","webpack:///./node_modules/gl-matrix/esm/mat2.js","webpack:///./node_modules/gl-matrix/esm/mat3.js","webpack:///./node_modules/gl-matrix/esm/mat4.js","webpack:///./node_modules/gl-matrix/esm/vec3.js","webpack:///./node_modules/gl-matrix/esm/vec4.js","webpack:///./node_modules/gl-matrix/esm/quat.js","webpack:///./node_modules/gl-matrix/esm/vec2.js","webpack:///./src/lib/legacygl/gl-matrix-util.ts","webpack:///./src/lib/legacygl/legacygl/shader.ts","webpack:///./src/lib/legacygl/legacygl/uniform.ts","webpack:///./src/lib/legacygl/legacygl/vertex-attribute.ts","webpack:///./src/lib/legacygl/legacygl/legacygl.ts","webpack:///./src/lib/legacygl/boundingbox.ts","webpack:///./src/lib/legacygl/camera.ts","webpack:///./src/lib/legacygl/drawutil.ts","webpack:///./src/lib/legacygl/halfedge.ts","webpack:///./src/lib/legacygl/util.ts","webpack:///./src/lib/legacygl/meshio.ts","webpack:///./src/lib/legacygl/glu.ts","webpack:///./contents/posts/2021-04-22QuadraticBezierCurve/index.tsx","webpack:///./contents/posts/2021-04-27SubdivisionCatmullClark/index.tsx","webpack:///./src/templates/post-react-template.tsx","webpack:///./node_modules/core-js/internals/a-possible-prototype.js","webpack:///./node_modules/core-js/modules/es.math.hypot.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./node_modules/core-js/internals/array-buffer-native.js","webpack:///./node_modules/core-js/internals/array-sort.js"],"names":["anObject","aPossiblePrototype","module","exports","Object","setPrototypeOf","setter","CORRECT_SETTER","test","getOwnPropertyDescriptor","prototype","set","call","Array","error","O","proto","__proto__","undefined","UA","has","toObject","sharedKey","CORRECT_PROTOTYPE_GETTER","IE_PROTO","ObjectPrototype","getPrototypeOf","constructor","fails","F","NAME","Constructor","Prototype","NATIVE_ARRAY_BUFFER","DESCRIPTORS","global","isObject","classof","createNonEnumerableProperty","redefine","defineProperty","f","wellKnownSymbol","uid","Int8Array","Int8ArrayPrototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","TypedArray","TypedArrayPrototype","isPrototypeOf","TO_STRING_TAG","TYPED_ARRAY_TAG","TYPED_ARRAY_CONSTRUCTOR","NATIVE_ARRAY_BUFFER_VIEWS","opera","TYPED_ARRAY_TAG_REQIRED","TypedArrayConstructorsList","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isTypedArray","it","klass","Function","TypeError","get","this","aTypedArray","aTypedArrayConstructor","C","exportTypedArrayMethod","KEY","property","forced","ARRAY","TypedArrayConstructor","exportTypedArrayStaticMethod","isView","TO_STRING_TAG_SUPPORT","classofRaw","CORRECT_ARGUMENTS","arguments","tag","result","key","tryGet","callee","String","firefox","match","ArrayBufferViewCore","aFunction","toLength","internalSort","FF","IE_OR_EDGE","V8","WEBKIT","nativeSort","sort","ACCEPT_INCORRECT_ARGUMENTS","array","STABLE_SORT","index","mod","expected","a","b","comparefn","arrayLength","length","items","x","y","getSortCompare","EPSILON","ARRAY_TYPE","RANDOM","Math","random","PI","create","out","clone","identity","fromValues","m00","m01","m10","m11","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","v","v0","v1","fromRotation","fromScaling","str","frob","hypot","LDU","L","D","U","add","subtract","exactEquals","abs","max","multiplyScalar","multiplyScalarAndAdd","scale","i","sqrt","mul","sub","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","translate","fromTranslation","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","width","height","a4","a5","a6","a7","a8","b4","b5","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","t","len","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","cross","lerp","hermite","d","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","mag","cosine","acos","zero","vec","div","sqrDist","sqrLen","forEach","stride","offset","count","fn","arg","l","u","A","B","E","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","sqlerp","setAxes","view","transformMat2","transformMat2d","p0","p1","sinC","cosC","mat2","add_ip","adjoint_ip","invert_ip","mul_ip","multiply_ip","rotate_ip","scale_ip","transpose_ip","mat3","translate_ip","mat4","rotateX_ip","rotateY_ip","rotateZ_ip","ortho2d","vec2","div_ip","divide_ip","lerp_ip","max_ip","min_ip","negate_ip","normalize_ip","scaleAndAdd_ip","sub_ip","subtract_ip","transformMat2_ip","transformMat2d_ip","transformMat3_ip","transformMat4_ip","vec3","cross_ip","transformQuat_ip","vec4","quat","calculateW_ip","conjugate_ip","slerp_ip","Shader","gl","vertex_shader_src","fragment_shader_src","vertex_shader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","fragment_shader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","useProgram","getProgramParameter","LINK_STATUS","UniformBase","location","is_array","ScalarUniform","type","value","stack","pop","copy","push","Vec2Uniform","Vec3Uniform","Vec4Uniform","Mat2Uniform","Mat3Uniform","Mat4Uniform","ArrayUniformBase","ScalarArrayUniform","size","Vec2ArrayUniform","Vec3ArrayUniform","Vec4ArrayUniform","Mat2ArrayUniform","Mat3ArrayUniform","Mat4ArrayUniform","VertexAttribute","name","current","DispListWrapper","legacygl","is_valid","draw","drawfunc","callList","newList","endList","invalidate","LegacyGL","shader","uniforms","vertex_attributes","add_vertex_attribute","vertex_attribute","num_vertices","mode","QUADS","displists","current_displist_name","AUTO_NORMAL","flags","add_uniform","uniform","getUniformLocation","add_uniform_array","set_uniforms","passed_value","func_name","getAttribLocation","enableVertexAttribArray","begin","end","drawcall","buffers","TRIANGLES","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","slicepos","slice","n","splice","bufferData","STATIC_DRAW","vertexAttribPointer","FLOAT","drawArrays","drawcalls","deleteBuffer","displist","displist_wrapper","enable","flag","disable","get_legacygl","BBox","set_empty","Number","MAX_VALUE","extend","diagonal","diagonal_norm","is_empty","Camera","viewport_width","prevpos","center_to_eye","eye_to_center","lookAt","modelview_matrix","is_moving","start_moving","mousepos","move","diff","theta","rot_hrz","rot_vrt","rot","d0","d1","finish_moving","get_camera","DrawUtil","xyzaxis","LINES","color","vertex","xygrid","yzgrid","zxgrid","quadmesh","vertices","faces","trimesh","cube","circle","numdiv","LINE_LOOP","TRIANGLE_FAN","sphere","radius","slices","stacks","angle2pos","phi","dphi","dtheta","k1","triangle_with_lines","p2","num_lines","quad_with_lines","p3","get_drawutil","Vertex","halfedge","point","normal","outgoing_halfedges","h","opposite","next","incoming_halfedges","map","face","edges","edge","is_boundary","degree","Face","halfedges","some","centroid","cnt","HalfEdge","from_vertex","Edge","Mesh","add_face","fv_indices","face_normals","face_texcoords","console","h_key","vi","vj","hij_key","hji_key","eij_key","eij","hij","hji","i0","i1","i2","h01","h12","prev","texcoord","halfedges_forEach","func","keys","edges_forEach","init_ids","vid","id","e","init_boundaries","num_faces","num_edges","compute_normals","d2","make_halfedge_mesh","get_filename_extension","filename","toLowerCase","split","trim","verify_filename_extension","supported_extensions","given_extension","read_obj","file_content","mesh","points","normals","texcoords","line","tokens","head","parseFloat","tokens2","parseInt","vt_idx","vn_idx","read_off","magic","lines","cnt_vertices","cnt_faces","read","content","file_extension","write_obj","join","write_off","f_vertices","write","project","obj_xyz","modelview","projection","viewport","ndc","unproject","win_xyz","obj_xyzw","ortho2D","window","HTMLCanvasElement","get_mousepos","event","flip_y","totalOffsetX","totalOffsetY","currentElement","offsetParent","offsetLeft","offsetTop","document","body","parentElement","scrollLeft","scrollTop","pageX","pageY","get_touchpos","changedTouches","aspect_ratio","canvas","drawutil","camera","selected","eval_quadratic_bezier","p01","p12","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","lineWidth","LINE_STRIP","input_numsteps","getElementById","numsteps","vertex2","checked","POINTS","texture","mesh_control","mesh_subdiv","bbox","displist_control","displist_subdiv_faces","displist_subdiv_edges","TableContainer","marginTop","rhythm","marginBottom","paddingLeft","paddingTop","Table","H3","fontSize","lineHeight","Post","React","setNumsteps","showControlPoints","setShowControlPoints","showSamplePoints","setShowSamplePoints","getContext","onmousedown","evt","mouse_win","altKey","shiftKey","dist_min","object_win","glu","dist","onmousemove","mouse_obj","plane_normal","eye_to_mouse","eye_to_origin","eye_to_intersection","onmouseup","clearColor","numStepsCallback","showControlPointsCallBack","showSamplePointsCallback","className","colSpan","step","onChange","rel","href","mesh_draw_mode","check_show_control","check_show_edges","modelviewMatrix","projectionMatrix","normalMatrix","use_material","zmin","zmax","vertex3","normal3","write_mesh","meshio","myBlob","Blob","createElement","URL","createObjectURL","download","click","init","read_mesh","mesh_temp","has_nontriangle","innerHTML","DEPTH_TEST","POLYGON_OFFSET_FILL","polygonOffset","createTexture","ctrlKey","ontouchstart","preventDefault","ontouchmove","ontouchend","url","xhr","text_mesh_disk","read_texture","dataurl","img","onload","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","crossOrigin","src","onchange","files","file","reader","FileReader","readAsText","XMLHttpRequest","open","status","response","send","text_material_disk","readAsDataURL","responseType","read_default_texture","ButtonContainer","showEdges","setShowEdges","showControl","setShowControl","subdivideButtonCallBack","subdiv_point","ev","mesh_subdiv_next","edge_offset","face_offset","ev1","ev2","fv","subdivide_catmull_clark","checkShowEdgesCallback","checkShowControlCallback","onClick","accept","posts","data","setSlug","UiContext","Context","fm","markdown","frontmatter","site","siteMetadata","siteUrl","slug","imageUrl","thumbnail","publicURL","isPostPage","title","description","date","html","tags","toc","$","$hypot","stat","NaN","value1","value2","sum","aLen","larg","webkit","ArrayBuffer","DataView","mergeSort","middle","insertionSort","merge","element","llength","rlength","lindex","rindex"],"mappings":"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","file":"component---src-templates-post-react-template-tsx-492e22f82e6a30160141.js","sourcesContent":["/* eslint-disable no-proto -- safe */\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\n\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar isPrototypeOf = ObjectPrototype.isPrototypeOf;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = uid('TYPED_ARRAY_CONSTRUCTOR');\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || has(TypedArrayConstructorsList, klass)\n    || has(BigIntArrayConstructorsList, klass);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return has(TypedArrayConstructorsList, klass)\n    || has(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (setPrototypeOf && !isPrototypeOf.call(TypedArray, C)) {\n    throw TypeError('Target is not a typed array constructor');\n  } return C;\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) { /* empty */ }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    redefine(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      redefine(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQIRED = true;\n  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {\n    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n  } });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar aFunction = require('../internals/a-function');\nvar toLength = require('../internals/to-length');\nvar internalSort = require('../internals/array-sort');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar Uint16Array = global.Uint16Array;\nvar nativeSort = Uint16Array && Uint16Array.prototype.sort;\n\n// WebKit\nvar ACCEPT_INCORRECT_ARGUMENTS = !!nativeSort && !fails(function () {\n  var array = new Uint16Array(2);\n  array.sort(null);\n  array.sort({});\n});\n\nvar STABLE_SORT = !!nativeSort && !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 74;\n  if (FF) return FF < 67;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 602;\n\n  var array = new Uint16Array(516);\n  var expected = Array(516);\n  var index, mod;\n\n  for (index = 0; index < 516; index++) {\n    mod = index % 4;\n    array[index] = 515 - index;\n    expected[index] = index - 2 * mod + 3;\n  }\n\n  array.sort(function (a, b) {\n    return (a / 4 | 0) - (b / 4 | 0);\n  });\n\n  for (index = 0; index < 516; index++) {\n    if (array[index] !== expected[index]) return true;\n  }\n});\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (y !== y) return -1;\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (x !== x) return 1;\n    if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;\n    return x > y;\n  };\n};\n\n// `%TypedArray%.prototype.sort` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\nexportTypedArrayMethod('sort', function sort(comparefn) {\n  var array = this;\n  if (comparefn !== undefined) aFunction(comparefn);\n  if (STABLE_SORT) return nativeSort.call(array, comparefn);\n\n  aTypedArray(array);\n  var arrayLength = toLength(array.length);\n  var items = Array(arrayLength);\n  var index;\n\n  for (index = 0; index < arrayLength; index++) {\n    items[index] = array[index];\n  }\n\n  items = internalSort(array, getSortCompare(comparefn));\n\n  for (index = 0; index < arrayLength; index++) {\n    array[index] = items[index];\n  }\n\n  return array;\n}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);\n","import \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.math.hypot.js\";\n\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import \"core-js/modules/es.typed-array.sort.js\";\nimport * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import {mat2, mat3, mat4, quat, vec2, vec3, vec4} from 'gl-matrix';\n\n/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare module 'gl-matrix' {\n  export namespace mat2 {\n    export function add_ip(a: mat2, b: mat2): mat2;\n    export function adjoint_ip(a: mat2): mat2;\n    export function invert_ip(a: mat2): mat2;\n    export function mul_ip(a: mat2, b: mat2): mat2;\n    export function multiply_ip(a: mat2, b: mat2): mat2;\n    export function rotate_ip(a: mat2, rad: number): mat2;\n    export function scale_ip(a: mat2, v: vec2): mat2;\n    export function transpose_ip(a: mat2): mat2;\n  }\n\n  export namespace mat3 {\n    export function add_ip(a: mat3, b: mat3): mat3;\n    export function adjoint_ip(a: mat3): mat3;\n    export function invert_ip(a: mat3): mat3;\n    export function mul_ip(a: mat3, b: mat3): mat3;\n    export function multiply_ip(a: mat3, b: mat3): mat3;\n    export function rotate_ip(a: mat3, rad: number): mat3;\n    export function scale_ip(a: mat3, v: vec2): mat3;\n    export function translate_ip(a: mat3, v: vec2): mat3;\n    export function transpose_ip(a: mat3): mat3;\n  }\n\n  export namespace mat4 {\n    export function add_ip(a: mat4, b: mat4): mat4;\n    export function adjoint_ip(a: mat4): mat4;\n    export function invert_ip(a: mat4): mat4;\n    export function mul_ip(a: mat4, b: mat4): mat4;\n    export function multiply_ip(a: mat4, b: mat4): mat4;\n    export function rotate_ip(a: mat4, rad: number, axis: vec3): mat4;\n    export function rotateX_ip(a: mat4, rad: number): mat4;\n    export function rotateY_ip(a: mat4, rad: number): mat4;\n    export function rotateZ_ip(a: mat4, rad: number): mat4;\n    export function scale_ip(a: mat4, v: vec3): mat4;\n    export function translate_ip(a: mat4, v: vec3): mat4;\n    export function transpose_ip(a: mat4): mat4;\n    export function ortho2d(\n      a: mat4,\n      left: number,\n      right: number,\n      bottom: number,\n      top: number\n    ): mat4;\n  }\n\n  export namespace vec2 {\n    export function add_ip(a: vec2, b: vec2): vec2;\n    export function div_ip(a: vec2, b: vec2): vec2;\n    export function divide_ip(a: vec2, b: vec2): vec2;\n    export function lerp_ip(a: vec2, b: vec2, t: number): vec2;\n    export function max_ip(a: vec2, b: vec2): vec2;\n    export function min_ip(a: vec2, b: vec2): vec2;\n    export function mul_ip(a: vec2, b: vec2): vec2;\n    export function multiply_ip(a: vec2, b: vec2): vec2;\n    export function negate_ip(a: vec2): vec2;\n    export function normalize_ip(a: vec2): vec2;\n    export function scale_ip(a: vec2, b: number): vec2;\n    export function scaleAndAdd_ip(a: vec2, b: vec2, scale: number): vec2;\n    export function sub_ip(a: vec2, b: vec2): vec2;\n    export function subtract_ip(a: vec2, b: vec2): vec2;\n    export function transformMat2_ip(a: vec2, m: mat2): vec2;\n    export function transformMat2d_ip(a: vec2, m: mat2d): vec2;\n    export function transformMat3_ip(a: vec2, m: mat3): vec2;\n    export function transformMat4_ip(a: vec2, m: mat4): vec2;\n  }\n\n  export namespace vec3 {\n    export function add_ip(a: vec3, b: vec3): vec3;\n    export function cross_ip(a: vec3, b: vec3): vec3;\n    export function div_ip(a: vec3, b: vec3): vec3;\n    export function divide_ip(a: vec3, b: vec3): vec3;\n    export function lerp_ip(a: vec3, b: vec3, t: number): vec3;\n    export function max_ip(a: vec3, b: vec3): vec3;\n    export function min_ip(a: vec3, b: vec3): vec3;\n    export function mul_ip(a: vec3, b: vec3): vec3;\n    export function multiply_ip(a: vec3, b: vec3): vec3;\n    export function negate_ip(a: vec3): vec3;\n    export function normalize_ip(a: vec3): vec3;\n    export function scale_ip(a: vec3, b: number): vec3;\n    export function scaleAndAdd_ip(a: vec3, b: vec3, scale: number): vec3;\n    export function sub_ip(a: vec3, b: vec3): vec3;\n    export function subtract_ip(a: vec3, b: vec3): vec3;\n    export function transformMat3_ip(a: vec3, m: mat3): vec3;\n    export function transformMat4_ip(a: vec3, m: mat4): vec3;\n    export function transformQuat_ip(a: vec3, q: quat): vec3;\n  }\n\n  export namespace vec4 {\n    export function add_ip(a: vec4, b: vec4): vec4;\n    export function div_ip(a: vec4, b: vec4): vec4;\n    export function divide_ip(a: vec4, b: vec4): vec4;\n    export function lerp_ip(a: vec4, b: vec4, t: number): vec4;\n    export function max_ip(a: vec4, b: vec4): vec4;\n    export function min_ip(a: vec4, b: vec4): vec4;\n    export function mul_ip(a: vec4, b: vec4): vec4;\n    export function multiply_ip(a: vec4, b: vec4): vec4;\n    export function negate_ip(a: vec4): vec4;\n    export function normalize_ip(a: vec4): vec4;\n    export function scale_ip(a: vec4, b: number): vec4;\n    export function scaleAndAdd_ip(a: vec4, b: vec4, scale: number): vec4;\n    export function sub_ip(a: vec4, b: vec4): vec4;\n    export function subtract_ip(a: vec4, b: vec4): vec4;\n    export function transformMat4_ip(a: vec4, m: mat4): vec4;\n    export function transformQuat_ip(a: vec4, q: quat): vec4;\n  }\n\n  export namespace quat {\n    export function add_ip(a: vec4, b: vec4): vec4;\n    export function calculateW_ip(a: quat): quat;\n    export function conjugate_ip(a: quat): quat;\n    export function invert_ip(a: quat): quat;\n    export function lerp_ip(a: vec4, b: vec4, t: number): vec4;\n    export function mul_ip(a: quat, b: quat): quat;\n    export function multiply_ip(a: quat, b: quat): quat;\n    export function normalize_ip(a: vec4): vec4;\n    export function rotateX_ip(a: quat, rad: number): quat;\n    export function rotateY_ip(a: quat, rad: number): quat;\n    export function rotateZ_ip(a: quat, rad: number): quat;\n    export function scale_ip(a: vec4, b: number): vec4;\n    export function slerp_ip(a: quat, b: quat, t: number): quat;\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n/* eslint-enable no-unused-vars */\n\n// mat2 in-place versions\nmat2.add_ip = function (a, b) {\n  return mat2.add(a, a, b);\n};\nmat2.adjoint_ip = function (a) {\n  return mat2.adjoint(a, a);\n};\nmat2.invert_ip = function (a) {\n  return mat2.invert(a, a);\n};\nmat2.mul_ip = function (a, b) {\n  return mat2.mul(a, a, b);\n};\nmat2.multiply_ip = function (a, b) {\n  return mat2.multiply(a, a, b);\n};\nmat2.rotate_ip = function (a, rad) {\n  return mat2.rotate(a, a, rad);\n};\nmat2.scale_ip = function (a, v) {\n  return mat2.scale(a, a, v);\n};\nmat2.transpose_ip = function (a) {\n  return mat2.transpose(a, a);\n};\n\n// mat3 in-place versions\nmat3.add_ip = function (a, b) {\n  return mat3.add(a, a, b);\n};\nmat3.adjoint_ip = function (a) {\n  return mat3.adjoint(a, a);\n};\nmat3.invert_ip = function (a) {\n  return mat3.invert(a, a);\n};\nmat3.mul_ip = function (a, b) {\n  return mat3.mul(a, a, b);\n};\nmat3.multiply_ip = function (a, b) {\n  return mat3.multiply(a, a, b);\n};\nmat3.rotate_ip = function (a, rad) {\n  return mat3.rotate(a, a, rad);\n};\nmat3.scale_ip = function (a, v) {\n  return mat3.scale(a, a, v);\n};\nmat3.translate_ip = function (a, v) {\n  return mat3.translate(a, a, v);\n};\nmat3.transpose_ip = function (a) {\n  return mat3.transpose(a, a);\n};\n\n// mat4 in-place versions\nmat4.add_ip = function (a, b) {\n  return mat4.add(a, a, b);\n};\nmat4.adjoint_ip = function (a) {\n  return mat4.adjoint(a, a);\n};\nmat4.invert_ip = function (a) {\n  return mat4.invert(a, a);\n};\nmat4.mul_ip = function (a, b) {\n  return mat4.mul(a, a, b);\n};\nmat4.multiply_ip = function (a, b) {\n  return mat4.multiply(a, a, b);\n};\nmat4.rotate_ip = function (a, rad, axis) {\n  return mat4.rotate(a, a, rad, axis);\n};\nmat4.rotateX_ip = function (a, rad) {\n  return mat4.rotateX(a, a, rad);\n};\nmat4.rotateY_ip = function (a, rad) {\n  return mat4.rotateY(a, a, rad);\n};\nmat4.rotateZ_ip = function (a, rad) {\n  return mat4.rotateZ(a, a, rad);\n};\nmat4.scale_ip = function (a, v) {\n  return mat4.scale(a, a, v);\n};\nmat4.translate_ip = function (a, v) {\n  return mat4.translate(a, a, v);\n};\nmat4.transpose_ip = function (a) {\n  return mat4.transpose(a, a);\n};\n\n// glu\nmat4.ortho2d = function (a, left, right, bottom, top) {\n  return mat4.ortho(a, left, right, bottom, top, -1, 1);\n};\n\n// vec2 in-place versions\nvec2.add_ip = function (a, b) {\n  return vec2.add(a, a, b);\n};\nvec2.div_ip = function (a, b) {\n  return vec2.div(a, a, b);\n};\nvec2.divide_ip = function (a, b) {\n  return vec2.divide(a, a, b);\n};\nvec2.lerp_ip = function (a, b, t) {\n  return vec2.lerp(a, a, b, t);\n};\nvec2.max_ip = function (a, b) {\n  return vec2.max(a, a, b);\n};\nvec2.min_ip = function (a, b) {\n  return vec2.min(a, a, b);\n};\nvec2.mul_ip = function (a, b) {\n  return vec2.mul(a, a, b);\n};\nvec2.multiply_ip = function (a, b) {\n  return vec2.multiply(a, a, b);\n};\nvec2.negate_ip = function (a) {\n  return vec2.negate(a, a);\n};\nvec2.normalize_ip = function (a) {\n  return vec2.normalize(a, a);\n};\nvec2.scale_ip = function (a, b) {\n  return vec2.scale(a, a, b);\n};\nvec2.scaleAndAdd_ip = function (a, b, scale) {\n  return vec2.scaleAndAdd(a, a, b, scale);\n};\nvec2.sub_ip = function (a, b) {\n  return vec2.sub(a, a, b);\n};\nvec2.subtract_ip = function (a, b) {\n  return vec2.subtract(a, a, b);\n};\nvec2.transformMat2_ip = function (a, m) {\n  return vec2.transformMat2(a, a, m);\n};\nvec2.transformMat2d_ip = function (a, m) {\n  return vec2.transformMat2d(a, a, m);\n};\nvec2.transformMat3_ip = function (a, m) {\n  return vec2.transformMat3(a, a, m);\n};\nvec2.transformMat4_ip = function (a, m) {\n  return vec2.transformMat4(a, a, m);\n};\n\n// vec3 in-place versions\nvec3.add_ip = function (a, b) {\n  return vec3.add(a, a, b);\n};\nvec3.cross_ip = function (a, b) {\n  return vec3.cross(a, a, b);\n};\nvec3.div_ip = function (a, b) {\n  return vec3.div(a, a, b);\n};\nvec3.divide_ip = function (a, b) {\n  return vec3.divide(a, a, b);\n};\nvec3.lerp_ip = function (a, b, t) {\n  return vec3.lerp(a, a, b, t);\n};\nvec3.max_ip = function (a, b) {\n  return vec3.max(a, a, b);\n};\nvec3.min_ip = function (a, b) {\n  return vec3.min(a, a, b);\n};\nvec3.mul_ip = function (a, b) {\n  return vec3.mul(a, a, b);\n};\nvec3.multiply_ip = function (a, b) {\n  return vec3.multiply(a, a, b);\n};\nvec3.negate_ip = function (a) {\n  return vec3.negate(a, a);\n};\nvec3.normalize_ip = function (a) {\n  return vec3.normalize(a, a);\n};\nvec3.scale_ip = function (a, b) {\n  return vec3.scale(a, a, b);\n};\nvec3.scaleAndAdd_ip = function (a, b, scale) {\n  return vec3.scaleAndAdd(a, a, b, scale);\n};\nvec3.sub_ip = function (a, b) {\n  return vec3.sub(a, a, b);\n};\nvec3.subtract_ip = function (a, b) {\n  return vec3.subtract(a, a, b);\n};\nvec3.transformMat3_ip = function (a, m) {\n  return vec3.transformMat3(a, a, m);\n};\nvec3.transformMat4_ip = function (a, m) {\n  return vec3.transformMat4(a, a, m);\n};\nvec3.transformQuat_ip = function (a, q) {\n  return vec3.transformQuat(a, a, q);\n};\n\n// vec4 in-place versions\nvec4.add_ip = function (a, b) {\n  return vec4.add(a, a, b);\n};\nvec4.div_ip = function (a, b) {\n  return vec4.div(a, a, b);\n};\nvec4.divide_ip = function (a, b) {\n  return vec4.divide(a, a, b);\n};\nvec4.lerp_ip = function (a, b, t) {\n  return vec4.lerp(a, a, b, t);\n};\nvec4.max_ip = function (a, b) {\n  return vec4.max(a, a, b);\n};\nvec4.min_ip = function (a, b) {\n  return vec4.min(a, a, b);\n};\nvec4.mul_ip = function (a, b) {\n  return vec4.mul(a, a, b);\n};\nvec4.multiply_ip = function (a, b) {\n  return vec4.multiply(a, a, b);\n};\nvec4.negate_ip = function (a) {\n  return vec4.negate(a, a);\n};\nvec4.normalize_ip = function (a) {\n  return vec4.normalize(a, a);\n};\nvec4.scale_ip = function (a, b) {\n  return vec4.scale(a, a, b);\n};\nvec4.scaleAndAdd_ip = function (a, b, scale) {\n  return vec4.scaleAndAdd(a, a, b, scale);\n};\nvec4.sub_ip = function (a, b) {\n  return vec4.sub(a, a, b);\n};\nvec4.subtract_ip = function (a, b) {\n  return vec4.subtract(a, a, b);\n};\nvec4.transformMat4_ip = function (a, m) {\n  return vec4.transformMat4(a, a, m);\n};\nvec4.transformQuat_ip = function (a, q) {\n  return vec4.transformQuat(a, a, q);\n};\n\n// quat in-place versions\nquat.add_ip = function (a, b) {\n  return quat.add(a, a, b);\n};\nquat.calculateW_ip = function (a) {\n  return quat.calculateW(a, a);\n};\nquat.conjugate_ip = function (a) {\n  return quat.conjugate(a, a);\n};\nquat.invert_ip = function (a) {\n  return quat.invert(a, a);\n};\nquat.lerp_ip = function (a, b, t) {\n  return quat.lerp(a, a, b, t);\n};\nquat.mul_ip = function (a, b) {\n  return quat.mul(a, a, b);\n};\nquat.multiply_ip = function (a, b) {\n  return quat.multiply(a, a, b);\n};\nquat.normalize_ip = function (a) {\n  return quat.normalize(a, a);\n};\nquat.rotateX_ip = function (a, rad) {\n  return quat.rotateX(a, a, rad);\n};\nquat.rotateY_ip = function (a, rad) {\n  return quat.rotateY(a, a, rad);\n};\nquat.rotateZ_ip = function (a, rad) {\n  return quat.rotateZ(a, a, rad);\n};\nquat.scale_ip = function (a, b) {\n  return quat.scale(a, a, b);\n};\nquat.slerp_ip = function (a, b, t) {\n  return quat.slerp(a, a, b, t);\n};\n","export class Shader {\n  vertex_shader: WebGLShader;\n  fragment_shader: WebGLShader;\n  program: WebGLProgram;\n\n  constructor(\n    gl: WebGLRenderingContext,\n    vertex_shader_src: string,\n    fragment_shader_src: string\n  ) {\n    this.vertex_shader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(this.vertex_shader, vertex_shader_src);\n    gl.compileShader(this.vertex_shader);\n    if (!gl.getShaderParameter(this.vertex_shader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this.vertex_shader));\n    }\n    // fragment shader\n    this.fragment_shader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(this.fragment_shader, fragment_shader_src);\n    gl.compileShader(this.fragment_shader);\n    if (!gl.getShaderParameter(this.fragment_shader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this.fragment_shader));\n    }\n    // shader program\n    this.program = gl.createProgram();\n    gl.attachShader(this.program, this.vertex_shader);\n    gl.attachShader(this.program, this.fragment_shader);\n    gl.linkProgram(this.program);\n    gl.useProgram(this.program);\n    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n      alert('Could not initialize shaders!');\n    }\n  }\n}\n","import {vec2, vec3, vec4, mat2, mat3, mat4} from 'gl-matrix';\n\nexport type ScalarUniformType = '1f' | '1i';\nexport type Vec2UniformType = '2f' | '2i';\nexport type Vec3UniformType = '3f' | '3i';\nexport type Vec4UniformType = '4f' | '4i';\nexport type Mat2UniformType = 'Matrix2f';\nexport type Mat3UniformType = 'Matrix3f';\nexport type Mat4UniformType = 'Matrix4f';\n\nexport type UniformType =\n  | ScalarUniformType\n  | Vec2UniformType\n  | Vec3UniformType\n  | Vec4UniformType\n  | Mat2UniformType\n  | Mat3UniformType\n  | Mat4UniformType;\n\nexport type UniformValue = number | vec2 | vec3 | vec4 | mat2 | mat3 | mat4;\n\nabstract class UniformBase {\n  location: WebGLUniformLocation;\n  is_array: false;\n  abstract type: UniformType;\n  abstract value: UniformValue;\n  abstract stack: UniformValue[];\n  constructor(location: WebGLUniformLocation) {\n    this.location = location;\n    this.is_array = false;\n  }\n  abstract push(): void;\n  abstract pop(): void;\n}\n\nexport class ScalarUniform extends UniformBase {\n  type: ScalarUniformType;\n  value: number;\n  stack: number[];\n  constructor(location: WebGLUniformLocation, type: ScalarUniformType) {\n    super(location);\n    this.type = type;\n    this.value = 0;\n    this.stack = [];\n  }\n  pop(): void {\n    const copy = this.value;\n    this.stack.push(copy);\n  }\n  push(): void {\n    const copy = this.stack[this.stack.length - 1];\n    this.value = copy;\n    this.stack.pop();\n  }\n}\n\nexport class Vec2Uniform extends UniformBase {\n  type: Vec2UniformType;\n  value: vec2;\n  stack: vec2[];\n  constructor(location: WebGLUniformLocation, type: Vec2UniformType) {\n    super(location);\n    this.type = type;\n    this.value = vec2.create();\n    this.stack = [];\n  }\n  push(): void {\n    const copy = vec2.copy(vec2.create(), this.value);\n    this.stack.push(copy);\n  }\n  pop(): void {\n    const copy = this.stack[this.stack.length - 1];\n    this.value = vec2.copy(vec2.create(), copy);\n    this.stack.pop();\n  }\n}\n\nexport class Vec3Uniform extends UniformBase {\n  type: Vec3UniformType;\n  value: vec3;\n  stack: vec3[];\n  constructor(location: WebGLUniformLocation, type: Vec3UniformType) {\n    super(location);\n    this.type = type;\n    this.value = vec3.create();\n    this.stack = [];\n  }\n  push(): void {\n    const copy = vec3.copy(vec3.create(), this.value);\n    this.stack.push(copy);\n  }\n  pop(): void {\n    const copy = this.stack[this.stack.length - 1];\n    this.value = vec3.copy(vec3.create(), copy);\n    this.stack.pop();\n  }\n}\n\nexport class Vec4Uniform extends UniformBase {\n  type: Vec4UniformType;\n  value: vec4;\n  stack: vec4[];\n  constructor(location: WebGLUniformLocation, type: Vec4UniformType) {\n    super(location);\n    this.type = type;\n    this.value = vec4.create();\n    this.stack = [];\n  }\n  push(): void {\n    const copy = vec4.copy(vec4.create(), this.value);\n    this.stack.push(copy);\n  }\n  pop(): void {\n    const copy = this.stack[this.stack.length - 1];\n    this.value = vec4.copy(vec4.create(), copy);\n    this.stack.pop();\n  }\n}\n\nexport class Mat2Uniform extends UniformBase {\n  type: Mat2UniformType;\n  value: mat2;\n  stack: mat2[];\n  constructor(location: WebGLUniformLocation) {\n    super(location);\n    this.type = 'Matrix2f';\n    this.value = mat2.create();\n    this.stack = [];\n  }\n  push(): void {\n    const copy = mat2.copy(mat2.create(), this.value);\n    this.stack.push(copy);\n  }\n  pop(): void {\n    const copy = this.stack[this.stack.length - 1];\n    this.value = mat2.copy(mat2.create(), copy);\n    this.stack.pop();\n  }\n}\n\nexport class Mat3Uniform extends UniformBase {\n  type: Mat3UniformType;\n  value: mat3;\n  stack: mat3[];\n  constructor(location: WebGLUniformLocation) {\n    super(location);\n    this.type = 'Matrix3f';\n    this.value = mat3.create();\n    this.stack = [];\n  }\n  push(): void {\n    const copy = mat3.copy(mat3.create(), this.value);\n    this.stack.push(copy);\n  }\n  pop(): void {\n    const copy = this.stack[this.stack.length - 1];\n    this.value = mat3.copy(mat3.create(), copy);\n    this.stack.pop();\n  }\n}\n\nexport class Mat4Uniform extends UniformBase {\n  type: Mat4UniformType;\n  value: mat4;\n  stack: mat4[];\n  constructor(location: WebGLUniformLocation) {\n    super(location);\n    this.type = 'Matrix4f';\n    this.value = mat4.create();\n    this.stack = [];\n  }\n  push(): void {\n    const copy = mat4.copy(mat4.create(), this.value);\n    this.stack.push(copy);\n  }\n  pop(): void {\n    const copy = this.stack[this.stack.length - 1];\n    this.value = mat4.copy(mat4.create(), copy);\n    this.stack.pop();\n  }\n}\n\nabstract class ArrayUniformBase {\n  location: WebGLUniformLocation;\n  is_array: true;\n  abstract type: UniformType;\n  abstract value: UniformValue[];\n  constructor(location: WebGLUniformLocation) {\n    this.location = location;\n    this.is_array = true;\n  }\n}\n\nexport class ScalarArrayUniform extends ArrayUniformBase {\n  type: ScalarUniformType;\n  value: number[];\n  constructor(\n    location: WebGLUniformLocation,\n    type: ScalarUniformType,\n    size: number\n  ) {\n    super(location);\n    this.type = type;\n    this.value = [];\n    for (let i = 0; i < size; ++i) this.value.push(0);\n  }\n}\n\nexport class Vec2ArrayUniform extends ArrayUniformBase {\n  type: Vec2UniformType;\n  value: vec2[];\n  constructor(\n    location: WebGLUniformLocation,\n    type: Vec2UniformType,\n    size: number\n  ) {\n    super(location);\n    this.type = type;\n    this.value = [];\n    for (let i = 0; i < size; ++i) this.value.push(vec2.create());\n  }\n}\n\nexport class Vec3ArrayUniform extends ArrayUniformBase {\n  type: Vec3UniformType;\n  value: vec3[];\n  constructor(\n    location: WebGLUniformLocation,\n    type: Vec3UniformType,\n    size: number\n  ) {\n    super(location);\n    this.type = type;\n    this.value = [];\n    for (let i = 0; i < size; ++i) this.value.push(vec3.create());\n  }\n}\n\nexport class Vec4ArrayUniform extends ArrayUniformBase {\n  type: Vec4UniformType;\n  value: vec4[];\n  constructor(\n    location: WebGLUniformLocation,\n    type: Vec4UniformType,\n    size: number\n  ) {\n    super(location);\n    this.type = type;\n    this.value = [];\n    for (let i = 0; i < size; ++i) this.value.push(vec4.create());\n  }\n}\n\nexport class Mat2ArrayUniform extends ArrayUniformBase {\n  type: Mat2UniformType;\n  value: mat2[];\n  constructor(location: WebGLUniformLocation, size: number) {\n    super(location);\n    this.type = 'Matrix2f';\n    this.value = [];\n    for (let i = 0; i < size; ++i) this.value.push(mat2.create());\n  }\n}\n\nexport class Mat3ArrayUniform extends ArrayUniformBase {\n  type: Mat3UniformType;\n  value: mat3[];\n  constructor(location: WebGLUniformLocation, size: number) {\n    super(location);\n    this.type = 'Matrix3f';\n    this.value = [];\n    for (let i = 0; i < size; ++i) this.value.push(mat3.create());\n  }\n}\n\nexport class Mat4ArrayUniform extends ArrayUniformBase {\n  type: Mat4UniformType;\n  value: mat4[];\n  constructor(location: WebGLUniformLocation, size: number) {\n    super(location);\n    this.type = 'Matrix4f';\n    this.value = [];\n    for (let i = 0; i < size; ++i) this.value.push(mat4.create());\n  }\n}\n\nexport type Uniform =\n  | ScalarUniform\n  | Vec2Uniform\n  | Vec3Uniform\n  | Vec4Uniform\n  | Mat2Uniform\n  | Mat3Uniform\n  | Mat4Uniform;\n\nexport type ArrayUniform =\n  | ScalarArrayUniform\n  | Vec2ArrayUniform\n  | Vec3ArrayUniform\n  | Vec4ArrayUniform\n  | Mat2ArrayUniform\n  | Mat3ArrayUniform\n  | Mat4ArrayUniform;\n","export class VertexAttribute {\n  location: number;\n  name: string;\n  size: number;\n  current: number[] = [];\n  array: number[] = [];\n\n  constructor(location: number, name: string, size: number) {\n    this.location = location;\n    this.name = name;\n    this.size = size;\n  }\n}\n","import {vec3} from 'gl-matrix';\nimport {Shader} from './shader';\nimport {\n  UniformType,\n  Uniform,\n  ArrayUniform,\n  ScalarUniform,\n  Vec2Uniform,\n  Vec3Uniform,\n  Vec4Uniform,\n  Mat2Uniform,\n  Mat3Uniform,\n  Mat4Uniform,\n  ScalarArrayUniform,\n  Vec2ArrayUniform,\n  Vec3ArrayUniform,\n  Vec4ArrayUniform,\n  Mat2ArrayUniform,\n  Mat3ArrayUniform,\n  Mat4ArrayUniform,\n} from './uniform';\nimport {VertexAttribute} from './vertex-attribute';\n\nexport type Mode = 'QUADS' | number;\n\nexport interface DrawCall {\n  buffers: WebGLBuffer[];\n  mode: number;\n  num_vertices: number;\n}\n\nexport interface DispList {\n  name: string;\n  drawcalls: DrawCall[];\n}\n\nexport class DispListWrapper {\n  private legacygl: LegacyGL;\n  private name: string;\n  is_valid: boolean;\n  constructor(legacygl: LegacyGL, name: string) {\n    this.legacygl = legacygl;\n    this.name = name;\n    this.is_valid = false;\n  }\n\n  draw(drawfunc: () => void) {\n    if (!this.is_valid) {\n      this.legacygl.newList(this.name);\n      drawfunc();\n      this.legacygl.endList();\n      this.is_valid = true;\n    } else {\n      this.legacygl.callList(this.name);\n    }\n  }\n\n  invalidate() {\n    this.is_valid = false;\n  }\n}\n\nexport class LegacyGL {\n  private gl: WebGLRenderingContext;\n  private mode: Mode;\n\n  shader: Shader;\n  uniforms: {\n    [key: string]: Uniform | ArrayUniform;\n  };\n  vertex_attributes: VertexAttribute[];\n  QUADS: 'QUADS';\n  displists: {\n    [key: string]: DispList;\n  };\n  current_displist_name: string;\n  AUTO_NORMAL: string;\n  flags: {\n    [key: string]: boolean;\n  };\n\n  constructor(\n    gl: WebGLRenderingContext,\n    vertex_shader_src: string,\n    fragment_shader_src: string\n  ) {\n    this.gl = gl;\n    this.shader = new Shader(gl, vertex_shader_src, fragment_shader_src);\n    this.uniforms = {};\n    this.vertex_attributes = [];\n    // special treatment for vertex position attribute\n    this.add_vertex_attribute('vertex', 3);\n    delete this.vertex_attributes[0].current;\n    const vertex = function (x: number, y: number, z: number) {\n      for (let i = 0; i < this.vertex_attributes.length; ++i) {\n        const vertex_attribute = this.vertex_attributes[i];\n        const value =\n          vertex_attribute.name == 'vertex'\n            ? [x, y, z]\n            : vertex_attribute.current;\n        for (let j = 0; j < vertex_attribute.size; ++j)\n          vertex_attribute.array.push(value[j]);\n      }\n      // emulate GL_QUADS\n      const num_vertices = this.vertex_attributes[0].array.length / 3;\n      if (this.mode == this.QUADS && num_vertices % 6 == 4) {\n        // 6 vertices per quad (= 2 triangles)\n        const v0 = num_vertices - 4;\n        // add 2 vertices identical to [v0] and [v0+2] to construct the other half of the quad\n        for (let k = 0; k < 3; ++k) {\n          if (k == 1) continue;\n          for (let i = 0; i < this.vertex_attributes.length; ++i) {\n            const vertex_attribute = this.vertex_attributes[i];\n            for (let j = 0; j < vertex_attribute.size; ++j)\n              vertex_attribute.array.push(\n                vertex_attribute.array[vertex_attribute.size * (v0 + k) + j]\n              );\n          }\n        }\n      }\n    };\n    (this as any)['vertex'] = vertex;\n    // emulate GL_QUADS\n    this.QUADS = 'QUADS';\n    // display list\n    this.displists = {};\n    this.current_displist_name = null;\n    // emulate GL_AUTO_NORMAL\n    this.AUTO_NORMAL = 'AUTO_NORMAL';\n    this.flags = {\n      AUTO_NORMAL: false,\n    };\n  }\n\n  add_uniform(name: string, type: UniformType) {\n    const location = this.gl.getUniformLocation(\n      this.shader.program,\n      'u_' + name\n    );\n    let uniform: Uniform;\n    if (type == '1f' || type == '1i') {\n      uniform = new ScalarUniform(location, type);\n    } else if (type == '2f' || type == '2i') {\n      uniform = new Vec2Uniform(location, type);\n    } else if (type == '3f' || type == '3i') {\n      uniform = new Vec3Uniform(location, type);\n    } else if (type == '4f' || type == '4i') {\n      uniform = new Vec4Uniform(location, type);\n    } else if (type == 'Matrix2f') {\n      uniform = new Mat2Uniform(location);\n    } else if (type == 'Matrix3f') {\n      uniform = new Mat3Uniform(location);\n    } else if (type == 'Matrix4f') {\n      uniform = new Mat4Uniform(location);\n    }\n    this.uniforms[name] = uniform;\n  }\n\n  add_uniform_array(name: string, type: UniformType, size: number) {\n    const location = this.gl.getUniformLocation(\n      this.shader.program,\n      'u_' + name\n    );\n    let uniform: ArrayUniform;\n    if (type == '1f' || type == '1i') {\n      uniform = new ScalarArrayUniform(location, type, size);\n    } else if (type == '2f' || type == '2i') {\n      uniform = new Vec2ArrayUniform(location, type, size);\n    } else if (type == '3f' || type == '3i') {\n      uniform = new Vec3ArrayUniform(location, type, size);\n    } else if (type == '4f' || type == '4i') {\n      uniform = new Vec4ArrayUniform(location, type, size);\n    } else if (type == 'Matrix2f') {\n      uniform = new Mat2ArrayUniform(location, size);\n    } else if (type == 'Matrix3f') {\n      uniform = new Mat3ArrayUniform(location, size);\n    } else if (type == 'Matrix4f') {\n      uniform = new Mat4ArrayUniform(location, size);\n    }\n    this.uniforms[name] = uniform;\n  }\n\n  set_uniforms() {\n    for (const name in this.uniforms) {\n      const uniform = this.uniforms[name];\n      const type = uniform.type;\n      // in case of array type, flatten values\n      let passed_value;\n      if (uniform.is_array) {\n        passed_value = [];\n        for (let i = 0; i < uniform.value.length; ++i) {\n          const v: any = uniform.value[i];\n          if (type != '1f' && type != '1i') {\n            for (let j = 0; j < v.length; ++j) passed_value.push(v[j]);\n          } else {\n            passed_value.push(v);\n          }\n        }\n      } else {\n        passed_value = uniform.value;\n      }\n      // call appropriate WebGL function depending on data type\n      let func_name = 'uniform' + type;\n      if (uniform.is_array || (type != '1f' && type != '1i')) func_name += 'v';\n      if (type == 'Matrix2f' || type == 'Matrix3f' || type == 'Matrix4f') {\n        (this.gl as any)[func_name](uniform.location, false, passed_value);\n      } else (this.gl as any)[func_name](uniform.location, passed_value);\n    }\n  }\n\n  add_vertex_attribute(name: string, size: number) {\n    // shader location\n    const location = this.gl.getAttribLocation(\n      this.shader.program,\n      'a_' + name\n    );\n    const vertex_attribute = new VertexAttribute(location, name, size);\n    // initialize current value with 0\n    for (let i = 0; i < size; ++i) vertex_attribute.current.push(0);\n    // register current value setter func\n    (this as any)[name] = function (...args: number[]) {\n      for (let i = 0; i < size; ++i) vertex_attribute.current[i] = args[i];\n    };\n    this.gl.enableVertexAttribArray(vertex_attribute.location);\n    // add to the list\n    this.vertex_attributes.push(vertex_attribute);\n  }\n\n  begin(mode: Mode) {\n    this.set_uniforms();\n    this.mode = mode;\n    for (let i = 0; i < this.vertex_attributes.length; ++i) {\n      this.vertex_attributes[i].array = [];\n    }\n  }\n\n  end() {\n    const gl = this.gl;\n    const drawcall = {\n      buffers: [] as WebGLBuffer[],\n      mode: this.mode == this.QUADS ? gl.TRIANGLES : this.mode,\n      num_vertices: this.vertex_attributes[0].array.length / 3,\n    };\n    for (let k = 0; k < this.vertex_attributes.length; ++k) {\n      const vertex_attribute = this.vertex_attributes[k];\n      const buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      drawcall.buffers.push(buffer);\n      // simulate GL_AUTO_NORMAL\n      if (\n        drawcall.mode == gl.TRIANGLES &&\n        vertex_attribute.name == 'normal' &&\n        this.flags.AUTO_NORMAL\n      ) {\n        for (let i = 0; i < drawcall.num_vertices / 3; ++i) {\n          const v: vec3[] = [];\n          for (let j = 0; j < 3; ++j) {\n            const slicepos = 3 * (3 * i + j);\n            v.push(\n              this.vertex_attributes[0].array.slice(\n                slicepos,\n                slicepos + 3\n              ) as vec3\n            );\n          }\n          vec3.sub_ip(v[1], v[0]);\n          vec3.sub_ip(v[2], v[0]);\n          const n = vec3.cross(vec3.create(), v[1], v[2]);\n          vec3.normalize_ip(n);\n          for (let j = 0; j < 3; ++j) {\n            vertex_attribute.array.splice(3 * (3 * i + j), 3, n[0], n[1], n[2]);\n          }\n        }\n      }\n      gl.bufferData(\n        gl.ARRAY_BUFFER,\n        new Float32Array(vertex_attribute.array),\n        gl.STATIC_DRAW\n      );\n      gl.vertexAttribPointer(\n        vertex_attribute.location,\n        vertex_attribute.size,\n        gl.FLOAT,\n        false,\n        0,\n        0\n      );\n    }\n    gl.drawArrays(drawcall.mode, 0, drawcall.num_vertices);\n    // display list\n    if (this.current_displist_name) {\n      this.displists[this.current_displist_name].drawcalls.push(drawcall);\n    } else {\n      for (let i = 0; i < drawcall.buffers.length; ++i) {\n        gl.deleteBuffer(drawcall.buffers[i]);\n      }\n    }\n  }\n\n  newList(name: string) {\n    const displist = this.displists[name];\n    if (displist) {\n      // delete existing buffers\n      for (let i = 0; i < displist.drawcalls.length; ++i) {\n        const drawcall = displist.drawcalls[i];\n        for (let j = 0; j < drawcall.buffers.length; ++j) {\n          this.gl.deleteBuffer(drawcall.buffers[j]);\n        }\n      }\n      displist.drawcalls = [];\n    } else {\n      this.displists[name] = {\n        name: name,\n        drawcalls: [], // { buffers, mode, num_vertices }\n      };\n    }\n    this.current_displist_name = name;\n  }\n\n  endList() {\n    this.current_displist_name = null;\n  }\n\n  callList(name: string) {\n    const gl = this.gl;\n    const displist = this.displists[name];\n    if (!displist) return;\n    this.set_uniforms();\n    for (let k = 0; k < displist.drawcalls.length; ++k) {\n      const drawcall = displist.drawcalls[k];\n      for (let i = 0; i < this.vertex_attributes.length; ++i) {\n        const vertex_attribute = this.vertex_attributes[i];\n        gl.bindBuffer(gl.ARRAY_BUFFER, drawcall.buffers[i]);\n        gl.vertexAttribPointer(\n          vertex_attribute.location,\n          vertex_attribute.size,\n          gl.FLOAT,\n          false,\n          0,\n          0\n        );\n      }\n      gl.drawArrays(drawcall.mode, 0, drawcall.num_vertices);\n    }\n  }\n\n  displist_wrapper(name: string) {\n    const wrapper = new DispListWrapper(this, name);\n    return wrapper;\n  }\n\n  enable(flag: string) {\n    this.flags[flag] = true;\n  }\n\n  disable(flag: string) {\n    this.flags[flag] = false;\n  }\n}\n\nexport interface LegacyGL {\n  vertex?(x: number, y: number, z: number): void;\n  color?(r: number, g: number, b: number): void;\n}\n\nexport function get_legacygl(\n  gl: WebGLRenderingContext,\n  vertex_shader_src: string,\n  fragment_shader_src: string\n) {\n  return new LegacyGL(gl, vertex_shader_src, fragment_shader_src);\n}\n","import {vec3} from 'gl-matrix';\n\nexport class BBox {\n  private min: vec3;\n  private max: vec3;\n\n  constructor() {\n    this.set_empty();\n  }\n\n  set_empty() {\n    this.min = [Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE];\n    this.max = [-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE];\n  }\n\n  extend(p: vec3) {\n    this.min = vec3.min(this.min, this.min, p);\n    this.max = vec3.max(this.max, this.max, p);\n  }\n\n  diagonal() {\n    return vec3.sub(vec3.create(), this.max, this.min);\n  }\n\n  diagonal_norm() {\n    return vec3.len(this.diagonal());\n  }\n\n  center() {\n    return vec3.lerp(vec3.create(), this.max, this.min, 0.5);\n  }\n\n  is_empty() {\n    return !(\n      this.min[0] < this.max[0] &&\n      this.min[1] < this.max[1] &&\n      this.min[2] < this.max[2]\n    );\n  }\n}\n\nexport function make_boundingbox() {\n  return new BBox();\n}\n","import {vec2, vec3, quat, mat4} from 'gl-matrix';\n\ntype CameraMode = 'none' | 'rotate' | 'pan' | 'zoom';\n\nexport class Camera {\n  private viewport_width: number;\n\n  eye: vec3;\n  center: vec3;\n  up: vec3;\n  mode: CameraMode;\n  prevpos: vec2;\n\n  constructor(viewport_width: number) {\n    this.viewport_width = viewport_width;\n    this.eye = [0, 0, 1];\n    this.center = [0, 0, 0];\n    this.up = [0, 1, 0];\n    this.mode = 'none';\n    this.prevpos = vec2.create();\n  }\n\n  center_to_eye() {\n    return vec3.sub(vec3.create(), this.eye, this.center);\n  }\n\n  eye_to_center() {\n    return vec3.sub(vec3.create(), this.center, this.eye);\n  }\n\n  right() {\n    return vec3.normalize(\n      vec3.create(),\n      vec3.cross(vec3.create(), this.eye_to_center(), this.up)\n    );\n  }\n\n  lookAt(modelview_matrix: mat4) {\n    mat4.lookAt(modelview_matrix, this.eye, this.center, this.up);\n  }\n\n  is_moving() {\n    return this.mode != 'none';\n  }\n\n  start_moving(mousepos: vec2, mode: CameraMode) {\n    vec2.copy(this.prevpos, mousepos);\n    this.mode = mode;\n    // correct up vector\n    this.up = vec3.normalize(\n      vec3.create(),\n      vec3.cross(vec3.create(), this.right(), this.eye_to_center())\n    );\n  }\n\n  move(mousepos: vec2) {\n    const diff = vec2.scale_ip(\n      vec2.sub(vec2.create(), mousepos, this.prevpos),\n      1 / this.viewport_width\n    );\n    if (this.mode == 'rotate') {\n      const theta = vec2.scale(vec2.create(), diff, 1.7 * Math.PI);\n      const rot_hrz = quat.setAxisAngle(quat.create(), this.up, -theta[0]);\n      const rot_vrt = quat.setAxisAngle(quat.create(), this.right(), theta[1]);\n      const rot = quat.mul(quat.create(), rot_vrt, rot_hrz);\n      this.eye = vec3.transformQuat(vec3.create(), this.center_to_eye(), rot);\n      vec3.add_ip(this.eye, this.center);\n      vec3.transformQuat_ip(this.up, rot);\n    } else if (this.mode == 'pan') {\n      const s = vec2.scale(vec2.create(), diff, vec3.len(this.center_to_eye()));\n      const d0 = vec3.scale(vec3.create(), this.right(), -s[0]);\n      const d1 = vec3.scale(vec3.create(), this.up, -s[1]);\n      const d = vec3.add(vec3.create(), d0, d1);\n      vec3.add_ip(this.eye, d);\n      vec3.add_ip(this.center, d);\n    } else if (this.mode == 'zoom') {\n      const d = vec3.scale(\n        vec3.create(),\n        this.eye_to_center(),\n        diff[0] - diff[1]\n      );\n      vec3.add_ip(this.eye, d);\n    }\n    vec2.copy(this.prevpos, mousepos);\n  }\n\n  finish_moving() {\n    this.mode = 'none';\n  }\n}\n\nexport function get_camera(viewport_width: number) {\n  return new Camera(viewport_width);\n}\n","import {vec3} from 'gl-matrix';\nimport {LegacyGL} from './legacygl';\n\nexport class DrawUtil {\n  private gl: WebGLRenderingContext;\n  private legacygl: LegacyGL;\n\n  constructor(gl: WebGLRenderingContext, legacygl: LegacyGL) {\n    this.gl = gl;\n    this.legacygl = legacygl;\n  }\n\n  xyzaxis() {\n    this.legacygl.begin(this.gl.LINES);\n    this.legacygl.color(1, 0, 0);\n    this.legacygl.vertex(0, 0, 0);\n    this.legacygl.vertex(1, 0, 0);\n    this.legacygl.color(0, 1, 0);\n    this.legacygl.vertex(0, 0, 0);\n    this.legacygl.vertex(0, 1, 0);\n    this.legacygl.color(0, 0, 1);\n    this.legacygl.vertex(0, 0, 0);\n    this.legacygl.vertex(0, 0, 1);\n    this.legacygl.end();\n  }\n\n  xygrid(size: number) {\n    this.legacygl.begin(this.gl.LINES);\n    for (let i = -size; i <= size; ++i) {\n      this.legacygl.vertex(i, -size, 0);\n      this.legacygl.vertex(i, size, 0);\n      this.legacygl.vertex(-size, i, 0);\n      this.legacygl.vertex(size, i, 0);\n    }\n    this.legacygl.end();\n  }\n\n  yzgrid(size: number) {\n    this.legacygl.begin(this.gl.LINES);\n    for (let i = -size; i <= size; ++i) {\n      this.legacygl.vertex(0, i, -size);\n      this.legacygl.vertex(0, i, size);\n      this.legacygl.vertex(0, -size, i);\n      this.legacygl.vertex(0, size, i);\n    }\n    this.legacygl.end();\n  }\n\n  zxgrid(size: number) {\n    this.legacygl.begin(this.gl.LINES);\n    for (let i = -size; i <= size; ++i) {\n      this.legacygl.vertex(i, 0, -size);\n      this.legacygl.vertex(i, 0, size);\n      this.legacygl.vertex(-size, 0, i);\n      this.legacygl.vertex(size, 0, i);\n    }\n    this.legacygl.end();\n  }\n\n  quadmesh(mode: string, vertices: number[], faces: number[]) {\n    this.legacygl.begin(mode == 'line' ? this.gl.LINES : this.legacygl.QUADS);\n    for (let f = 0; f < faces.length / 4; ++f) {\n      for (let i = 0; i < 4; ++i) {\n        const v0 = faces[4 * f + i];\n        const x0 = vertices[3 * v0];\n        const y0 = vertices[3 * v0 + 1];\n        const z0 = vertices[3 * v0 + 2];\n        this.legacygl.vertex(x0, y0, z0);\n        if (mode == 'line') {\n          const v1 = faces[4 * f + ((i + 1) % 4)];\n          const x1 = vertices[3 * v1];\n          const y1 = vertices[3 * v1 + 1];\n          const z1 = vertices[3 * v1 + 2];\n          this.legacygl.vertex(x1, y1, z1);\n        }\n      }\n    }\n    this.legacygl.end();\n  }\n\n  trimesh(mode: string, vertices: number[], faces: number[]) {\n    this.legacygl.begin(mode == 'line' ? this.gl.LINES : this.gl.TRIANGLES);\n    for (let f = 0; f < faces.length / 3; ++f) {\n      for (let i = 0; i < 3; ++i) {\n        const v0 = faces[3 * f + i];\n        const x0 = vertices[3 * v0];\n        const y0 = vertices[3 * v0 + 1];\n        const z0 = vertices[3 * v0 + 2];\n        this.legacygl.vertex(x0, y0, z0);\n        if (mode == 'line') {\n          const v1 = faces[3 * f + ((i + 1) % 3)];\n          const x1 = vertices[3 * v1];\n          const y1 = vertices[3 * v1 + 1];\n          const z1 = vertices[3 * v1 + 2];\n          this.legacygl.vertex(x1, y1, z1);\n        }\n      }\n    }\n    this.legacygl.end();\n  }\n\n  cube(mode: string, size: number) {\n    const r = size / 2;\n    this.quadmesh(\n      mode,\n      [\n        // vertices\n        -r,\n        -r,\n        -r,\n        r,\n        -r,\n        -r,\n        -r,\n        r,\n        -r,\n        r,\n        r,\n        -r,\n        -r,\n        -r,\n        r,\n        r,\n        -r,\n        r,\n        -r,\n        r,\n        r,\n        r,\n        r,\n        r,\n      ],\n      [\n        // faces\n        1,\n        3,\n        7,\n        5, // positive-x\n        3,\n        2,\n        6,\n        7, // positive-y\n        2,\n        0,\n        4,\n        6, // negative-x\n        0,\n        1,\n        5,\n        4, // negative-y\n        4,\n        5,\n        7,\n        6, // positive-z\n        0,\n        2,\n        3,\n        1, // negative-z\n      ]\n    );\n  }\n\n  circle(mode: string, size: number, numdiv?: number) {\n    if (!numdiv) numdiv = 12;\n    const r = size / 2;\n    this.legacygl.begin(\n      mode == 'line' ? this.gl.LINE_LOOP : this.gl.TRIANGLE_FAN\n    );\n    for (let i = 0; i < numdiv; ++i) {\n      const theta = (i * 2 * Math.PI) / numdiv;\n      const x = r * Math.cos(theta);\n      const y = r * Math.sin(theta);\n      this.legacygl.vertex(x, y, 0);\n    }\n    this.legacygl.end();\n  }\n\n  sphere(mode: string, radius: number, slices: number, stacks: number) {\n    function angle2pos(theta: number, phi: number) {\n      const x = radius * Math.cos(theta) * Math.sin(phi);\n      const y = radius * Math.sin(theta) * Math.sin(phi);\n      const z = radius * Math.cos(phi);\n      return [x, y, z];\n    }\n    this.legacygl.begin(mode == 'line' ? this.gl.LINES : this.legacygl.QUADS);\n    let phi = 0;\n    const dphi = Math.PI / stacks;\n    for (let i = 0; i < stacks; ++i, phi += dphi) {\n      let theta = 0;\n      const dtheta = (2 * Math.PI) / slices;\n      for (let j = 0; j < slices; ++j, theta += dtheta) {\n        const p = [\n          angle2pos(theta, phi),\n          angle2pos(theta + dtheta, phi),\n          angle2pos(theta + dtheta, phi + dphi),\n          angle2pos(theta, phi + dphi),\n        ];\n        for (let k = 0; k < 4; ++k) {\n          this.legacygl.vertex(p[k][0], p[k][1], p[k][2]);\n          if (mode == 'line') {\n            const k1 = (k + 1) % 4;\n            this.legacygl.vertex(p[k1][0], p[k1][1], p[k1][2]);\n          }\n        }\n      }\n    }\n    this.legacygl.end();\n  }\n\n  triangle_with_lines(p0: vec3, p1: vec3, p2: vec3, num_lines = 10) {\n    const p = [p0, p1, p2];\n    this.legacygl.begin(this.gl.LINES);\n    for (let i = 0; i < num_lines; ++i) {\n      const t = i / num_lines;\n      for (let j = 0; j < 3; ++j) {\n        const a = vec3.lerp([0, 0, 0], p[j], p[(j + 2) % 3], t);\n        const b = vec3.lerp([0, 0, 0], p[(j + 1) % 3], p[(j + 2) % 3], t);\n        this.legacygl.vertex(a[0], a[1], a[2]);\n        this.legacygl.vertex(b[0], b[1], b[2]);\n      }\n    }\n    this.legacygl.end();\n  }\n\n  quad_with_lines(p0: vec3, p1: vec3, p2: vec3, p3: vec3, num_lines = 10) {\n    this.legacygl.begin(this.gl.LINES);\n    for (let i = 0; i <= num_lines; ++i) {\n      const t = i / num_lines;\n      {\n        const a = vec3.lerp([0, 0, 0], p0, p1, t);\n        const b = vec3.lerp([0, 0, 0], p3, p2, t);\n        this.legacygl.vertex(a[0], a[1], a[2]);\n        this.legacygl.vertex(b[0], b[1], b[2]);\n      }\n      {\n        const a = vec3.lerp([0, 0, 0], p0, p3, t);\n        const b = vec3.lerp([0, 0, 0], p1, p2, t);\n        this.legacygl.vertex(a[0], a[1], a[2]);\n        this.legacygl.vertex(b[0], b[1], b[2]);\n      }\n    }\n    this.legacygl.end();\n  }\n}\n\nexport function get_drawutil(\n  gl: WebGLRenderingContext,\n  legacygl: LegacyGL\n): DrawUtil {\n  return new DrawUtil(gl, legacygl);\n}\n","import {vec2, vec3} from 'gl-matrix';\n\nexport class Vertex {\n  id: number;\n  halfedge: HalfEdge;\n  point: vec3;\n  normal: vec3;\n\n  constructor() {\n    this.halfedge = null;\n    this.point = null;\n    this.normal = null;\n  }\n\n  outgoing_halfedges() {\n    const result = [];\n    let h = this.halfedge;\n    for (;;) {\n      result.push(h);\n      h = h.opposite.next;\n      if (h == this.halfedge) break;\n    }\n    return result;\n  }\n\n  incoming_halfedges() {\n    return this.outgoing_halfedges().map(function (h) {\n      return h.opposite;\n    });\n  }\n\n  vertices() {\n    return this.outgoing_halfedges().map(function (h) {\n      return h.vertex;\n    });\n  }\n\n  faces() {\n    const result: Face[] = [];\n    this.outgoing_halfedges().forEach(function (h) {\n      if (h.face) result.push(h.face);\n    });\n    return result;\n  }\n\n  edges() {\n    return this.outgoing_halfedges().map(function (h) {\n      return h.edge;\n    });\n  }\n\n  is_boundary() {\n    return this.halfedge.is_boundary();\n  }\n\n  degree() {\n    return this.outgoing_halfedges().length;\n  }\n}\n\nexport class Face {\n  id: number;\n  halfedge: HalfEdge;\n  normal: vec3;\n\n  halfedges() {\n    const result = [];\n    let h = this.halfedge;\n    for (;;) {\n      result.push(h);\n      h = h.next;\n      if (h == this.halfedge) break;\n    }\n    return result;\n  }\n\n  vertices() {\n    return this.halfedges().map(function (h) {\n      return h.vertex;\n    });\n  }\n\n  faces() {\n    return this.halfedges().map(function (h) {\n      return h.opposite.face;\n    });\n  }\n\n  edges() {\n    return this.halfedges().map(function (h) {\n      return h.edge;\n    });\n  }\n\n  is_boundary() {\n    return this.halfedges().some(function (h) {\n      return h.opposite.is_boundary();\n    });\n  }\n\n  centroid() {\n    const result: vec3 = [0, 0, 0];\n    let cnt = 0;\n    this.vertices().forEach(function (v) {\n      vec3.add_ip(result, v.point);\n      ++cnt;\n    });\n    return vec3.scale_ip(result, 1 / cnt);\n  }\n\n  degree() {\n    return this.halfedges().length;\n  }\n}\n\nexport class HalfEdge {\n  id: number;\n  vertex: Vertex;\n  face: Face;\n  edge: Edge;\n  next: HalfEdge;\n  prev: HalfEdge;\n  opposite: HalfEdge;\n  texcoord: vec2;\n  normal: vec3;\n\n  from_vertex() {\n    return this.opposite.vertex;\n  }\n\n  is_boundary() {\n    return this.face == null;\n  }\n}\n\nexport class Edge {\n  id: number;\n  halfedge: HalfEdge;\n\n  halfedges() {\n    return [this.halfedge, this.halfedge.opposite];\n  }\n\n  vertices() {\n    return this.halfedges().map(function (h) {\n      return h.vertex;\n    });\n  }\n\n  faces() {\n    return this.halfedges().map(function (h) {\n      return h.face;\n    });\n  }\n\n  is_boundary() {\n    return this.halfedges().some(function (h) {\n      return h.is_boundary();\n    });\n  }\n}\n\nexport class Mesh {\n  vertices: Vertex[];\n  faces: Face[];\n  halfedges: {[key: string]: HalfEdge};\n  edges: {[key: string]: Edge};\n\n  constructor() {\n    this.vertices = [];\n    this.faces = [];\n    this.halfedges = {};\n    this.edges = {};\n  }\n\n  add_face(\n    fv_indices: number[],\n    face_normals?: vec3[],\n    face_texcoords?: vec2[]\n  ) {\n    // check the size consistency for face_normals & face_texcoords\n    if (face_normals && face_normals.length != fv_indices.length) {\n      console.log('The size of face_normals is inconsistent with fv_indices');\n      return;\n    }\n    if (face_texcoords && face_texcoords.length != fv_indices.length) {\n      console.log('The size of face_texcoords is inconsistent with fv_indices');\n      return;\n    }\n    // check for existence of nonmanifold edges\n    for (let k = 0; k < fv_indices.length; ++k) {\n      const i = fv_indices[k];\n      const j = fv_indices[(k + 1) % fv_indices.length];\n      const h_key = i + ':' + j;\n      const h = this.halfedges[h_key];\n      if (h && h.face) {\n        console.log('Nonmanifold edge found at (' + [i, j] + ')');\n        return;\n      }\n    }\n    const face = new Face();\n    for (let k = 0; k < fv_indices.length; ++k) {\n      const i = fv_indices[k];\n      const j = fv_indices[(k + 1) % fv_indices.length];\n      // two vertices\n      let vi = this.vertices[i];\n      let vj = this.vertices[j];\n      if (!vi) vi = this.vertices[i] = new Vertex();\n      if (!vj) vj = this.vertices[j] = new Vertex();\n      // edge and two halfedges\n      const hij_key = i + ':' + j;\n      const hji_key = j + ':' + i;\n      const eij_key = Math.min(i, j) + ':' + Math.max(i, j);\n      let eij = this.edges[eij_key];\n      let hij, hji;\n      if (!eij) {\n        hij = this.halfedges[hij_key] = new HalfEdge();\n        hji = this.halfedges[hji_key] = new HalfEdge();\n        eij = this.edges[eij_key] = new Edge();\n      } else {\n        hij = this.halfedges[hij_key];\n        hji = this.halfedges[hji_key];\n      }\n      // connectivity around vertices\n      vi.halfedge = hij;\n      vj.halfedge = hji;\n      // connectivity around halfedges\n      hij.vertex = vj;\n      hji.vertex = vi;\n      hij.opposite = hji;\n      hji.opposite = hij;\n      hij.edge = hji.edge = eij;\n      eij.halfedge = hij;\n      hij.face = face;\n      // connectivity around face\n      face.halfedge = hij;\n    }\n    // set prev/next for halfedges, link from vertex to halfedge\n    for (let k = 0; k < fv_indices.length; ++k) {\n      const i0 = fv_indices[k];\n      const i1 = fv_indices[(k + 1) % fv_indices.length];\n      const i2 = fv_indices[(k + 2) % fv_indices.length];\n      const h01 = this.halfedges[i0 + ':' + i1];\n      const h12 = this.halfedges[i1 + ':' + i2];\n      h01.next = h12;\n      h12.prev = h01;\n    }\n    // set normal & texcoord for from_vertex of each halfedge\n    for (let k = 0; k < fv_indices.length; ++k) {\n      const i = fv_indices[k];\n      const j = fv_indices[(k + 1) % fv_indices.length];\n      const h_key = i + ':' + j;\n      const h = this.halfedges[h_key];\n      if (!h) {\n        console.log('Something weird is happening!');\n        return;\n      }\n      if (face_normals) {\n        h.normal = face_normals[k];\n      }\n      if (face_texcoords) {\n        h.texcoord = face_texcoords[k];\n      }\n    }\n    this.faces.push(face);\n  }\n\n  halfedges_forEach(func: (halfedge: HalfEdge, index: number) => void) {\n    Object.keys(this.halfedges).forEach((key, index) => {\n      func(this.halfedges[key], index);\n    });\n  }\n\n  edges_forEach(func: (edge: Edge, index: number) => void) {\n    Object.keys(this.edges).forEach((key, index) => {\n      func(this.edges[key], index);\n    });\n  }\n\n  init_ids() {\n    // make vertices a contiguous array\n    for (let vid = 0; vid < this.vertices.length; ++vid) {\n      this.vertices[vid].id = vid;\n    }\n    this.faces.forEach(function (f, i) {\n      f.id = i;\n    });\n    this.edges_forEach(function (e, i) {\n      e.id = i;\n    });\n    this.halfedges_forEach(function (h, i) {\n      h.id = i;\n    });\n  }\n\n  init_boundaries() {\n    // make sure that boundary vertex is linked to boundary halfedge, next/prev ordering between boundary halfedges\n    this.halfedges_forEach(function (h) {\n      if (h.is_boundary()) h.from_vertex().halfedge = h;\n    });\n    this.halfedges_forEach(function (h) {\n      if (h.is_boundary()) {\n        h.next = h.vertex.halfedge;\n        h.vertex.halfedge.prev = h;\n      }\n    });\n  }\n\n  num_vertices() {\n    return this.vertices.length;\n  }\n\n  num_faces() {\n    return this.faces.length;\n  }\n\n  num_edges() {\n    return Object.keys(this.edges).length;\n  }\n\n  compute_normals() {\n    // per-face\n    this.faces.forEach(function (f) {\n      f.normal = [0, 0, 0];\n      f.halfedges().forEach(function (h) {\n        const p0 = h.from_vertex().point;\n        const p1 = h.vertex.point;\n        const p2 = h.next.vertex.point;\n        const d1 = vec3.sub(vec3.create(), p1, p0);\n        const d2 = vec3.sub(vec3.create(), p2, p0);\n        const n = vec3.cross(vec3.create(), d1, d2);\n        vec3.add_ip(f.normal, n);\n      });\n      vec3.normalize_ip(f.normal);\n    });\n    // per-vertex\n    this.vertices.forEach(function (v) {\n      v.normal = [0, 0, 0];\n      if (v.faces === undefined) return;\n      v.faces().forEach(function (f) {\n        vec3.add_ip(v.normal, f.normal);\n      });\n      vec3.normalize_ip(v.normal);\n    });\n  }\n}\n\nexport function make_halfedge_mesh() {\n  return new Mesh();\n}\n","import {vec2} from 'gl-matrix';\n\ndeclare global {\n  interface HTMLCanvasElement {\n    get_mousepos(event: MouseEvent, flip_y?: boolean): vec2;\n    get_touchpos(event: TouchEvent, flip_y?: boolean): vec2;\n    aspect_ratio(): number;\n  }\n}\nif (typeof window !== `undefined`) {\n  HTMLCanvasElement.prototype.get_mousepos = function (event, flip_y) {\n    let totalOffsetX = 0;\n    let totalOffsetY = 0;\n    for (\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let currentElement = this;\n      currentElement;\n      currentElement = currentElement.offsetParent\n    ) {\n      totalOffsetX += currentElement.offsetLeft;\n      totalOffsetY += currentElement.offsetTop;\n    }\n    for (\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let currentElement = this;\n      currentElement && currentElement != document.body;\n      currentElement = currentElement.parentElement\n    ) {\n      totalOffsetX -= currentElement.scrollLeft;\n      totalOffsetY -= currentElement.scrollTop;\n    }\n    const x = event.pageX - totalOffsetX;\n    let y = event.pageY - totalOffsetY;\n    if (flip_y === undefined || flip_y)\n      // flip y by default\n      y = this.height - y;\n    return [x, y];\n  };\n  HTMLCanvasElement.prototype.get_touchpos = function (event, flip_y) {\n    let totalOffsetX = 0;\n    let totalOffsetY = 0;\n    for (\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let currentElement = this;\n      currentElement;\n      currentElement = currentElement.offsetParent\n    ) {\n      totalOffsetX += currentElement.offsetLeft;\n      totalOffsetY += currentElement.offsetTop;\n    }\n    for (\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let currentElement = this;\n      currentElement && currentElement != document.body;\n      currentElement = currentElement.parentElement\n    ) {\n      totalOffsetX -= currentElement.scrollLeft;\n      totalOffsetY -= currentElement.scrollTop;\n    }\n    const x = event.changedTouches[0].pageX - totalOffsetX;\n    let y = event.changedTouches[0].pageY - totalOffsetY;\n    if (flip_y === undefined || flip_y)\n      // flip y by default\n      y = this.height - y;\n    return [x, y];\n  };\n  HTMLCanvasElement.prototype.aspect_ratio = function () {\n    return this.width / this.height;\n  };\n}\n\nexport function get_filename_extension(filename: string) {\n  return '.' + filename.toLowerCase().split(/#|\\?/)[0].split('.').pop().trim(); // https://stackoverflow.com/a/47767860\n}\nexport function verify_filename_extension(\n  filename: string,\n  supported_extensions: string[]\n) {\n  const given_extension = get_filename_extension(filename);\n  if (\n    supported_extensions.some(function (x: string) {\n      return x == given_extension;\n    })\n  )\n    return given_extension;\n  alert('Supported formats are: ' + supported_extensions);\n  return undefined;\n}\n","import {vec2, vec3} from 'gl-matrix';\nimport {get_filename_extension} from './util';\nimport {make_halfedge_mesh, Mesh} from './halfedge';\n\nexport function read_obj(file_content: string) {\n  const mesh = make_halfedge_mesh();\n  const points: vec3[] = [];\n  const normals: vec3[] = [];\n  const texcoords: vec2[] = [];\n  file_content.split('\\n').forEach(function (line) {\n    const tokens = line.trim().split(/\\s+/);\n    if (tokens.length < 4 || tokens[0][0] == '#') return;\n    const head = tokens[0];\n    if (head == 'v') {\n      const x = parseFloat(tokens[1]);\n      const y = parseFloat(tokens[2]);\n      const z = parseFloat(tokens[3]);\n      points.push([x, y, z]);\n    } else if (head == 'vn') {\n      const x = parseFloat(tokens[1]);\n      const y = parseFloat(tokens[2]);\n      const z = parseFloat(tokens[3]);\n      normals.push([x, y, z]);\n    } else if (head == 'vt') {\n      const u = parseFloat(tokens[1]);\n      const v = parseFloat(tokens[2]);\n      texcoords.push([u, v]);\n    } else if (head == 'f') {\n      const fv_indices = [];\n      let face_texcoords = [];\n      let face_normals = [];\n      for (let i = 1; i < tokens.length; ++i) {\n        const tokens2 = tokens[i].split('/');\n        fv_indices.push(parseInt(tokens2[0]) - 1);\n        if (tokens2.length > 1 && tokens2[1].length > 0) {\n          const vt_idx = parseInt(tokens2[1]) - 1;\n          if (vt_idx < texcoords.length) face_texcoords.push(texcoords[vt_idx]);\n        }\n        if (tokens2.length > 2 && tokens2[2].length > 0) {\n          const vn_idx = parseInt(tokens2[2]) - 1;\n          if (vn_idx < normals.length) face_normals.push(normals[vn_idx]);\n        }\n      }\n      if (face_normals.length != fv_indices.length) {\n        face_normals = null;\n      }\n      if (face_texcoords.length != fv_indices.length) {\n        face_texcoords = null;\n      }\n      mesh.add_face(fv_indices, face_normals, face_texcoords);\n    }\n  });\n  for (let i = 0; i < points.length; ++i) mesh.vertices[i].point = points[i];\n  mesh.init_ids();\n  mesh.init_boundaries();\n  return mesh;\n}\n\nexport function read_off(file_content: string) {\n  const mesh = make_halfedge_mesh();\n  let magic;\n  let num_vertices;\n  let num_faces;\n  const points: vec3[] = [];\n  const lines = file_content.split('\\n');\n  let cnt_vertices = 0;\n  let cnt_faces = 0;\n  for (let i = 0; i < lines.length; ++i) {\n    const line = lines[i];\n    const tokens = line.trim().split(' ');\n    if (tokens.length == 0 || tokens[0][0] == '#') continue;\n    if (!magic) {\n      if (tokens[0] != 'OFF') {\n        console.log('Bad magic: ' + tokens[0]);\n        return;\n      }\n      magic = true;\n    } else if (!num_vertices) {\n      num_vertices = parseInt(tokens[0]);\n      num_faces = parseInt(tokens[1]);\n    } else if (cnt_vertices < num_vertices) {\n      const x = parseFloat(tokens[0]);\n      const y = parseFloat(tokens[1]);\n      const z = parseFloat(tokens[2]);\n      points.push([x, y, z]);\n      ++cnt_vertices;\n    } else if (cnt_faces < num_faces) {\n      const fv_indices = [];\n      for (let j = 1; j < tokens.length; ++j)\n        fv_indices.push(parseInt(tokens[j]));\n      if (parseInt(tokens[0]) != fv_indices.length)\n        console.log('Inconsistent face-vertex count: ' + tokens);\n      mesh.add_face(fv_indices);\n      ++cnt_faces;\n    }\n  }\n  if (cnt_faces != num_faces)\n    console.log(\n      'Inconsistent face count: ' +\n        num_faces +\n        ' as declared vs ' +\n        cnt_faces +\n        ' found'\n    );\n  for (let i = 0; i < points.length; ++i) mesh.vertices[i].point = points[i];\n  mesh.init_ids();\n  mesh.init_boundaries();\n  return mesh;\n}\n\nexport function read(filename: string, content: string) {\n  const file_extension = get_filename_extension(filename);\n  if (file_extension == '.obj') return read_obj(content);\n  if (file_extension == '.off') return read_off(content);\n  console.log('Unsupported format: ' + file_extension);\n}\n\nexport function write_obj(mesh: Mesh) {\n  const lines: string[] = [];\n  mesh.vertices.forEach(function (v) {\n    let line = 'v ';\n    for (let i = 0; i < 3; ++i) line += v.point[i] + ' ';\n    lines.push(line);\n  });\n  mesh.faces.forEach(function (f) {\n    let line = 'f ';\n    f.vertices().forEach(function (v) {\n      line += v.id + 1 + ' ';\n    });\n    lines.push(line);\n  });\n  return lines.join('\\n');\n}\n\nexport function write_off(mesh: Mesh) {\n  const lines = ['OFF'];\n  lines.push(mesh.num_vertices() + ' ' + mesh.num_faces() + ' 0');\n  mesh.vertices.forEach(function (v) {\n    let line = '';\n    for (let i = 0; i < 3; ++i) line += v.point[i] + ' ';\n    lines.push(line);\n  });\n  mesh.faces.forEach(function (f) {\n    const f_vertices = f.vertices();\n    let line = f_vertices.length + ' ';\n    f_vertices.forEach(function (v) {\n      line += v.id + ' ';\n    });\n    lines.push(line);\n  });\n  return lines.join('\\n');\n}\n\nexport function write(mesh: Mesh, filename: string) {\n  const file_extension = get_filename_extension(filename);\n  if (file_extension == '.obj') return write_obj(mesh);\n  if (file_extension == '.off') return write_off(mesh);\n  console.log('Unsupported format: ' + file_extension);\n}\n","import {vec3, vec4, mat4} from 'gl-matrix';\n\nexport function project(\n  obj_xyz: vec3,\n  modelview: mat4,\n  projection: mat4,\n  viewport: vec4\n) {\n  // object coordinate to normalized device coordinate\n  const m = mat4.mul(mat4.create(), projection, modelview);\n  const ndc = vec4.transformMat4(\n    vec4.create(),\n    [obj_xyz[0], obj_xyz[1], obj_xyz[2], 1],\n    m\n  );\n  vec4.scale_ip(ndc, 1 / ndc[3]);\n  // normalized device coordinate to viewport coordinate\n  const win_x = ((ndc[0] + 1) * viewport[2]) / 2 + viewport[0];\n  const win_y = ((ndc[1] + 1) * viewport[3]) / 2 + viewport[1];\n  const win_z = (ndc[2] + 1) / 2;\n  return [win_x, win_y, win_z] as vec3;\n}\n\nexport function unproject(\n  win_xyz: vec3,\n  modelview: mat4,\n  projection: mat4,\n  viewport: vec4\n) {\n  // viewport coordinate to normalized device coordinate\n  const ndc_x = ((win_xyz[0] - viewport[0]) * 2) / viewport[2] - 1;\n  const ndc_y = ((win_xyz[1] - viewport[1]) * 2) / viewport[3] - 1;\n  const ndc_z = win_xyz[2] * 2 - 1;\n  const ndc: vec4 = [ndc_x, ndc_y, ndc_z, 1];\n  // normalized device coordinate to object coordinate\n  const m = mat4.mul(mat4.create(), projection, modelview);\n  mat4.invert_ip(m);\n  const obj_xyzw = vec4.transformMat4(vec4.create(), ndc, m);\n  vec4.scale_ip(obj_xyzw, 1 / obj_xyzw[3]);\n  return [obj_xyzw[0], obj_xyzw[1], obj_xyzw[2]] as vec3;\n}\n\nexport function ortho2D(\n  out: mat4,\n  left: number,\n  right: number,\n  bottom: number,\n  top: number\n) {\n  return mat4.ortho(out, left, right, bottom, top, -1, 1);\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport {vec2, vec3, vec4, mat4} from 'gl-matrix';\nimport {rhythm, scale} from '../../../src/lib/typography';\nimport {Canvas} from '../../../src/components/atoms';\nimport {\n  glu,\n  get_camera,\n  get_drawutil,\n  get_legacygl,\n  Camera,\n  DrawUtil,\n  LegacyGL,\n} from '../../../src/lib/legacygl';\n\ndeclare module '../../../src/lib/legacygl' {\n  interface LegacyGL {\n    vertex2(p: vec2): void;\n  }\n}\n\nlet gl: WebGLRenderingContext;\nlet canvas: HTMLCanvasElement;\nlet legacygl: LegacyGL;\nlet drawutil: DrawUtil;\nlet camera: Camera;\nlet p0: vec2, p1: vec2, p2: vec2;\nlet selected: vec2 = null;\n\nfunction eval_quadratic_bezier(p0: vec2, p1: vec2, p2: vec2, t: number) {\n  const p01 = vec2.scaleAndAdd_ip(vec2.scale(vec2.create(), p0, 1 - t), p1, t);\n  const p12 = vec2.scaleAndAdd_ip(vec2.scale(vec2.create(), p1, 1 - t), p2, t);\n  return vec2.scaleAndAdd_ip(vec2.scale(vec2.create(), p01, 1 - t), p12, t);\n}\n\nfunction draw() {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  // projection & camera position\n  mat4.perspective(\n    legacygl.uniforms.projection.value as mat4,\n    Math.PI / 6,\n    canvas.aspect_ratio(),\n    0.1,\n    1000\n  );\n  const modelview = legacygl.uniforms.modelview;\n  camera.lookAt(modelview.value as mat4);\n\n  // xy grid\n  gl.lineWidth(1);\n  legacygl.color(0.5, 0.5, 0.5);\n  drawutil.xygrid(100);\n\n  // draw line segments composing curve\n  legacygl.color(1, 0.6, 0.2);\n  legacygl.begin(gl.LINE_STRIP);\n  const input_numsteps = document.getElementById(\n    'input_numsteps'\n  ) as HTMLInputElement;\n  const numsteps = Number(input_numsteps.value);\n  for (let i = 0; i <= numsteps; ++i) {\n    const t = i / numsteps;\n    legacygl.vertex2(eval_quadratic_bezier(p0, p1, p2, t));\n  }\n  legacygl.end();\n  // draw sample points\n  const input_show_samplepoints = document.getElementById(\n    'input_show_samplepoints'\n  ) as HTMLInputElement;\n  if (input_show_samplepoints.checked) {\n    legacygl.begin(gl.POINTS);\n    for (let i = 0; i <= numsteps; ++i) {\n      const t = i / numsteps;\n      legacygl.vertex2(eval_quadratic_bezier(p0, p1, p2, t));\n    }\n    legacygl.end();\n  }\n  // draw control points\n  const input_show_controlpoints = document.getElementById(\n    'input_show_controlpoints'\n  ) as HTMLInputElement;\n  if (input_show_controlpoints.checked) {\n    legacygl.color(0.2, 0.5, 1);\n    legacygl.begin(gl.LINE_STRIP);\n    legacygl.vertex2(p0);\n    legacygl.vertex2(p1);\n    legacygl.vertex2(p2);\n    legacygl.end();\n    legacygl.begin(gl.POINTS);\n    legacygl.vertex2(p0);\n    legacygl.vertex2(p1);\n    legacygl.vertex2(p2);\n    legacygl.end();\n  }\n}\nfunction init() {\n  // OpenGL context\n  canvas = document.getElementById('canvas') as HTMLCanvasElement;\n  gl = canvas.getContext('experimental-webgl') as WebGLRenderingContext;\n  if (!gl) alert('Could not initialize WebGL, sorry :-(');\n  const vertex_shader_src =\n    '\\\n        attribute vec3 a_vertex;\\\n        attribute vec3 a_color;\\\n        varying vec3 v_color;\\\n        uniform mat4 u_modelview;\\\n        uniform mat4 u_projection;\\\n        void main(void) {\\\n            gl_Position = u_projection * u_modelview * vec4(a_vertex, 1.0);\\\n            v_color = a_color;\\\n            gl_PointSize = 5.0;\\\n        }\\\n        ';\n  const fragment_shader_src =\n    '\\\n        precision mediump float;\\\n        varying vec3 v_color;\\\n        void main(void) {\\\n            gl_FragColor = vec4(v_color, 1.0);\\\n        }\\\n        ';\n  legacygl = get_legacygl(gl, vertex_shader_src, fragment_shader_src);\n  legacygl.add_uniform('modelview', 'Matrix4f');\n  legacygl.add_uniform('projection', 'Matrix4f');\n  legacygl.add_vertex_attribute('color', 3);\n  legacygl.vertex2 = function (p: vec2) {\n    this.vertex(p[0], p[1], 0);\n  };\n  drawutil = get_drawutil(gl, legacygl);\n  camera = get_camera(canvas.width);\n  camera.eye = [0, 0, 7];\n  p0 = [-0.5, -0.6];\n  p1 = [1.2, 0.5];\n  p2 = [-0.4, 1.3];\n  // event handlers\n  canvas.onmousedown = function (evt) {\n    const mouse_win = canvas.get_mousepos(evt);\n    if (evt.altKey) {\n      camera.start_moving(mouse_win, evt.shiftKey ? 'zoom' : 'pan');\n      return;\n    }\n    // pick nearest object\n    const points = [p0, p1, p2];\n    const viewport: vec4 = [0, 0, canvas.width, canvas.height];\n    let dist_min = 10000000;\n    for (let i = 0; i < 3; ++i) {\n      const object_win = glu.project(\n        [points[i][0], points[i][1], 0],\n        legacygl.uniforms.modelview.value as mat4,\n        legacygl.uniforms.projection.value as mat4,\n        viewport\n      );\n      const dist = vec2.dist(mouse_win as vec2, object_win as vec2);\n      if (dist < dist_min) {\n        dist_min = dist;\n        selected = points[i];\n      }\n    }\n  };\n  canvas.onmousemove = function (evt) {\n    const mouse_win = canvas.get_mousepos(evt) as number[];\n    if (camera.is_moving()) {\n      camera.move(mouse_win as vec2);\n      draw();\n      return;\n    }\n    if (selected != null) {\n      const viewport: vec4 = [0, 0, canvas.width, canvas.height];\n      mouse_win.push(1);\n      const mouse_obj = glu.unproject(\n        mouse_win as vec3,\n        legacygl.uniforms.modelview.value as mat4,\n        legacygl.uniforms.projection.value as mat4,\n        viewport\n      );\n      // just reuse the same code as the 3D case\n      const plane_origin: vec3 = [0, 0, 0];\n      const plane_normal: vec3 = [0, 0, 1];\n      const eye_to_mouse = vec3.sub(vec3.create(), mouse_obj, camera.eye);\n      const eye_to_origin = vec3.sub(vec3.create(), plane_origin, camera.eye);\n      const s1 = vec3.dot(eye_to_mouse, plane_normal);\n      const s2 = vec3.dot(eye_to_origin, plane_normal);\n      const eye_to_intersection = vec3.scale(\n        vec3.create(),\n        eye_to_mouse,\n        s2 / s1\n      );\n      vec3.add(selected as any, camera.eye, eye_to_intersection);\n      draw();\n    }\n  };\n  document.onmouseup = function () {\n    if (camera.is_moving()) {\n      camera.finish_moving();\n      return;\n    }\n    selected = null;\n  };\n  // init OpenGL settings\n  gl.viewport(0, 0, canvas.width, canvas.height);\n  gl.clearColor(1, 1, 1, 1);\n}\n\nconst Post: React.FC = () => {\n  const [numsteps, setNumsteps] = React.useState(20);\n  const [showControlPoints, setShowControlPoints] = React.useState(true);\n  const [showSamplePoints, setShowSamplePoints] = React.useState(true);\n\n  React.useEffect(() => {\n    init();\n    draw();\n  }, []);\n\n  const numStepsCallback = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setNumsteps(Number(e.target.value));\n      draw();\n    },\n    [setNumsteps]\n  );\n  const showControlPointsCallBack = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setShowControlPoints(e.target.checked);\n      draw();\n    },\n    [setShowControlPoints]\n  );\n  const showSamplePointsCallback = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setShowSamplePoints(e.target.checked);\n      draw();\n    },\n    [setShowSamplePoints]\n  );\n\n  return (\n    <div>\n      <Canvas />\n      <TableContainer className=\"table-container\">\n        <Table className=\"table is-bordered\">\n          <tbody>\n            <tr>\n              <td>Number of Steps:</td>\n              <td colSpan={2}>\n                <input\n                  className=\"input is-small\"\n                  type=\"number\"\n                  id=\"input_numsteps\"\n                  step=\"1\"\n                  min=\"2\"\n                  value={numsteps}\n                  onChange={numStepsCallback}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Show Control Points:</td>\n              <td colSpan={2}>\n                <input\n                  type=\"checkbox\"\n                  id=\"input_show_controlpoints\"\n                  checked={showControlPoints}\n                  onChange={showControlPointsCallBack}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Show Sample Points:</td>\n              <td colSpan={2}>\n                <input\n                  type=\"checkbox\"\n                  id=\"input_show_samplepoints\"\n                  checked={showSamplePoints}\n                  onChange={showSamplePointsCallback}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </TableContainer>\n      <H3>Usage:</H3>\n      <ul>\n        <li>drag: move control points</li>\n        <li>alt+drag: camera pan</li>\n        <li>alt+shift+drag: camera zoom</li>\n      </ul>\n      <H3>Using Library</H3>\n      <ul>\n        <li>\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href=\"https://bitbucket.org/kenshi84/legacygl.js/src/master/\">\n            legachgl.js\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst TableContainer = styled.div({\n  marginTop: rhythm(2),\n  marginBottom: `${rhythm(3)} !important`,\n  paddingLeft: '1px',\n  paddingTop: '1px',\n});\n\nconst Table = styled.table({\n  color: 'rgb(80, 80, 80)',\n  marginBottom: 0,\n});\n\nconst H3 = styled.h3({\n  marginTop: rhythm(1),\n  fontSize: scale(1 / 4).fontSize,\n  lineHeight: scale(1 / 4).lineHeight,\n});\n\nexport default Post;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport {Canvas} from '../../../src/components/atoms';\nimport {rhythm, scale} from '../../../src/lib/typography';\nimport {vec3, mat3, mat4} from 'gl-matrix';\nimport {\n  get_legacygl,\n  get_drawutil,\n  get_camera,\n  make_boundingbox,\n  meshio,\n  make_halfedge_mesh,\n  verify_filename_extension,\n  LegacyGL,\n  BBox,\n  DrawUtil,\n  Camera,\n  Mesh,\n  Mat3Uniform,\n  Mat4Uniform,\n  ScalarUniform,\n  DispListWrapper,\n  Vertex,\n  Edge,\n  Face,\n  Mode,\n} from '../../../src/lib/legacygl';\n\ninterface MyLegacyGL extends LegacyGL {\n  vertex3?(v: vec3): void;\n  normal3?(v: vec3): void;\n}\n\ninterface SubDivVertex extends Vertex {\n  subdiv_point?: vec3;\n}\n\ninterface SubDivEdge extends Edge {\n  subdiv_point?: vec3;\n}\n\ninterface SubDivFace extends Face {\n  subdiv_point?: vec3;\n}\n\nlet gl: WebGLRenderingContext;\nlet canvas: HTMLCanvasElement;\nlet legacygl: MyLegacyGL;\nlet texture: WebGLTexture;\nlet mesh_control: Mesh;\nlet mesh_subdiv: Mesh;\nlet bbox: BBox;\nlet displist_control: DispListWrapper;\nlet displist_subdiv_faces: DispListWrapper;\nlet displist_subdiv_edges: DispListWrapper;\nlet drawutil: DrawUtil;\nlet camera: Camera;\n\nfunction draw(mesh_draw_mode: Mode = gl.TRIANGLES) {\n  const check_show_control = document.getElementById(\n    'check_show_control'\n  ) as HTMLInputElement;\n  const check_show_edges = document.getElementById(\n    'check_show_edges'\n  ) as HTMLInputElement;\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  if (!mesh_control) return;\n\n  const modelviewMatrix = legacygl.uniforms.modelviewMatrix as Mat4Uniform;\n  const projectionMatrix = legacygl.uniforms.projectionMatrix as Mat4Uniform;\n  const normalMatrix = legacygl.uniforms.normalMatrix as Mat3Uniform;\n  const use_material = legacygl.uniforms.use_material as ScalarUniform;\n  // projection and camera position\n  const zmin = vec3.length(camera.eye_to_center()) * 0.01;\n  const zmax = zmin * 10000;\n  mat4.perspective(\n    projectionMatrix.value,\n    Math.PI / 6,\n    canvas.aspect_ratio(),\n    zmin,\n    zmax\n  );\n  camera.lookAt(modelviewMatrix.value);\n  mat3.fromMat4(normalMatrix.value, modelviewMatrix.value);\n  mat3.invert_ip(normalMatrix.value);\n  mat3.transpose_ip(normalMatrix.value);\n  use_material.value = 0;\n\n  // bounding box\n  modelviewMatrix.push();\n  mat4.translate_ip(modelviewMatrix.value, bbox.center());\n  mat4.scale_ip(modelviewMatrix.value, bbox.diagonal());\n  legacygl.color(0.5, 0.5, 0.5);\n  drawutil.cube('line', 1);\n  modelviewMatrix.pop();\n\n  // control mesh\n  if (check_show_control.checked) {\n    displist_control.draw(function () {\n      legacygl.color(0, 0, 0.5);\n      legacygl.begin(gl.LINES);\n      mesh_control.edges_forEach(function (e) {\n        e.vertices().forEach(function (v) {\n          legacygl.vertex3(v.point);\n        });\n      });\n      legacygl.end();\n    });\n  }\n\n  // subdiv mesh faces\n  use_material.push();\n  use_material.value = 1;\n  displist_subdiv_faces.draw(() => {\n    // NOTE: this code assumes all faces are triangles!\n    // Quads can be drawn by using gl.QUADS which internally splits each quad into two triangles\n    legacygl.begin(mesh_draw_mode);\n    mesh_subdiv.faces.forEach(function (f) {\n      legacygl.normal3(f.normal);\n      f.vertices().forEach(function (v) {\n        legacygl.vertex3(v.point);\n      });\n    });\n    legacygl.end();\n  });\n  use_material.pop();\n\n  // subdiv mesh edges\n  if (check_show_edges.checked) {\n    displist_subdiv_edges.draw(function () {\n      legacygl.color(0, 0.5, 0.2);\n      legacygl.begin(gl.LINES);\n      mesh_subdiv.edges_forEach(function (e) {\n        e.vertices().forEach(function (v) {\n          legacygl.vertex3(v.point);\n        });\n      });\n      legacygl.end();\n    });\n  }\n}\n\nfunction subdivide_catmull_clark() {\n  // for each face, compute subdivided point\n  mesh_subdiv.faces.forEach(function (f: SubDivFace) {\n    const v = f.vertices();\n    f.subdiv_point = vec3.create();\n    for (let i = 0; i < v.length; ++i) {\n      vec3.add_ip(f.subdiv_point, v[i].point);\n    }\n    vec3.scale_ip(f.subdiv_point, 1 / v.length);\n  });\n  // for each edge, compute subdivided point\n  mesh_subdiv.edges_forEach(function (e: SubDivEdge) {\n    const v = e.vertices();\n    const f = e.faces() as SubDivFace[]; // assume that all edge are not boundary\n    e.subdiv_point = vec3.scale(\n      vec3.create(),\n      vec3.add(vec3.create(), f[0].subdiv_point, f[1].subdiv_point),\n      0.5\n    );\n    e.subdiv_point = vec3.add(\n      vec3.create(),\n      e.subdiv_point,\n      vec3.scale(\n        vec3.create(),\n        vec3.add(vec3.create(), v[0].point, v[1].point),\n        0.5\n      )\n    );\n    vec3.scale_ip(e.subdiv_point, 0.5);\n  });\n  // for each vertex, compute displaced point\n  mesh_subdiv.vertices.forEach(function (v: SubDivVertex) {\n    const f = v.faces() as SubDivFace[];\n    const e = v.edges() as SubDivEdge[];\n    let q = vec3.create();\n    for (let i = 0; i < f.length; ++i) {\n      q = vec3.add(vec3.create(), q, f[i].subdiv_point);\n    }\n    q = vec3.scale(vec3.create(), q, 1 / f.length);\n    let r = vec3.create();\n    for (let i = 0; i < e.length; ++i) {\n      const ev = e[i].vertices();\n      vec3.add_ip(\n        r,\n        vec3.scale(\n          vec3.create(),\n          vec3.add(vec3.create(), ev[0].point, ev[1].point),\n          0.5\n        )\n      );\n    }\n    r = vec3.scale(vec3.create(), r, 1 / e.length);\n    const n = e.length;\n    v.subdiv_point = vec3.scale(vec3.create(), q, 1 / n);\n    v.subdiv_point = vec3.add(\n      vec3.create(),\n      v.subdiv_point,\n      vec3.scale(vec3.create(), r, 2 / n)\n    );\n    v.subdiv_point = vec3.add(\n      vec3.create(),\n      v.subdiv_point,\n      vec3.scale(vec3.create(), v.point, (n - 3) / n)\n    );\n  });\n  // make next subdiv mesh topology\n  const mesh_subdiv_next = make_halfedge_mesh();\n  const edge_offset = mesh_subdiv.num_vertices();\n  const face_offset = edge_offset + mesh_subdiv.num_edges();\n  mesh_subdiv.halfedges_forEach(function (h) {\n    const v = h.from_vertex() as SubDivVertex;\n    const ev1 = h.prev.edge as SubDivEdge;\n    const ev2 = h.edge as SubDivEdge;\n    const fv = h.face as SubDivFace;\n    const fv_indices: number[] = [];\n    fv_indices.push(ev1.id + edge_offset);\n    fv_indices.push(v.id);\n    fv_indices.push(ev2.id + edge_offset);\n    fv_indices.push(fv.id + face_offset);\n    mesh_subdiv_next.add_face(fv_indices);\n  });\n  mesh_subdiv.vertices.forEach(function (v: SubDivVertex) {\n    mesh_subdiv_next.vertices[v.id].point = v.subdiv_point;\n  });\n  mesh_subdiv.edges_forEach(function (e: SubDivEdge) {\n    mesh_subdiv_next.vertices[e.id + edge_offset].point = e.subdiv_point;\n  });\n  mesh_subdiv.faces.forEach(function (f: SubDivFace) {\n    mesh_subdiv_next.vertices[f.id + face_offset].point = f.subdiv_point;\n  });\n  mesh_subdiv = mesh_subdiv_next;\n  mesh_subdiv.init_ids();\n  mesh_subdiv.init_boundaries();\n  mesh_subdiv.compute_normals();\n  displist_subdiv_faces.invalidate();\n  displist_subdiv_edges.invalidate();\n  draw('QUADS');\n  document.getElementById('label_mesh_nv').innerHTML = String(\n    mesh_subdiv.num_vertices()\n  );\n  document.getElementById('label_mesh_nf').innerHTML = String(\n    mesh_subdiv.num_faces()\n  );\n  document.getElementById('label_mesh_ne').innerHTML = String(\n    mesh_subdiv.num_edges()\n  );\n}\n\nfunction write_mesh() {\n  const filename = 'mesh_subdiv.obj';\n  const content = meshio.write(mesh_subdiv, filename);\n  const myBlob = new Blob([content], {type: 'octet/stream'});\n  const a = document.createElement('a');\n  a.href = URL.createObjectURL(myBlob);\n  a.download = filename;\n  a.click();\n}\n\nfunction init() {\n  // OpenGL context\n  canvas = document.getElementById('canvas') as HTMLCanvasElement;\n  gl = canvas.getContext('experimental-webgl') as WebGLRenderingContext;\n  if (!gl) alert('Could not initialize WebGL!');\n  const vertex_shader_src =\n    '\\\n        attribute vec3 a_vertex;\\\n        attribute vec3 a_color;\\\n        attribute vec3 a_normal;\\\n        varying vec3 v_normal;\\\n        varying vec3 v_color;\\\n        uniform mat4 u_modelviewMatrix;\\\n        uniform mat4 u_projectionMatrix;\\\n        uniform mat3 u_normalMatrix;\\\n        void main(void) {\\\n            gl_Position = u_projectionMatrix * u_modelviewMatrix * vec4(a_vertex, 1.0);\\\n            v_color = a_color;\\\n            v_normal = u_normalMatrix * a_normal;\\\n        }\\\n        ';\n  const fragment_shader_src =\n    '\\\n        precision mediump float;\\\n        uniform sampler2D u_texture;\\\n        uniform int u_use_material;\\\n        varying vec3 v_normal;\\\n        varying vec3 v_color;\\\n        void main(void) {\\\n            if (u_use_material == 1) {\\\n                vec3 nnormal = normalize(v_normal);\\\n                nnormal.y *= -1.0;\\\n                vec2 texcoord = nnormal.xy * 0.45 + vec2(0.5, 0.5);\\\n                gl_FragColor = texture2D(u_texture, texcoord);\\\n            } else {\\\n                gl_FragColor = vec4(v_color, 1.0);\\\n            }\\\n        }\\\n        ';\n  legacygl = get_legacygl(gl, vertex_shader_src, fragment_shader_src);\n  legacygl.add_uniform('modelviewMatrix', 'Matrix4f');\n  legacygl.add_uniform('projectionMatrix', 'Matrix4f');\n  legacygl.add_uniform('normalMatrix', 'Matrix3f');\n  legacygl.add_uniform('texture', '1i');\n  legacygl.add_uniform('use_material', '1i');\n  legacygl.add_vertex_attribute('color', 3);\n  legacygl.add_vertex_attribute('normal', 3);\n  legacygl.vertex3 = function (p) {\n    this.vertex(p[0], p[1], p[2]);\n  };\n  legacygl.normal3 = function (n) {\n    this.normal(n[0], n[1], n[2]);\n  };\n  displist_control = legacygl.displist_wrapper('control');\n  displist_subdiv_faces = legacygl.displist_wrapper('subdiv_faces');\n  displist_subdiv_edges = legacygl.displist_wrapper('subdiv_edges');\n  drawutil = get_drawutil(gl, legacygl);\n  camera = get_camera(canvas.width);\n  // init OpenGL settings\n  gl.viewport(0, 0, canvas.width, canvas.height);\n  gl.enable(gl.DEPTH_TEST);\n  gl.enable(gl.POLYGON_OFFSET_FILL);\n  gl.polygonOffset(1, 1);\n  gl.clearColor(1, 1, 1, 1);\n  // init texture\n  texture = gl.createTexture();\n  // event handlers\n  canvas.onmousedown = function (evt) {\n    camera.start_moving(\n      canvas.get_mousepos(evt),\n      evt.shiftKey ? 'zoom' : evt.ctrlKey ? 'pan' : 'rotate'\n    );\n  };\n  canvas.onmousemove = function (evt) {\n    if (camera.is_moving()) {\n      camera.move(canvas.get_mousepos(evt));\n      draw();\n    }\n  };\n  document.onmouseup = function (evt) {\n    if (camera.is_moving()) camera.finish_moving();\n  };\n  canvas.ontouchstart = function (evt) {\n    evt.preventDefault();\n    camera.start_moving(canvas.get_touchpos(evt), 'rotate');\n  };\n  canvas.ontouchmove = function (evt) {\n    evt.preventDefault();\n    if (camera.is_moving()) {\n      camera.move(canvas.get_touchpos(evt));\n      draw();\n    }\n  };\n  document.ontouchend = function () {\n    if (camera.is_moving()) camera.finish_moving();\n  };\n  function read_mesh(filename: string, content: string) {\n    const mesh_temp = meshio.read(filename, content);\n    let has_nontriangle = false;\n    for (let i = 0; i < mesh_temp.faces.length; ++i) {\n      if (mesh_temp.faces[i].halfedges().length != 3) {\n        has_nontriangle = true;\n        break;\n      }\n    }\n    if (has_nontriangle) {\n      alert('Non-triangle polygon found! Please triangulate the mesh first.');\n      return;\n    }\n    mesh_control = mesh_subdiv = mesh_temp;\n    mesh_subdiv.compute_normals();\n    bbox = make_boundingbox();\n    mesh_control.vertices.forEach(function (v) {\n      bbox.extend(v.point);\n    });\n    camera.center = bbox.center();\n    camera.eye = vec3.add(vec3.create(), camera.center, [\n      0,\n      0,\n      bbox.diagonal_norm() * 2,\n    ]);\n    camera.up = [0, 1, 0];\n    displist_control.invalidate();\n    displist_subdiv_faces.invalidate();\n    displist_subdiv_edges.invalidate();\n    draw();\n    document.getElementById('label_mesh_nv').innerHTML = String(\n      mesh_subdiv.num_vertices()\n    );\n    document.getElementById('label_mesh_nf').innerHTML = String(\n      mesh_subdiv.num_faces()\n    );\n    document.getElementById('label_mesh_ne').innerHTML = String(\n      mesh_subdiv.num_edges()\n    );\n  }\n  const text_mesh_disk = document.getElementById(\n    'text_mesh_disk'\n  ) as HTMLInputElement;\n  text_mesh_disk.onchange = function () {\n    if (text_mesh_disk.files.length != 1) return;\n    const file = text_mesh_disk.files[0];\n    if (!verify_filename_extension(file.name, ['.obj', '.off'])) return;\n    const reader = new FileReader();\n    reader.onload = function () {\n      read_mesh(file.name, reader.result as string);\n    };\n    reader.readAsText(file);\n  };\n  function read_default_mesh(url: string) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.onload = function () {\n      if (this.status == 200) read_mesh(url, this.response);\n    };\n    xhr.send();\n  }\n  read_default_mesh('./cube.obj');\n  // texture\n  function read_texture(dataurl: string) {\n    const img = document.getElementById('img_material') as HTMLImageElement;\n    img.onload = function () {\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      displist_subdiv_faces.invalidate();\n      draw();\n    };\n    img.crossOrigin = 'anonymous';\n    img.src = dataurl;\n  }\n  const text_material_disk = document.getElementById(\n    'text_material_disk'\n  ) as HTMLInputElement;\n  text_material_disk.onchange = function () {\n    if (text_material_disk.files.length != 1) return;\n    const file = text_material_disk.files[0];\n    if (!verify_filename_extension(file.name, ['.png', '.jpg', '.gif'])) return;\n    const reader = new FileReader();\n    reader.onload = function () {\n      read_texture(reader.result as string);\n    };\n    reader.readAsDataURL(file);\n  };\n  function read_default_texture(url: string) {\n    if (!verify_filename_extension(url, ['.png', '.jpg', '.gif'])) return;\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n      if (this.status == 200) read_texture(URL.createObjectURL(this.response));\n    };\n    xhr.send();\n  }\n  read_default_texture('./blue-to-purple.jpg');\n}\n\nconst Post: React.FC = () => {\n  const [showEdges, setShowEdges] = React.useState(true);\n  const [showControl, setShowControl] = React.useState(true);\n  React.useEffect(() => {\n    init();\n    draw();\n  }, []);\n\n  const subdivideButtonCallBack = React.useCallback(() => {\n    subdivide_catmull_clark();\n    draw();\n  }, []);\n\n  const checkShowEdgesCallback = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setShowEdges(e.target.checked);\n      draw();\n    },\n    [setShowEdges]\n  );\n\n  const checkShowControlCallback = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setShowControl(e.target.checked);\n      draw();\n    },\n    [setShowControl]\n  );\n\n  return (\n    <div>\n      <Canvas size={'60%'} />\n      <ButtonContainer>\n        <button onClick={subdivideButtonCallBack}>Subdivide</button>\n        <button onClick={write_mesh}>Write Mesh</button>\n      </ButtonContainer>\n      <H3>Draw Options</H3>\n      <div className=\"table-container\">\n        <Table className=\"table is-bordered\">\n          <tbody>\n            <tr>\n              <td>Show Edges:</td>\n              <td colSpan={2}>\n                <input\n                  type=\"checkbox\"\n                  id=\"check_show_edges\"\n                  checked={showEdges}\n                  onChange={checkShowEdgesCallback}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Show Control Mesh:</td>\n              <td colSpan={2}>\n                <input\n                  type=\"checkbox\"\n                  id=\"check_show_control\"\n                  checked={showControl}\n                  onChange={checkShowControlCallback}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Read Control Mesh from Disk:</td>\n              <td colSpan={2}>\n                <input type=\"file\" id=\"text_mesh_disk\" accept=\".off,.obj\" />\n              </td>\n            </tr>\n            <tr>\n              <td>Read Material from Disk:</td>\n              <td colSpan={2}>\n                <input\n                  type=\"file\"\n                  id=\"text_material_disk\"\n                  accept=\".png,.jpg,.gif\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n      <H3>Subdivided Mesh Statistics:</H3>\n      <ul>\n        <li>\n          <span id=\"label_mesh_nv\">0</span> Vertices\n        </li>\n        <li>\n          <span id=\"label_mesh_nf\">0</span> Faces\n        </li>\n        <li>\n          <span id=\"label_mesh_ne\">0</span> Edges\n        </li>\n      </ul>\n      <H3>Material:</H3>\n      <img id=\"img_material\" />\n      <H3>Camera Control</H3>\n      <ul>\n        <li>Drag: Rotate</li>\n        <li>Shift+Drag: Zoom</li>\n        <li>Ctrl+Drag: Pan</li>\n      </ul>\n      <H3>Using Library</H3>\n      <ul>\n        <li>\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href=\"https://bitbucket.org/kenshi84/legacygl.js/src/master/\">\n            legachgl.js\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst ButtonContainer = styled.div({\n  marginTop: rhythm(1),\n});\n\nconst Table = styled.table({\n  color: 'rgb(80, 80, 80)',\n  marginBottom: 0,\n});\n\nconst H3 = styled.h3({\n  marginTop: rhythm(1),\n  fontSize: scale(1 / 4).fontSize,\n  lineHeight: scale(1 / 4).lineHeight,\n});\n\nexport default Post;\n","import * as React from 'react';\nimport {graphql} from 'gatsby';\n\nimport {Seo} from '../components/atoms';\nimport {BlogPage, Content} from '../components/organisms';\nimport {UiContext} from '../contexts';\nimport {PostReactTemplateQuery} from '../../types/graphql-types';\n\nimport QuadraticBezierCurvePost from '../../contents/posts/2021-04-22QuadraticBezierCurve';\nimport SubdivisionCatmullClark from '../../contents/posts/2021-04-27SubdivisionCatmullClark';\n\ntype Props = {\n  data: PostReactTemplateQuery;\n};\n\ntype Posts = {\n  [key: string]: JSX.Element;\n};\n\nconst posts: Posts = {\n  ['/quadratic-bezeir-curve/']: <QuadraticBezierCurvePost />,\n  ['/subdivision-catmull-clark/']: <SubdivisionCatmullClark />,\n};\n\nconst Post: React.FC<Props> = ({data}) => {\n  const {setSlug} = React.useContext(UiContext.Context);\n\n  const fm = data.markdown.frontmatter;\n  const url = `${data.site.siteMetadata.siteUrl}${fm.slug}`;\n  const imageUrl = `${data.site.siteMetadata.siteUrl}${fm.thumbnail.publicURL}`;\n\n  React.useEffect(() => {\n    setSlug(fm.slug);\n  }, []);\n\n  return (\n    <>\n      <Seo\n        isPostPage\n        title={fm.title}\n        description={fm.description}\n        url={url}\n        imageUrl={imageUrl}\n      />\n      <Content>\n        <BlogPage\n          title={fm.title}\n          date={fm.date}\n          description={fm.description}\n          slug={fm.slug}\n          thumbnail={fm.thumbnail.name}\n          html={data.markdown.html}\n          tags={fm.tags}\n          toc={data.markdown.toc}>\n          {posts[fm.slug]}\n        </BlogPage>\n      </Content>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query PostReactTemplate($slug: String!) {\n    markdown: markdownRemark(frontmatter: {slug: {eq: $slug}}) {\n      frontmatter {\n        slug\n        date(formatString: \"YYYY.MM.DD\")\n        tags\n        title\n        description\n        thumbnail {\n          name\n          publicURL\n        }\n      }\n      html\n      toc: tableOfContents(pathToSlugField: \"frontmatter.slug\")\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`;\n\nexport default Post;\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var $ = require('../internals/export');\n\n// eslint-disable-next-line es/no-math-hypot -- required for testing\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt;\n\n// Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\n\n// `Math.hypot` method\n// https://tc39.es/ecma262/#sec-math.hypot\n$({ target: 'Math', stat: true, forced: BUGGY }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  hypot: function hypot(value1, value2) {\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';\n","// TODO: use something more complex like timsort?\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    mergeSort(array.slice(0, middle), comparefn),\n    mergeSort(array.slice(middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n  var result = [];\n\n  while (lindex < llength || rindex < rlength) {\n    if (lindex < llength && rindex < rlength) {\n      result.push(comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]);\n    } else {\n      result.push(lindex < llength ? left[lindex++] : right[rindex++]);\n    }\n  } return result;\n};\n\nmodule.exports = mergeSort;\n"],"sourceRoot":""}