{"version":3,"file":"component---src-templates-post-template-tsx-4903be52447cb80c48f1.js","mappings":"gLAyEA,UA7D8B,SAAC,GAAW,IAAVA,EAAU,EAAVA,KACvBC,EAAWC,EAAAA,WAAiBC,EAAAA,EAAAA,SAA5BF,QAEDG,EAAKJ,EAAKK,SAASC,YACnBC,EAAM,GAAGP,EAAKQ,KAAKC,aAAaC,QAAUN,EAAGO,KAC7CC,EAAW,GAAGZ,EAAKQ,KAAKC,aAAaC,QAAUN,EAAGS,UAAUC,UAMlE,OAJAZ,EAAAA,WAAgB,WACdD,EAAQG,EAAGO,QACV,KAGD,yBACE,QAAC,KAAD,CACEI,YAAU,EACVC,MAAOZ,EAAGY,MACVC,YAAab,EAAGa,YAChBV,IAAKA,EACLK,SAAUA,KAEZ,QAAC,KAAD,MACE,QAAC,KAAD,CACEI,MAAOZ,EAAGY,MACVE,KAAMd,EAAGc,KACTD,YAAab,EAAGa,YAChBN,KAAMP,EAAGO,KACTE,UAAWT,EAAGS,UAAUM,KACxBC,KAAMhB,EAAGgB,KACTC,KAAMrB,EAAKK,SAASgB,KACpBC,IAAKtB,EAAKK,SAASiB","sources":["webpack://takigawa-memo/./src/templates/post-template.tsx"],"sourcesContent":["import * as React from 'react';\nimport {graphql} from 'gatsby';\n\nimport {Seo} from '../components/atoms';\nimport {BlogPage, Content} from '../components/organisms';\nimport {UiContext} from '../contexts';\nimport {PostTemplateQuery} from '../../types/graphql-types';\n\ntype Props = {\n  data: PostTemplateQuery;\n};\n\nconst Post: React.FC<Props> = ({data}) => {\n  const {setSlug} = React.useContext(UiContext.Context);\n\n  const fm = data.markdown.frontmatter;\n  const url = `${data.site.siteMetadata.siteUrl}${fm.slug}`;\n  const imageUrl = `${data.site.siteMetadata.siteUrl}${fm.thumbnail.publicURL}`;\n\n  React.useEffect(() => {\n    setSlug(fm.slug);\n  }, []);\n\n  return (\n    <>\n      <Seo\n        isPostPage\n        title={fm.title}\n        description={fm.description}\n        url={url}\n        imageUrl={imageUrl}\n      />\n      <Content>\n        <BlogPage\n          title={fm.title}\n          date={fm.date}\n          description={fm.description}\n          slug={fm.slug}\n          thumbnail={fm.thumbnail.name}\n          tags={fm.tags}\n          html={data.markdown.html}\n          toc={data.markdown.toc}\n        />\n      </Content>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query PostTemplate($slug: String!) {\n    markdown: markdownRemark(frontmatter: {slug: {eq: $slug}}) {\n      frontmatter {\n        slug\n        date(formatString: \"YYYY.MM.DD\")\n        tags\n        title\n        description\n        thumbnail {\n          name\n          publicURL\n        }\n      }\n      html\n      toc: tableOfContents(pathToSlugField: \"frontmatter.slug\")\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`;\n\nexport default Post;\n"],"names":["data","setSlug","React","UiContext","fm","markdown","frontmatter","url","site","siteMetadata","siteUrl","slug","imageUrl","thumbnail","publicURL","isPostPage","title","description","date","name","tags","html","toc"],"sourceRoot":""}