{"version":3,"sources":["webpack:///./src/components/atoms/Toc.js","webpack:///./src/components/molecules/BlogPage.js","webpack:///./src/components/templates/post-template.js"],"names":["Toc","props","state","expanded","onClick","this","setState","getIcon","DownIcon","name","size","color","getToc","res","TocContainer","dangerouslySetInnerHTML","__html","data","render","icon","Responsive","as","Wrapper","minWidth","onlyTablet","FlexContainer","H4","CSSTransition","in","timeout","classNames","MobileWrapper","maxWidth","onlyMobile","React","Component","styled","div","rhythm","h4","scale","fontSize","Icon","BlogPage","getTags","tags","map","tag","Label","style","marginLeft","meta","metadata","toc","Segment","StyledContainer","Title","title","MobileTitle","Info","date","Tag","Description","description","Divider","CustomImage","fileName","thumbnail","alt","StyledHtml","html","MobileStyledHtml","Copyright","h1","Date","lineHeight","p","frontmatter","markdownRemark","tableOfContents","App","Seo","Content","query"],"mappings":"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","file":"component---src-components-templates-post-template-js-ce1336d34a4d97a45a12.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { CSSTransition } from \"react-transition-group\"\nimport { Icon, Responsive } from \"semantic-ui-react\"\nimport { scale, rhythm } from \"../../utils/typography\"\n\nexport default class Toc extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      expanded: false,\n    }\n  }\n\n  onClick() {\n    this.setState({ expanded: !this.state.expanded })\n  }\n\n  getIcon() {\n    return (\n      <DownIcon\n        name=\"caret down\"\n        size=\"big\"\n        color=\"grey\"\n        onClick={() => {\n          this.onClick()\n        }}\n      />\n    )\n  }\n\n  getToc() {\n    let res = null\n    if (this.state.expanded) {\n      res = (\n        <TocContainer>\n          <div dangerouslySetInnerHTML={{ __html: this.props.data }} />\n        </TocContainer>\n      )\n    }\n    return res\n  }\n\n  render() {\n    let icon = this.getIcon()\n    return (\n      <div>\n        <Responsive as={Wrapper} minWidth={Responsive.onlyTablet.minWidth}>\n          <FlexContainer>\n            <H4>目次</H4>\n            <CSSTransition\n              in={this.state.expanded}\n              timeout={200}\n              classNames=\"angleIcon\"\n            >\n              {icon}\n            </CSSTransition>\n          </FlexContainer>\n          {this.getToc()}\n        </Responsive>\n        <Responsive\n          as={MobileWrapper}\n          maxWidth={Responsive.onlyMobile.maxWidth}\n        >\n          <FlexContainer>\n            <H4>目次</H4>\n            <CSSTransition\n              in={this.state.expanded}\n              timeout={200}\n              classNames=\"angleIcon\"\n            >\n              {icon}\n            </CSSTransition>\n          </FlexContainer>\n          {this.getToc()}\n        </Responsive>\n      </div>\n    )\n  }\n}\n\nconst Wrapper = styled.div`\n  width: 60%\n  margin: ${rhythm(1)} 0\n  background-color: rgba(224, 224, 224, 0.5);\n`\nconst MobileWrapper = styled.div`\n  width: 100%\n  margin: ${rhythm(1)} 0\n  background-color: rgba(224, 224, 224, 0.5);\n`\n\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: center\n  justify-content: space-between\n`\n\nconst H4 = styled.h4`\n  margin: 0\n  padding-left: ${rhythm(1)}\n  padding-top: ${rhythm(1)}\n  padding-bottom: ${rhythm(1)}\n  font-size: ${scale(1 / 6).fontSize}\n  color: grey\n`\n\nconst DownIcon = styled(Icon)`\n  margin-right: ${rhythm(1)} !important\n  &:hover {\n    cursor: pointer\n  }\n`\n\nconst TocContainer = styled.div`\n  width: 70%\n  margin: 0 auto\n  padding-bottom: ${rhythm(1)}\n  &> div > ul {\n      width: auto;\n      li {\n        color: #96acb3;\n        list-style: decimal;\n        line-height: ${rhythm(1)}\n      }\n      a {\n        text-decoration: none\n        text-shadow: none\n        color: rgb(82, 82, 82);\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Divider, Label, Responsive } from \"semantic-ui-react\"\nimport { scale, rhythm } from \"../../utils/typography\"\nimport CustomImage from \"../atoms/CustomImage\"\nimport Copyright from \"../atoms/Copyright\"\nimport Toc from \"../atoms/Toc\"\n\nexport default class BlogPage extends React.Component {\n  getTags(tags) {\n    return tags.map(tag => {\n      return (\n        <Label\n          tag\n          size=\"mini\"\n          style={{\n            marginLeft: rhythm(1),\n          }}\n        >\n          {tag}\n        </Label>\n      )\n    })\n  }\n\n  render() {\n    let meta = this.props.metadata\n    let toc = this.props.toc\n    return (\n      <Segment>\n        <StyledContainer>\n          <Responsive as={Title} minWidth={Responsive.onlyTablet.minWidth}>\n            {meta.title}\n          </Responsive>\n          <Responsive\n            as={MobileTitle}\n            maxWidth={Responsive.onlyMobile.maxWidth}\n          >\n            {meta.title}\n          </Responsive>\n          <Info>\n            <Date>{meta.date}</Date>\n            <Tag>{this.getTags(meta.tags)}</Tag>\n          </Info>\n          <Description>{meta.description}</Description>\n          <Divider />\n          <CustomImage fileName={meta.thumbnail.name} alt=\"thumbnail\" />\n          <Toc data={toc} />\n          <Responsive\n            as={StyledHtml}\n            minWidth={Responsive.onlyTablet.minWidth}\n            dangerouslySetInnerHTML={{ __html: this.props.html }}\n          />\n          <Responsive\n            as={MobileStyledHtml}\n            maxWidth={Responsive.onlyMobile.maxWidth}\n            dangerouslySetInnerHTML={{ __html: this.props.html }}\n          />\n        </StyledContainer>\n        <Copyright />\n      </Segment>\n    )\n  }\n}\n\nconst Segment = styled.div`\n  background-color: white\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 3px 5px;\n`\nconst StyledContainer = styled.div`\n  padding-bottom: ${rhythm(4)}\n  margin: auto\n  width: 84%\n`\nconst StyledHtml = styled.div`\n  padding-top: ${rhythm(2)};\n  .anchor {\n    background-image: none;\n  }\n  & > p {\n    font-size: ${scale(1 / 8).fontSize}\n    line-height: ${rhythm(2)}\n    margin: ${rhythm(1)} 0\n  }\n  & > h2 {\n    font-size: ${scale(1 / 2).fontSize}\n    line-height: ${rhythm(2)}\n  }\n`\n\nconst MobileStyledHtml = styled.div`\n  padding-top: ${rhythm(2)};\n  .anchor {\n    background-image: none;\n  }\n  & > p {\n    font-size: ${scale(0).fontSize}\n    line-height: ${rhythm(2)}\n    margin: ${rhythm(1)} 0\n  }\n  & > h2 {\n    font-size: ${scale(1 / 2).fontSize}\n    line-height: ${rhythm(2)}\n  }\n`\nconst Title = styled.h1`\n  padding-top: ${rhythm(4)}\n  font-size: ${scale(3 / 2).fontSize}\n  line-height: ${rhythm(3)}\n`\nconst MobileTitle = styled.h1`\n  padding-top: ${rhythm(2)}\n  font-size: ${scale(1).fontSize}\n  line-height: ${rhythm(2)}\n`\nconst Date = styled.h4`\n  font-size: ${scale(0).fontSize}\n  line-height: ${scale(0).lineHeight}\n  padding-top: ${rhythm(1 / 8)}\n  margin-bottom: 0\n  color:  #4b5454\n`\n\nconst Description = styled.p`\n  font-size: ${scale(0).fontSize}\n  line-height: ${scale(0).lineHeight}\n  margin-top: ${rhythm(1)}\n`\n\nconst Tag = styled.div``\n\nconst Info = styled.div`\n  display: flex;\n`\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport App from \"../organisms/App\"\nimport Content from \"../organisms/Content\"\nimport Seo from \"../atoms/Seo\"\nimport BlogPage from \"../molecules/BlogPage\"\n\nexport default ({ data }) => {\n  let frontmatter = data.markdownRemark.frontmatter\n  let html = data.markdownRemark.html\n  let toc = data.markdownRemark.tableOfContents\n  return (\n    <App>\n      <Seo title={frontmatter.title} description={frontmatter.description} />\n      <Content>\n        <BlogPage metadata={frontmatter} html={html} toc={toc} />\n      </Content>\n    </App>\n  )\n}\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        slug\n        date(formatString: \"YYYY.MM.DD\")\n        tags\n        title\n        description\n        thumbnail {\n          name\n        }\n      }\n      html\n      tableOfContents(pathToSlugField: \"frontmatter.slug\")\n    }\n  }\n`\n"],"sourceRoot":""}