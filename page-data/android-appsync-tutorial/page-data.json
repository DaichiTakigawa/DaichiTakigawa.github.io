{"componentChunkName":"component---src-templates-post-template-tsx","path":"/android-appsync-tutorial/","result":{"data":{"markdown":{"frontmatter":{"slug":"/android-appsync-tutorial/","date":"2020.02.27","tags":["Android","AWS"],"title":"AndroidとAppSyncでリアルタイムチャットアプリを作成","description":"AWSのAppSyncを用いて、リアルタイムチャット機能を持つAndroidアプリを作成してみました。Amplify CLIを用いてクラウド環境を構築する際に躓いた点や、GraphQLのclientをKotlinで実装した感想などをまとめています。","thumbnail":{"name":"android-amplify-thumbnail","publicURL":"/static/5935bbe91d8b29516cdc571efaa03cbb/android-amplify-thumbnail.png"}},"html":"<h2 id=\"これは何\" style=\"position:relative;\"><a href=\"#%E3%81%93%E3%82%8C%E3%81%AF%E4%BD%95\" aria-label=\"これは何 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>これは何</h2>\n<p>GraphQLを一度触ってみたかったので、AWSのAppSyncというマネージドサービスを用いて、リアルタイムチャット機能を持ったAndroidアプリを作成してみました。<br>\n当投稿ではAmplify CLIを用いてクラウド環境を構築する際に躓いた点や、GraphQLのクライアントをkotlin(Java)で実装した感想などをまとめています。<br>\nAWSやAmplifyについての詳細な説明は割愛させていただきます。</p>\n<h2 id=\"graphqlとは\" style=\"position:relative;\"><a href=\"#graphql%E3%81%A8%E3%81%AF\" aria-label=\"graphqlとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQLとは</h2>\n<p>GraphQLはFacebookが開発した、データクエリ言語とデータ操作の仕様です。<br>\nWebAPIとして利用されるほか、例えば当ブログの構築ツールであるGatsbyではmarkdownファイルや画像ファイルなどのコンテンツにアクセスする際にGraphQLを使用します。</p>\n<p>GraphQLとの比較対象に挙げられることが多いのがREST APIなのですが、GraphQLはREST APIと比較して以下のメリットがあると言われています。</p>\n<ul>\n<li>必要なデータだけを過不足なく取得できるので、ネットワークトラフィック量を減らすことができる。</li>\n<li>WebSocketを利用した双方向通信が仕様に組み込まれているので、リアルタイムに更新するアプリなどを作成しやすい。</li>\n<li>スキーマファーストな開発になるので、クライアントとサーバー側の開発の連携が取りやすい。</li>\n</ul>\n<p>逆にデメリットとしては、クライアント側でネットワークリクエストのキャッシュを保持しづらいなどが挙げられます。</p>\n<h2 id=\"appsyncとは\" style=\"position:relative;\"><a href=\"#appsync%E3%81%A8%E3%81%AF\" aria-label=\"appsyncとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AppSyncとは</h2>\n<p>AWSが提供するGraphQLサーバーを作成するためのマネージドサービスです。\nノーコードに近い感じでGraphQLサーバーを構築できる、DynamoDBやLambdaなどの他のサービスとの連携が簡単に可能であるなどの特徴があります。</p>\n<h2 id=\"amplifyを用いてクラウド環境を構築\" style=\"position:relative;\"><a href=\"#amplify%E3%82%92%E7%94%A8%E3%81%84%E3%81%A6%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89\" aria-label=\"amplifyを用いてクラウド環境を構築 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Amplifyを用いてクラウド環境を構築</h2>\n<p>今回はAmplify CLIを用いてクラウド環境を構築していきたいと思います。</p>\n<p>Amplify + AppSync + DynamoDBを用いてクラウド環境を構築する場合、GraphQL Transformという仕組みを利用すれば、スキーマを記述しただけで、GraphQLサーバー、データベース、クライアントサイドのコードが全て自動生成されます。<br>\nすごいですね。</p>\n<p><a href=\"https://aws-amplify.github.io/docs/cli-toolchain/graphql\">GraphQL Transform</a></p>\n<p>GraphQL TransoformはSchema directiveを拡張しているみたいです。</p>\n<p><a href=\"https://www.apollographql.com/docs/graphql-tools/schema-directives/\">Schema directives - GraphQL Tools - Apollo GraphQL Docs</a></p>\n<p>@modelや@connection、@keyなどのdirectiveを活用することで、データベースの構築とデータベースに対する簡単なクエリが可能になります。</p>\n<p>以下で、主要なものだけ紹介します。</p>\n<h3 id=\"model\" style=\"position:relative;\"><a href=\"#model\" aria-label=\"model permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@model</h3>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token comment\"># @modelが付与された型に対応するテーブルがDynamoDBに作成される。</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Post</span> <span class=\"token directive function\">@model</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"key\" style=\"position:relative;\"><a href=\"#key\" aria-label=\"key permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@key</h3>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token comment\"># @keyディレクティブを用いることでDynamoDBのprimary keyやsort keyを指定できる。</span>\n<span class=\"token comment\"># またnameやqueryFieldを指定することで、indexやそのindexに対するクエリ操作も可能になる。</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Message</span>\n  <span class=\"token directive function\">@model</span>\n  <span class=\"token directive function\">@key</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token directive function\">@key</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"byUserId\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">queryField</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"messagesByUserId\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">userId</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">posted</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span> <span class=\"token directive function\">@connection</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token attr-name\">text</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">dateTime</span><span class=\"token punctuation\">:</span> AWSDateTime\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"connection\" style=\"position:relative;\"><a href=\"#connection\" aria-label=\"connection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@connection</h3>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token comment\"># @connecionを用いると、他のテーブルからfieldsで指定したキーでデータを取得できるようになる。</span>\n<span class=\"token comment\"># またkeyNameでindexを指定してデータを取得することも出来る。</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Post</span> <span class=\"token directive function\">@model</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">comments</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Comment<span class=\"token punctuation\">]</span> <span class=\"token directive function\">@connection</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">keyName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"byPost\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Comment</span> <span class=\"token directive function\">@model</span>\n  <span class=\"token directive function\">@key</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"byPost\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"postID\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">postID</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">content</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>そのほかのディレクティブについては以下のサイトを参照ください。</p>\n<p><a href=\"https://aws-amplify.github.io/docs/cli-toolchain/graphql\">GraphQL Transform</a></p>\n<h2 id=\"android側の実装\" style=\"position:relative;\"><a href=\"#android%E5%81%B4%E3%81%AE%E5%AE%9F%E8%A3%85\" aria-label=\"android側の実装 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Android側の実装</h2>\n<p>AmplifyにAppSyncのAndroidクライアント用のSDKがあるのですが、まだプレビュー版で出来ることが限られていたので、aws-mobile-sdkのAppSync用のsdkを利用することにしました。</p>\n<p>基本的なquery、mutation、subscription操作は以下のようにして出来ます。</p>\n<h3 id=\"query\" style=\"position:relative;\"><a href=\"#query\" aria-label=\"query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>query</h3>\n<div class=\"gatsby-code-title\">query</div>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-kotlin line-numbers\"><code class=\"language-kotlin\">    <span class=\"token keyword\">val</span> query <span class=\"token operator\">=</span> ListMessagesQuery<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    appSyncClient<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">responseFetcher</span><span class=\"token punctuation\">(</span>AppSyncResponseFetchers<span class=\"token punctuation\">.</span>CACHE_AND_NETWORK<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> <span class=\"token operator\">:</span> GraphQLCall<span class=\"token punctuation\">.</span>Callback<span class=\"token operator\">&lt;</span>ListMessagesQuery<span class=\"token punctuation\">.</span>Data<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onFailure</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> ApolloException<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    Log<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter variable\">${</span>e<span class=\"token punctuation\">.</span>message<span class=\"token delimiter variable\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onResponse</span><span class=\"token punctuation\">(</span>response<span class=\"token operator\">:</span> Response<span class=\"token operator\">&lt;</span>ListMessagesQuery<span class=\"token punctuation\">.</span>Data<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">hasErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    Log<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">errors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">return</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">val</span> items <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">listMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                Log<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"<span class=\"token interpolation variable\">$items</span>\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"mutation\" style=\"position:relative;\"><a href=\"#mutation\" aria-label=\"mutation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mutation</h3>\n<div class=\"gatsby-code-title\">mutation</div>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-kotlin line-numbers\"><code class=\"language-kotlin\">    <span class=\"token keyword\">val</span> username <span class=\"token operator\">=</span> mobileClient<span class=\"token punctuation\">.</span>username\n    <span class=\"token keyword\">val</span> text <span class=\"token operator\">=</span> binding<span class=\"token punctuation\">.</span>messageEditText<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">val</span> input <span class=\"token operator\">=</span> CreateMessageInput<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">userId</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">dateTime</span><span class=\"token punctuation\">(</span><span class=\"token function\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy-MM-dd'T'HH:mm:ssXXX\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">val</span> mutation <span class=\"token operator\">=</span> CreateMessageMutation<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    appSyncClient<span class=\"token punctuation\">.</span><span class=\"token function\">mutate</span><span class=\"token punctuation\">(</span>mutation<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> <span class=\"token operator\">:</span> GraphQLCall<span class=\"token punctuation\">.</span>Callback<span class=\"token operator\">&lt;</span>CreateMessageMutation<span class=\"token punctuation\">.</span>Data<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onFailure</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> ApolloException<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                Log<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter variable\">${</span>e<span class=\"token punctuation\">.</span>message<span class=\"token delimiter variable\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onResponse</span><span class=\"token punctuation\">(</span>response<span class=\"token operator\">:</span> Response<span class=\"token operator\">&lt;</span>CreateMessageMutation<span class=\"token punctuation\">.</span>Data<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">hasErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    Log<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">errors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    Log<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"subscription\" style=\"position:relative;\"><a href=\"#subscription\" aria-label=\"subscription permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>subscription</h3>\n<div class=\"gatsby-code-title\">subscribe</div>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-kotlin line-numbers\"><code class=\"language-kotlin\">    <span class=\"token keyword\">val</span> subscription <span class=\"token operator\">=</span> OnCreateMessageSubscription<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    subscribeWatcher <span class=\"token operator\">=</span> appSyncClient<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>subscription<span class=\"token punctuation\">)</span>\n\n    subscribeWatcher<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> <span class=\"token operator\">:</span>\n        AppSyncSubscriptionCall<span class=\"token punctuation\">.</span>Callback<span class=\"token operator\">&lt;</span>OnCreateMessageSubscription<span class=\"token punctuation\">.</span>Data<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onFailure</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> ApolloException<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                Log<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter variable\">${</span>e<span class=\"token punctuation\">.</span>message<span class=\"token delimiter variable\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onResponse</span><span class=\"token punctuation\">(</span>response<span class=\"token operator\">:</span> Response<span class=\"token operator\">&lt;</span>OnCreateMessageSubscription<span class=\"token punctuation\">.</span>Data<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">hasErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    Log<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">errors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">return</span>\n                <span class=\"token punctuation\">}</span>\n                Log<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter variable\">${</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token delimiter variable\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                Log<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"subscribe finished\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>query操作とmutation操作に対しては、HogehogeQueryやHogehogeMutationといったクラスのオブジェクトを作成し、それをappsyncClientのqueryメソッドやmutationメソッドに渡すというのが基本的な流れみたいです。<br>\nこのHogehogeQueryやHogehogeMutationといったクラスはgradleで適当なpluginを導入すると、schemaから自動生成されます。</p>\n<p>subsctription操作については、subscribeメソッドが返すsubscribeWatcherを介して、サーバーからのメッセージを受け取るみたいです。</p>\n<p>subscribe中にqueryやmutation操作を行うと、subscriptionが一度中断されてしまうので注意してください。</p>\n<h2 id=\"感想\" style=\"position:relative;\"><a href=\"#%E6%84%9F%E6%83%B3\" aria-label=\"感想 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>感想</h2>\n<p>アクセス制御周りはほとんど手を付けなかったのですが、一応GraphQLを利用したアプリクライアント実装のイメージぐらいはつかめた気がします。</p>\n<p>GraphQLのデメリットとして挙げられるクライアント側のキャッシュの実装についても、AWSのSDKを利用すれば勝手にごにょごにょやってくれるのでほとんど意識する必要はありませんでした。</p>\n<p>クライアントサイドがjavascirptの場合は、GraphQL APIから受け取ったデータをそのままオブジェクトにできるのですが、Javaの場合はAPIから受け取るデータを格納するためのモデルクラスをあらかじめ定義しておく必要があります。<br>\nGraphQLはRESTと異なり、APIから取得するデータを好きなように選べるので、モデルクラスがRESTに比べて複雑になりやすいのが強いてい言うならデメリットなのかなという気がしています。</p>\n<h2 id=\"参考リンク\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\" aria-label=\"参考リンク permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考リンク</h2>\n<ul>\n<li><a href=\"https://www.apollographql.com/docs/graphql-tools/schema-directives/\">Schema directives - GraphQL Tools - Apollo GraphQL Docs</a></li>\n<li><a href=\"https://qiita.com/nagym/items/e5b9f43b11ef2309c546\">Amplify CLI GraphQL TransformとディレクティブでAppSync+DynamoDBをいじってみよう！(@model @auth, @key) - Qiita</a></li>\n<li><a href=\"https://dev.classmethod.jp/cloud/aws/reinvent2018-mob401/\">[レポート] MOB401: AWS AppSyncを使ったGraphQL APIを改善するための10Tips/Tricks #reinvent ｜ Developers.IO</a></li>\n<li><a href=\"https://aws-amplify.github.io/docs/cli-toolchain/graphql\">GraphQL Transform</a></li>\n<li><a href=\"https://aws-amplify.github.io/docs/sdk/android/api\">API</a></li>\n</ul>","toc":"<ul>\n<li><a href=\"/android-appsync-tutorial/#%E3%81%93%E3%82%8C%E3%81%AF%E4%BD%95\">これは何</a></li>\n<li><a href=\"/android-appsync-tutorial/#graphql%E3%81%A8%E3%81%AF\">GraphQLとは</a></li>\n<li><a href=\"/android-appsync-tutorial/#appsync%E3%81%A8%E3%81%AF\">AppSyncとは</a></li>\n<li>\n<p><a href=\"/android-appsync-tutorial/#amplify%E3%82%92%E7%94%A8%E3%81%84%E3%81%A6%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89\">Amplifyを用いてクラウド環境を構築</a></p>\n<ul>\n<li><a href=\"/android-appsync-tutorial/#model\">@model</a></li>\n<li><a href=\"/android-appsync-tutorial/#key\">@key</a></li>\n<li><a href=\"/android-appsync-tutorial/#connection\">@connection</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/android-appsync-tutorial/#android%E5%81%B4%E3%81%AE%E5%AE%9F%E8%A3%85\">Android側の実装</a></p>\n<ul>\n<li><a href=\"/android-appsync-tutorial/#query\">query</a></li>\n<li><a href=\"/android-appsync-tutorial/#mutation\">mutation</a></li>\n<li><a href=\"/android-appsync-tutorial/#subscription\">subscription</a></li>\n</ul>\n</li>\n<li><a href=\"/android-appsync-tutorial/#%E6%84%9F%E6%83%B3\">感想</a></li>\n<li><a href=\"/android-appsync-tutorial/#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\">参考リンク</a></li>\n</ul>"},"site":{"siteMetadata":{"siteUrl":"https://www.takigawa-memo.com"}}},"pageContext":{"slug":"/android-appsync-tutorial/"}},"staticQueryHashes":["112949366"]}