{"componentChunkName":"component---src-templates-post-template-tsx","path":"/gatsby-github-actions/","result":{"data":{"markdown":{"frontmatter":{"slug":"/gatsby-github-actions/","date":"2020.01.27","tags":["Gatsby","GitHub Actions"],"title":"GatsbyサイトをGithubActionsでdeploy","description":"GiHub Pages上に、GiHub Actionsを用いてGatsby静的サイトをデプロイする方法をまとめました。最近よく耳にするCI/CDとかいうやつの初級編ですかね。","thumbnail":{"name":"github-gatsby-thumbnail","publicURL":"/static/126e1544c7d4fdeea64a43f0d112f586/github-gatsby-thumbnail.png"}},"html":"<h2 id=\"これは何\" style=\"position:relative;\"><a href=\"#%E3%81%93%E3%82%8C%E3%81%AF%E4%BD%95\" aria-label=\"これは何 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>これは何</h2>\n<p>このブログは元々Netlify上にホスティングされていたのですが、どうも読み込み速度が遅かったので他のWebホスティングサービスも試してみることにしました。</p>\n<p>Amplify(S3)とGitHub Pages、Netlifyの三つを比較してみたところ、読み込み速度的にはAmplify > GitHub Pages > Netlifyの順に良い結果がでたのですが、Amplifyは無料枠を使い切るとビルド時間とアップロードするデータ量に対して料金が発生してしまうので、結局無料で利用できるGitHub Pagesに引っ越すことに決定。</p>\n<p>NetlifyにはGitHubの特定のbranchを登録しておくと、そのブランチがpushされたタイミングで自動的にサイトをデプロイしてくれる機能があるのですが、GitHub Pagesで同じことをしようとすると自分で処理を書かないといけません。</p>\n<p>幸い、GitHubでもGitHub Actionsという継続的インテグレーション/継続的デプロイ(CI/CD)を支援するサービスが提供されているので、今回はそれを利用してGitHubの特定のブランチにpushされたタイミングで自動的にWebサイトを更新する機能を実現したいと思います。</p>\n<h2 id=\"github-actionsとは\" style=\"position:relative;\"><a href=\"#github-actions%E3%81%A8%E3%81%AF\" aria-label=\"github actionsとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Actionsとは</h2>\n<p>GitHub Actionsは特定のブランチに対するpushやissueなどのイベントをトリガーとして、一連のタスクであるワークフローを実行できるサービスです。</p>\n<p>特定のブランチのルートディレクトリ以下に、.github/workflows/hogehoge-actions.ymlというファイルを作成しておけばそのブランチに対するイベント発生時にyamlファイルを読み込み、記述したワークフローを実行してくれます。</p>\n<p>トリガーとして利用でいるイベントは投稿時現在で以下の通りです。(正確な情報は公式ドキュメントを参照してください)</p>\n<blockquote>\n<p>valid event<br>\n\"check_run\", \"check_suite\", \"create\", \"delete\", \"deployment\", \"deployment_status\", \"fork\", \"gollum\", \"issue_comment\", \"issues\", \"label\", \"member\", \"milestone\", \"page_build\", \"project\", \"project_card\", \"project_column\", \"public\", \"pull_request\", \"pull_request_review\", \"pull_request_review_comment\", \"push\", \"release\", \"status\", \"watch\", \"repository_dispatch\"</p>\n<p><a href=\"https://help.github.com/ja/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows\">ワークフローをトリガーするイベント - GitHub ヘルプ</a></p>\n</blockquote>\n<p>タスクには、通常のシェルコマンドの他に、アクションと呼ばれるjavascriptで記述されたモジュールやDockerを指定することもできます。<br>\nGitHubやDockerHub上には便利なActionが多数公開されているので積極的に使っていきます。</p>\n<h2 id=\"設定項目\" style=\"position:relative;\"><a href=\"#%E8%A8%AD%E5%AE%9A%E9%A0%85%E7%9B%AE\" aria-label=\"設定項目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>設定項目</h2>\n<p>yamlファイルで設定する項目をテーブル形式でまとめました。<br>\n今回使用した項目のみ含まれているので、詳しい説明は<a href=\"https://help.github.com/ja/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions\">GitHub Actionsのワークフロー構文 - GitHub ヘルプ</a>をご参照ください。</p>\n<table>\n<thead>\n<tr>\n<th>項目</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>on</td>\n<td>トリガーをpushなどのイベントネームで指定。複数可能。複数の場合はどれか1つでも当てはまると実行。</td>\n</tr>\n<tr>\n<td>on.&#x3C;event name>.branches</td>\n<td>ワークフローが実行されるbranchを指定。</td>\n</tr>\n<tr>\n<td>jobs</td>\n<td>一つ以上のjobを指定。</td>\n</tr>\n<tr>\n<td>jobs.&#x3C;job_id>.runs-on</td>\n<td>jobが実行される環境を指定。</td>\n</tr>\n<tr>\n<td>jobs.&#x3C;job_id>.steps</td>\n<td>一つ以上のタスクを指定。逐次的に実行され、どこかで失敗すると処理は中断。</td>\n</tr>\n<tr>\n<td>jobs.&#x3C;job_id>.steps.uses</td>\n<td>GitHubやDockerHubに公開されているアクションを指定。</td>\n</tr>\n<tr>\n<td>jobs.&#x3C;job_id>.steps.run</td>\n<td>コマンドを指定。</td>\n</tr>\n<tr>\n<td>jobs.&#x3C;job_id>.steps.env</td>\n<td>環境変数を指定。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ワークフローをyaml形式で記述\" style=\"position:relative;\"><a href=\"#%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC%E3%82%92yaml%E5%BD%A2%E5%BC%8F%E3%81%A7%E8%A8%98%E8%BF%B0\" aria-label=\"ワークフローをyaml形式で記述 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ワークフローをyaml形式で記述</h2>\n<p>作成したyamlファイルは以下の通りです。deploy keyやsecreatsの設定方法等は以下のサイトをご参照ください。</p>\n<p><a href=\"https://github.com/peaceiris/actions-gh-pages\">peaceiris/actions-gh-pages: GitHub Actions for GitHub Pages 🚀 Deploy static files and publish your site easily. Static-Site-Generators-friendly.</a></p>\n<p>またyamlの記法については、以前Jsonとの比較をまとめた記事を作成したのでそちらもご参照ください。</p>\n<p><a href=\"https://www.takigawa-memo.com/compare-yaml-json/\">YamlとJsonの比較 - TAKIGAWA MEMO</a></p>\n<p>&#x3C;user-name>.github.ioというレポジトリのdeployブランチでpushイベントが発生した際に、Gatsbyサイトをビルドし、masterブランチへデプロイしています。</p>\n<div class=\"gatsby-code-title\">build-and-deploy.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-yml line-numbers\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build and deploy github pages\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> deploy\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build-gatsby-site-and-deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v2.4.0\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">ACTIONS_DEPLOY_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.ACTIONS_DEPLOY_KEY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">PUBLISH_BRANCH</span><span class=\"token punctuation\">:</span> master\n          <span class=\"token key atrule\">PUBLISH_DIR</span><span class=\"token punctuation\">:</span> ./public\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Add CNAME file\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          git config user.email $EMAIL\n          git config user.name \"DaichiTakigawa\"\n          git remote set-url origin https://DaichiTakigawa:${GITHUB_TOKEN}@github.com/DaichiTakigawa/DaichiTakigawa.github.io.git\n          git checkout master\n          git pull\n          echo www.takigawa-memo.com > CNAME\n          git add CNAME\n          git commit -m 'add CNAME file'\n          git push</span>\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">GITHUB_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> github.token <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">EMAIL</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.EMAIL <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>カスタムドメインを設定するためのCNAMEファイルなどはgatsbyのプラグイン<a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-cname/\">gatsby-plugin-cname | GatsbyJS</a>を利用すれば簡単に配置できるのですが、せっかくなのでGitHub Actionsを使ってpushしました。</p>\n<p>拙い文章であったと存じますが、最後まで読んでいただきありがとうございました。</p>\n<p><em>2020/03/09 追記</em><br>\n<strong>Gatsbyではstaticという名前のディレクトリをプロジェクトのルートディレクトリに作成しておくと、ビルド時にstaticディレクトリ内のファイルを全て、ビルド先のルートディレクトリ(デフォルトではpublic)に展開してくれるそうです。<br>\nですので、CNAMEファイルをstaticディレクトリ内に置いておけば、プラグインを使わなくても、またCD時に追加の処理を書かなくても、ちゃんとデプロイ先のルートディレクトリに配置されます。</strong></p>\n<h2 id=\"参考リンク\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\" aria-label=\"参考リンク permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考リンク</h2>\n<ul>\n<li><a href=\"https://qiita.com/peaceiris/items/2f6d83802f2aefa66f9d\">Gatsby のサイトを GitHub Actions で GitHub Pages にデプロイ - Qiita</a></li>\n<li><a href=\"https://help.github.com/ja/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions\">GitHub Actionsのワークフロー構文 - GitHub ヘルプ</a></li>\n<li><a href=\"https://help.github.com/ja/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows\">ワークフローをトリガーするイベント - GitHub ヘルプ</a></li>\n</ul>","toc":"<ul>\n<li><a href=\"/gatsby-github-actions/#%E3%81%93%E3%82%8C%E3%81%AF%E4%BD%95\">これは何</a></li>\n<li><a href=\"/gatsby-github-actions/#github-actions%E3%81%A8%E3%81%AF\">GitHub Actionsとは</a></li>\n<li><a href=\"/gatsby-github-actions/#%E8%A8%AD%E5%AE%9A%E9%A0%85%E7%9B%AE\">設定項目</a></li>\n<li><a href=\"/gatsby-github-actions/#%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC%E3%82%92yaml%E5%BD%A2%E5%BC%8F%E3%81%A7%E8%A8%98%E8%BF%B0\">ワークフローをyaml形式で記述</a></li>\n<li><a href=\"/gatsby-github-actions/#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></li>\n<li><a href=\"/gatsby-github-actions/#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\">参考リンク</a></li>\n</ul>"},"site":{"siteMetadata":{"siteUrl":"https://www.takigawa-memo.com"}}},"pageContext":{"slug":"/gatsby-github-actions/"}},"staticQueryHashes":["112949366","706912905"]}