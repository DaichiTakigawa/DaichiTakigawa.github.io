{"version":3,"sources":["webpack:///./node_modules/core-js/internals/to-indexed-object.js","webpack:///./node_modules/core-js/internals/hidden-keys.js","webpack:///./node_modules/core-js/internals/fails.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///./node_modules/core-js/internals/object-property-is-enumerable.js","webpack:///./node_modules/core-js/internals/global.js","webpack:///./node_modules/core-js/internals/copy-constructor-properties.js","webpack:///./node_modules/core-js/internals/shared-key.js","webpack:///./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack:///./node_modules/core-js/internals/ie8-dom-define.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./node_modules/core-js/internals/export.js","webpack:///./node_modules/core-js/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names.js","webpack:///./node_modules/gl-matrix/esm/common.js","webpack:///./node_modules/gl-matrix/esm/mat2.js","webpack:///./node_modules/gl-matrix/esm/mat3.js","webpack:///./node_modules/gl-matrix/esm/mat4.js","webpack:///./node_modules/gl-matrix/esm/vec3.js","webpack:///./node_modules/gl-matrix/esm/vec4.js","webpack:///./node_modules/gl-matrix/esm/quat.js","webpack:///./node_modules/gl-matrix/esm/vec2.js","webpack:///./src/lib/legacygl/gl-matrix-util.ts","webpack:///./src/lib/legacygl/legacygl/shader.ts","webpack:///./src/lib/legacygl/legacygl/uniform.ts","webpack:///./src/lib/legacygl/legacygl/vertex-attribute.ts","webpack:///./src/lib/legacygl/legacygl/legacygl.ts","webpack:///./src/lib/legacygl/camera.ts","webpack:///./src/lib/legacygl/glu.ts","webpack:///./src/lib/legacygl/util.ts","webpack:///./contents/posts/2021-04-22QuadraticBezierCurve/index.tsx","webpack:///./src/lib/legacygl/drawutil.ts","webpack:///./src/templates/post-react-template.tsx","webpack:///./node_modules/core-js/modules/es.math.hypot.js","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/core-js/internals/indexed-object.js","webpack:///./node_modules/core-js/internals/array-includes.js","webpack:///./node_modules/core-js/internals/to-length.js","webpack:///./node_modules/core-js/internals/has.js","webpack:///./node_modules/core-js/internals/shared.js","webpack:///./node_modules/core-js/internals/own-keys.js","webpack:///./node_modules/core-js/internals/create-property-descriptor.js","webpack:///./node_modules/core-js/internals/internal-state.js","webpack:///./node_modules/core-js/internals/redefine.js","webpack:///./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack:///./node_modules/core-js/internals/enum-bug-keys.js","webpack:///./node_modules/core-js/internals/native-weak-map.js","webpack:///./node_modules/core-js/internals/descriptors.js","webpack:///./node_modules/core-js/internals/an-object.js","webpack:///./node_modules/core-js/internals/is-object.js","webpack:///./node_modules/core-js/internals/inspect-source.js","webpack:///./node_modules/core-js/internals/uid.js","webpack:///./node_modules/core-js/internals/create-non-enumerable-property.js","webpack:///./node_modules/core-js/internals/is-forced.js","webpack:///./node_modules/core-js/internals/object-define-property.js","webpack:///./node_modules/core-js/internals/to-integer.js","webpack:///./node_modules/core-js/internals/to-primitive.js","webpack:///./node_modules/core-js/internals/is-pure.js","webpack:///./node_modules/core-js/internals/classof-raw.js","webpack:///./node_modules/core-js/internals/shared-store.js","webpack:///./node_modules/core-js/internals/object-keys-internal.js","webpack:///./node_modules/core-js/internals/document-create-element.js","webpack:///./node_modules/core-js/internals/set-global.js"],"names":["IndexedObject","requireObjectCoercible","module","exports","it","exec","error","path","global","aFunction","variable","undefined","namespace","method","arguments","length","$propertyIsEnumerable","propertyIsEnumerable","getOwnPropertyDescriptor","Object","NASHORN_BUG","call","1","f","V","descriptor","this","enumerable","Math","check","globalThis","window","self","Function","has","ownKeys","getOwnPropertyDescriptorModule","definePropertyModule","target","source","keys","defineProperty","i","key","shared","uid","DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toIndexedObject","toPrimitive","IE8_DOM_DEFINE","$getOwnPropertyDescriptor","O","P","fails","createElement","get","a","TypeError","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","isForced","options","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","prototype","noTargetGet","value","forced","sham","toInteger","max","min","index","integer","internalObjectKeys","hiddenKeys","concat","getOwnPropertyNames","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","random","PI","create","out","clone","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","v","v0","v1","fromRotation","fromScaling","str","frob","hypot","LDU","L","D","U","add","subtract","exactEquals","abs","multiplyScalar","multiplyScalarAndAdd","scale","y","sqrt","mul","sub","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","translate","x","fromTranslation","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","width","height","a4","a5","a6","a7","a8","b4","b5","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","t","len","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","cross","lerp","hermite","d","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","mag","cosine","acos","zero","vec","div","sqrDist","sqrLen","forEach","stride","offset","count","fn","arg","l","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","sqlerp","setAxes","view","transformMat2","transformMat2d","p0","p1","sinC","cosC","mat2","add_ip","adjoint_ip","invert_ip","mul_ip","multiply_ip","rotate_ip","scale_ip","transpose_ip","mat3","translate_ip","mat4","rotateX_ip","rotateY_ip","rotateZ_ip","ortho2d","vec2","div_ip","divide_ip","lerp_ip","max_ip","min_ip","negate_ip","normalize_ip","scaleAndAdd_ip","sub_ip","subtract_ip","transformMat2_ip","transformMat2d_ip","transformMat3_ip","transformMat4_ip","vec3","cross_ip","transformQuat_ip","vec4","quat","calculateW_ip","conjugate_ip","slerp_ip","Shader","gl","vertex_shader_src","fragment_shader_src","vertex_shader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","fragment_shader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","useProgram","getProgramParameter","LINK_STATUS","ArrayUniform","location","type","size","is_array","push","Uniform","stack","copy","pop","VertexAttribute","name","current","array","LegacyGL","shader","uniforms","vertex_attributes","add_vertex_attribute","vertex_attribute","num_vertices","mode","QUADS","displists","current_displist_name","AUTO_NORMAL","flags","add_uniform","getUniformLocation","uniform","add_uniform_array","set_uniforms","passed_value","func_name","getAttribLocation","enableVertexAttribArray","begin","end","drawcall","buffers","TRIANGLES","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","slicepos","slice","n","splice","bufferData","STATIC_DRAW","vertexAttribPointer","FLOAT","drawArrays","drawcalls","deleteBuffer","newList","displist","endList","callList","displist_wrapper","legacygl","is_valid","draw","drawfunc","invalidate","enable","flag","disable","Camera","viewport_width","prevpos","center_to_eye","eye_to_center","lookAt","modelview_matrix","is_moving","start_moving","mousepos","move","diff","theta","rot_hrz","rot_vrt","rot","d0","d1","finish_moving","project","obj_xyz","modelview","projection","viewport","ndc","unproject","win_xyz","obj_xyzw","ortho2D","HTMLCanvasElement","get_mousepos","event","flip_y","totalOffsetX","totalOffsetY","currentElement","offsetParent","offsetLeft","offsetTop","document","body","parentElement","scrollLeft","scrollTop","pageX","pageY","aspect_ratio","canvas","drawutil","camera","p2","selected","eval_quadratic_bezier","p01","p12","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","lineWidth","color","xygrid","LINE_STRIP","input_numsteps","getElementById","numsteps","Number","vertex2","checked","POINTS","init","getContext","get_legacygl","vertex","LINES","vertices","faces","quadmesh","numdiv","LINE_LOOP","TRIANGLE_FAN","radius","slices","stacks","angle2pos","phi","dphi","dtheta","k1","num_lines","p3","onmousedown","evt","mouse_win","altKey","shiftKey","points","dist_min","object_win","glu","dist","onmousemove","mouse_obj","plane_normal","eye_to_mouse","eye_to_origin","eye_to_intersection","onmouseup","clearColor","CanvasContainer","Canvas","TableContainer","marginTop","rhythm","marginBottom","paddingLeft","paddingTop","Table","H3","fontSize","lineHeight","Post","React","setNumsteps","showControlPoints","setShowControlPoints","showSamplePoints","setShowSamplePoints","canvasContainerRef","canvasRef","clientWidth","clientHeight","numStepsCallback","e","showControlPointsCallBack","showSamplePointsCallback","ref","id","className","colSpan","step","onChange","rel","href","posts","data","setSlug","UiContext","Context","fm","markdown","frontmatter","url","site","siteMetadata","siteUrl","slug","imageUrl","thumbnail","publicURL","isPostPage","title","description","date","html","tags","toc","$","$hypot","NaN","value1","value2","sum","aLen","larg","classof","split","toLength","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","el","fromIndex","includes","indexOf","argument","hasOwnProperty","IS_PURE","store","version","copyright","getBuiltIn","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","anObject","getOwnPropertySymbols","bitmap","configurable","writable","NATIVE_WEAK_MAP","isObject","objectHas","sharedKey","WeakMap","state","wmget","wmhas","wmset","metadata","facade","STATE","enforce","getterFor","TYPE","inspectSource","InternalStateModule","getInternalState","enforceInternalState","TEMPLATE","String","unsafe","simple","join","test","functionToString","toString","postfix","object","replacement","feature","detection","POLYFILL","NATIVE","string","replace","toLowerCase","$defineProperty","Attributes","isNaN","input","PREFERRED_STRING","val","valueOf","names","result","EXISTS"],"mappings":"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","file":"component---src-templates-post-react-template-tsx-c7faaa6f4f6a935b50d7.js","sourcesContent":["// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","module.exports = {};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","import \"core-js/modules/es.math.hypot.js\";\n\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import \"core-js/modules/es.math.hypot.js\";\nimport * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import {mat2, mat3, mat4, quat, vec2, vec3, vec4} from 'gl-matrix';\n\n/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare module 'gl-matrix' {\n  export namespace mat2 {\n    export function add_ip(a: mat2, b: mat2): mat2;\n    export function adjoint_ip(a: mat2): mat2;\n    export function invert_ip(a: mat2): mat2;\n    export function mul_ip(a: mat2, b: mat2): mat2;\n    export function multiply_ip(a: mat2, b: mat2): mat2;\n    export function rotate_ip(a: mat2, rad: number): mat2;\n    export function scale_ip(a: mat2, v: vec2): mat2;\n    export function transpose_ip(a: mat2): mat2;\n  }\n\n  export namespace mat3 {\n    export function add_ip(a: mat3, b: mat3): mat3;\n    export function adjoint_ip(a: mat3): mat3;\n    export function invert_ip(a: mat3): mat3;\n    export function mul_ip(a: mat3, b: mat3): mat3;\n    export function multiply_ip(a: mat3, b: mat3): mat3;\n    export function rotate_ip(a: mat3, rad: number): mat3;\n    export function scale_ip(a: mat3, v: vec2): mat3;\n    export function translate_ip(a: mat3, v: vec2): mat3;\n    export function transpose_ip(a: mat3): mat3;\n  }\n\n  export namespace mat4 {\n    export function add_ip(a: mat4, b: mat4): mat4;\n    export function adjoint_ip(a: mat4): mat4;\n    export function invert_ip(a: mat4): mat4;\n    export function mul_ip(a: mat4, b: mat4): mat4;\n    export function multiply_ip(a: mat4, b: mat4): mat4;\n    export function rotate_ip(a: mat4, rad: number, axis: vec3): mat4;\n    export function rotateX_ip(a: mat4, rad: number): mat4;\n    export function rotateY_ip(a: mat4, rad: number): mat4;\n    export function rotateZ_ip(a: mat4, rad: number): mat4;\n    export function scale_ip(a: mat4, v: vec3): mat4;\n    export function translate_ip(a: mat4, v: vec3): mat4;\n    export function transpose_ip(a: mat4): mat4;\n    export function ortho2d(\n      a: mat4,\n      left: number,\n      right: number,\n      bottom: number,\n      top: number\n    ): mat4;\n  }\n\n  export namespace vec2 {\n    export function add_ip(a: vec2, b: vec2): vec2;\n    export function div_ip(a: vec2, b: vec2): vec2;\n    export function divide_ip(a: vec2, b: vec2): vec2;\n    export function lerp_ip(a: vec2, b: vec2, t: number): vec2;\n    export function max_ip(a: vec2, b: vec2): vec2;\n    export function min_ip(a: vec2, b: vec2): vec2;\n    export function mul_ip(a: vec2, b: vec2): vec2;\n    export function multiply_ip(a: vec2, b: vec2): vec2;\n    export function negate_ip(a: vec2): vec2;\n    export function normalize_ip(a: vec2): vec2;\n    export function scale_ip(a: vec2, b: number): vec2;\n    export function scaleAndAdd_ip(a: vec2, b: vec2, scale: number): vec2;\n    export function sub_ip(a: vec2, b: vec2): vec2;\n    export function subtract_ip(a: vec2, b: vec2): vec2;\n    export function transformMat2_ip(a: vec2, m: mat2): vec2;\n    export function transformMat2d_ip(a: vec2, m: mat2d): vec2;\n    export function transformMat3_ip(a: vec2, m: mat3): vec2;\n    export function transformMat4_ip(a: vec2, m: mat4): vec2;\n  }\n\n  export namespace vec3 {\n    export function add_ip(a: vec3, b: vec3): vec3;\n    export function cross_ip(a: vec3, b: vec3): vec3;\n    export function div_ip(a: vec3, b: vec3): vec3;\n    export function divide_ip(a: vec3, b: vec3): vec3;\n    export function lerp_ip(a: vec3, b: vec3, t: number): vec3;\n    export function max_ip(a: vec3, b: vec3): vec3;\n    export function min_ip(a: vec3, b: vec3): vec3;\n    export function mul_ip(a: vec3, b: vec3): vec3;\n    export function multiply_ip(a: vec3, b: vec3): vec3;\n    export function negate_ip(a: vec3): vec3;\n    export function normalize_ip(a: vec3): vec3;\n    export function scale_ip(a: vec3, b: number): vec3;\n    export function scaleAndAdd_ip(a: vec3, b: vec3, scale: number): vec3;\n    export function sub_ip(a: vec3, b: vec3): vec3;\n    export function subtract_ip(a: vec3, b: vec3): vec3;\n    export function transformMat3_ip(a: vec3, m: mat3): vec3;\n    export function transformMat4_ip(a: vec3, m: mat4): vec3;\n    export function transformQuat_ip(a: vec3, q: quat): vec3;\n  }\n\n  export namespace vec4 {\n    export function add_ip(a: vec4, b: vec4): vec4;\n    export function div_ip(a: vec4, b: vec4): vec4;\n    export function divide_ip(a: vec4, b: vec4): vec4;\n    export function lerp_ip(a: vec4, b: vec4, t: number): vec4;\n    export function max_ip(a: vec4, b: vec4): vec4;\n    export function min_ip(a: vec4, b: vec4): vec4;\n    export function mul_ip(a: vec4, b: vec4): vec4;\n    export function multiply_ip(a: vec4, b: vec4): vec4;\n    export function negate_ip(a: vec4): vec4;\n    export function normalize_ip(a: vec4): vec4;\n    export function scale_ip(a: vec4, b: number): vec4;\n    export function scaleAndAdd_ip(a: vec4, b: vec4, scale: number): vec4;\n    export function sub_ip(a: vec4, b: vec4): vec4;\n    export function subtract_ip(a: vec4, b: vec4): vec4;\n    export function transformMat4_ip(a: vec4, m: mat4): vec4;\n    export function transformQuat_ip(a: vec4, q: quat): vec4;\n  }\n\n  export namespace quat {\n    export function add_ip(a: vec4, b: vec4): vec4;\n    export function calculateW_ip(a: quat): quat;\n    export function conjugate_ip(a: quat): quat;\n    export function invert_ip(a: quat): quat;\n    export function lerp_ip(a: vec4, b: vec4, t: number): vec4;\n    export function mul_ip(a: quat, b: quat): quat;\n    export function multiply_ip(a: quat, b: quat): quat;\n    export function normalize_ip(a: vec4): vec4;\n    export function rotateX_ip(a: quat, rad: number): quat;\n    export function rotateY_ip(a: quat, rad: number): quat;\n    export function rotateZ_ip(a: quat, rad: number): quat;\n    export function scale_ip(a: vec4, b: number): vec4;\n    export function slerp_ip(a: quat, b: quat, t: number): quat;\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n/* eslint-enable no-unused-vars */\n\n// mat2 in-place versions\nmat2.add_ip = function (a, b) {\n  return mat2.add(a, a, b);\n};\nmat2.adjoint_ip = function (a) {\n  return mat2.adjoint(a, a);\n};\nmat2.invert_ip = function (a) {\n  return mat2.invert(a, a);\n};\nmat2.mul_ip = function (a, b) {\n  return mat2.mul(a, a, b);\n};\nmat2.multiply_ip = function (a, b) {\n  return mat2.multiply(a, a, b);\n};\nmat2.rotate_ip = function (a, rad) {\n  return mat2.rotate(a, a, rad);\n};\nmat2.scale_ip = function (a, v) {\n  return mat2.scale(a, a, v);\n};\nmat2.transpose_ip = function (a) {\n  return mat2.transpose(a, a);\n};\n\n// mat3 in-place versions\nmat3.add_ip = function (a, b) {\n  return mat3.add(a, a, b);\n};\nmat3.adjoint_ip = function (a) {\n  return mat3.adjoint(a, a);\n};\nmat3.invert_ip = function (a) {\n  return mat3.invert(a, a);\n};\nmat3.mul_ip = function (a, b) {\n  return mat3.mul(a, a, b);\n};\nmat3.multiply_ip = function (a, b) {\n  return mat3.multiply(a, a, b);\n};\nmat3.rotate_ip = function (a, rad) {\n  return mat3.rotate(a, a, rad);\n};\nmat3.scale_ip = function (a, v) {\n  return mat3.scale(a, a, v);\n};\nmat3.translate_ip = function (a, v) {\n  return mat3.translate(a, a, v);\n};\nmat3.transpose_ip = function (a) {\n  return mat3.transpose(a, a);\n};\n\n// mat4 in-place versions\nmat4.add_ip = function (a, b) {\n  return mat4.add(a, a, b);\n};\nmat4.adjoint_ip = function (a) {\n  return mat4.adjoint(a, a);\n};\nmat4.invert_ip = function (a) {\n  return mat4.invert(a, a);\n};\nmat4.mul_ip = function (a, b) {\n  return mat4.mul(a, a, b);\n};\nmat4.multiply_ip = function (a, b) {\n  return mat4.multiply(a, a, b);\n};\nmat4.rotate_ip = function (a, rad, axis) {\n  return mat4.rotate(a, a, rad, axis);\n};\nmat4.rotateX_ip = function (a, rad) {\n  return mat4.rotateX(a, a, rad);\n};\nmat4.rotateY_ip = function (a, rad) {\n  return mat4.rotateY(a, a, rad);\n};\nmat4.rotateZ_ip = function (a, rad) {\n  return mat4.rotateZ(a, a, rad);\n};\nmat4.scale_ip = function (a, v) {\n  return mat4.scale(a, a, v);\n};\nmat4.translate_ip = function (a, v) {\n  return mat4.translate(a, a, v);\n};\nmat4.transpose_ip = function (a) {\n  return mat4.transpose(a, a);\n};\n\n// glu\nmat4.ortho2d = function (a, left, right, bottom, top) {\n  return mat4.ortho(a, left, right, bottom, top, -1, 1);\n};\n\n// vec2 in-place versions\nvec2.add_ip = function (a, b) {\n  return vec2.add(a, a, b);\n};\nvec2.div_ip = function (a, b) {\n  return vec2.div(a, a, b);\n};\nvec2.divide_ip = function (a, b) {\n  return vec2.divide(a, a, b);\n};\nvec2.lerp_ip = function (a, b, t) {\n  return vec2.lerp(a, a, b, t);\n};\nvec2.max_ip = function (a, b) {\n  return vec2.max(a, a, b);\n};\nvec2.min_ip = function (a, b) {\n  return vec2.min(a, a, b);\n};\nvec2.mul_ip = function (a, b) {\n  return vec2.mul(a, a, b);\n};\nvec2.multiply_ip = function (a, b) {\n  return vec2.multiply(a, a, b);\n};\nvec2.negate_ip = function (a) {\n  return vec2.negate(a, a);\n};\nvec2.normalize_ip = function (a) {\n  return vec2.normalize(a, a);\n};\nvec2.scale_ip = function (a, b) {\n  return vec2.scale(a, a, b);\n};\nvec2.scaleAndAdd_ip = function (a, b, scale) {\n  return vec2.scaleAndAdd(a, a, b, scale);\n};\nvec2.sub_ip = function (a, b) {\n  return vec2.sub(a, a, b);\n};\nvec2.subtract_ip = function (a, b) {\n  return vec2.subtract(a, a, b);\n};\nvec2.transformMat2_ip = function (a, m) {\n  return vec2.transformMat2(a, a, m);\n};\nvec2.transformMat2d_ip = function (a, m) {\n  return vec2.transformMat2d(a, a, m);\n};\nvec2.transformMat3_ip = function (a, m) {\n  return vec2.transformMat3(a, a, m);\n};\nvec2.transformMat4_ip = function (a, m) {\n  return vec2.transformMat4(a, a, m);\n};\n\n// vec3 in-place versions\nvec3.add_ip = function (a, b) {\n  return vec3.add(a, a, b);\n};\nvec3.cross_ip = function (a, b) {\n  return vec3.cross(a, a, b);\n};\nvec3.div_ip = function (a, b) {\n  return vec3.div(a, a, b);\n};\nvec3.divide_ip = function (a, b) {\n  return vec3.divide(a, a, b);\n};\nvec3.lerp_ip = function (a, b, t) {\n  return vec3.lerp(a, a, b, t);\n};\nvec3.max_ip = function (a, b) {\n  return vec3.max(a, a, b);\n};\nvec3.min_ip = function (a, b) {\n  return vec3.min(a, a, b);\n};\nvec3.mul_ip = function (a, b) {\n  return vec3.mul(a, a, b);\n};\nvec3.multiply_ip = function (a, b) {\n  return vec3.multiply(a, a, b);\n};\nvec3.negate_ip = function (a) {\n  return vec3.negate(a, a);\n};\nvec3.normalize_ip = function (a) {\n  return vec3.normalize(a, a);\n};\nvec3.scale_ip = function (a, b) {\n  return vec3.scale(a, a, b);\n};\nvec3.scaleAndAdd_ip = function (a, b, scale) {\n  return vec3.scaleAndAdd(a, a, b, scale);\n};\nvec3.sub_ip = function (a, b) {\n  return vec3.sub(a, a, b);\n};\nvec3.subtract_ip = function (a, b) {\n  return vec3.subtract(a, a, b);\n};\nvec3.transformMat3_ip = function (a, m) {\n  return vec3.transformMat3(a, a, m);\n};\nvec3.transformMat4_ip = function (a, m) {\n  return vec3.transformMat4(a, a, m);\n};\nvec3.transformQuat_ip = function (a, q) {\n  return vec3.transformQuat(a, a, q);\n};\n\n// vec4 in-place versions\nvec4.add_ip = function (a, b) {\n  return vec4.add(a, a, b);\n};\nvec4.div_ip = function (a, b) {\n  return vec4.div(a, a, b);\n};\nvec4.divide_ip = function (a, b) {\n  return vec4.divide(a, a, b);\n};\nvec4.lerp_ip = function (a, b, t) {\n  return vec4.lerp(a, a, b, t);\n};\nvec4.max_ip = function (a, b) {\n  return vec4.max(a, a, b);\n};\nvec4.min_ip = function (a, b) {\n  return vec4.min(a, a, b);\n};\nvec4.mul_ip = function (a, b) {\n  return vec4.mul(a, a, b);\n};\nvec4.multiply_ip = function (a, b) {\n  return vec4.multiply(a, a, b);\n};\nvec4.negate_ip = function (a) {\n  return vec4.negate(a, a);\n};\nvec4.normalize_ip = function (a) {\n  return vec4.normalize(a, a);\n};\nvec4.scale_ip = function (a, b) {\n  return vec4.scale(a, a, b);\n};\nvec4.scaleAndAdd_ip = function (a, b, scale) {\n  return vec4.scaleAndAdd(a, a, b, scale);\n};\nvec4.sub_ip = function (a, b) {\n  return vec4.sub(a, a, b);\n};\nvec4.subtract_ip = function (a, b) {\n  return vec4.subtract(a, a, b);\n};\nvec4.transformMat4_ip = function (a, m) {\n  return vec4.transformMat4(a, a, m);\n};\nvec4.transformQuat_ip = function (a, q) {\n  return vec4.transformQuat(a, a, q);\n};\n\n// quat in-place versions\nquat.add_ip = function (a, b) {\n  return quat.add(a, a, b);\n};\nquat.calculateW_ip = function (a) {\n  return quat.calculateW(a, a);\n};\nquat.conjugate_ip = function (a) {\n  return quat.conjugate(a, a);\n};\nquat.invert_ip = function (a) {\n  return quat.invert(a, a);\n};\nquat.lerp_ip = function (a, b, t) {\n  return quat.lerp(a, a, b, t);\n};\nquat.mul_ip = function (a, b) {\n  return quat.mul(a, a, b);\n};\nquat.multiply_ip = function (a, b) {\n  return quat.multiply(a, a, b);\n};\nquat.normalize_ip = function (a) {\n  return quat.normalize(a, a);\n};\nquat.rotateX_ip = function (a, rad) {\n  return quat.rotateX(a, a, rad);\n};\nquat.rotateY_ip = function (a, rad) {\n  return quat.rotateY(a, a, rad);\n};\nquat.rotateZ_ip = function (a, rad) {\n  return quat.rotateZ(a, a, rad);\n};\nquat.scale_ip = function (a, b) {\n  return quat.scale(a, a, b);\n};\nquat.slerp_ip = function (a, b, t) {\n  return quat.slerp(a, a, b, t);\n};\n","export class Shader {\n  vertex_shader: WebGLShader;\n  fragment_shader: WebGLShader;\n  program: WebGLProgram;\n\n  constructor(\n    gl: WebGLRenderingContext,\n    vertex_shader_src: string,\n    fragment_shader_src: string\n  ) {\n    this.vertex_shader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(this.vertex_shader, vertex_shader_src);\n    gl.compileShader(this.vertex_shader);\n    if (!gl.getShaderParameter(this.vertex_shader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this.vertex_shader));\n    }\n    // fragment shader\n    this.fragment_shader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(this.fragment_shader, fragment_shader_src);\n    gl.compileShader(this.fragment_shader);\n    if (!gl.getShaderParameter(this.fragment_shader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this.fragment_shader));\n    }\n    // shader program\n    this.program = gl.createProgram();\n    gl.attachShader(this.program, this.vertex_shader);\n    gl.attachShader(this.program, this.fragment_shader);\n    gl.linkProgram(this.program);\n    gl.useProgram(this.program);\n    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n      alert('Could not initialize shaders!');\n    }\n  }\n}\n","import {vec2, vec3, vec4, mat2, mat3, mat4} from 'gl-matrix';\n\nexport type UniformType =\n  | '1f'\n  | '1i'\n  | '2f'\n  | '2i'\n  | '3f'\n  | '3i'\n  | '4f'\n  | '4i'\n  | 'Matrix2f'\n  | 'Matrix3f'\n  | 'Matrix4f';\n\nexport type UniformValue = number | vec2 | vec3 | vec4 | mat2 | mat3 | mat4;\n\ninterface UniformBase {\n  location: WebGLUniformLocation;\n  type: UniformType;\n  is_array: boolean;\n  value: UniformValue | UniformValue[];\n}\n\nexport class ArrayUniform implements UniformBase {\n  location: WebGLUniformLocation;\n  is_array: true;\n  type: UniformType;\n  value: UniformValue[];\n\n  constructor(location: WebGLUniformLocation, type: UniformType, size: number) {\n    this.location = location;\n    this.type = type;\n    this.is_array = true;\n    function make_default_value() {\n      const default_value =\n        type == '1f' || type == '1i'\n          ? 0\n          : type == '2f' || type == '2i'\n          ? vec2.create()\n          : type == '3f' || type == '3i'\n          ? vec3.create()\n          : type == '4f' || type == '4i'\n          ? vec4.create()\n          : type == 'Matrix2f'\n          ? mat2.create()\n          : type == 'Matrix3f'\n          ? mat3.create()\n          : type == 'Matrix4f'\n          ? mat4.create()\n          : undefined;\n      return default_value;\n    }\n    this.value = [];\n    for (let i = 0; i < size; ++i) this.value.push(make_default_value());\n  }\n}\n\nexport class Uniform implements UniformBase {\n  location: WebGLUniformLocation;\n  type: UniformType;\n  is_array: false;\n  value: UniformValue;\n  stack: UniformValue[];\n\n  constructor(location: WebGLUniformLocation, type: UniformType) {\n    this.location = location;\n    this.type = type;\n    this.is_array = false;\n    this.value =\n      type == '1f' || type == '1i'\n        ? 0\n        : type == '2f' || type == '2i'\n        ? vec2.create()\n        : type == '3f' || type == '3i'\n        ? vec3.create()\n        : type == '4f' || type == '4i'\n        ? vec4.create()\n        : type == 'Matrix2f'\n        ? mat2.create()\n        : type == 'Matrix3f'\n        ? mat3.create()\n        : type == 'Matrix4f'\n        ? mat4.create()\n        : undefined;\n    this.stack = [];\n  }\n\n  push() {\n    const copy =\n      this.type == '1f' || this.type == '1i'\n        ? (this.value as number)\n        : this.type == '2f' || this.type == '2i'\n        ? vec2.copy(vec2.create(), this.value as vec2)\n        : this.type == '3f' || this.type == '3i'\n        ? vec3.copy(vec3.create(), this.value as vec3)\n        : this.type == '4f' || this.type == '4i'\n        ? vec4.copy(vec4.create(), this.value as vec4)\n        : this.type == 'Matrix2f'\n        ? mat2.copy(mat2.create(), this.value as mat2)\n        : this.type == 'Matrix3f'\n        ? mat3.copy(mat3.create(), this.value as mat3)\n        : this.type == 'Matrix4f'\n        ? mat4.copy(mat4.create(), this.value as mat4)\n        : undefined;\n    this.stack.push(copy);\n  }\n\n  pop() {\n    const copy = this.stack[this.stack.length - 1];\n    this.value =\n      this.type == '1f' || this.type == '1i'\n        ? (copy as number)\n        : this.type == '2f' || this.type == '2i'\n        ? vec2.copy(vec2.create(), copy as vec2)\n        : this.type == '3f' || this.type == '3i'\n        ? vec3.copy(vec3.create(), copy as vec3)\n        : this.type == '4f' || this.type == '4i'\n        ? vec4.copy(vec4.create(), copy as vec4)\n        : this.type == 'Matrix2f'\n        ? mat2.copy(mat2.create(), copy as mat2)\n        : this.type == 'Matrix3f'\n        ? mat3.copy(mat3.create(), copy as mat3)\n        : this.type == 'Matrix4f'\n        ? mat4.copy(mat4.create(), copy as mat4)\n        : undefined;\n    this.stack.pop();\n  }\n}\n","export class VertexAttribute {\n  location: number;\n  name: string;\n  size: number;\n  current: number[] = [];\n  array: number[] = [];\n\n  constructor(location: number, name: string, size: number) {\n    this.location = location;\n    this.name = name;\n    this.size = size;\n  }\n}\n","import {vec3} from 'gl-matrix';\nimport {Shader} from './shader';\nimport {UniformType, Uniform, ArrayUniform} from './uniform';\nimport {VertexAttribute} from './vertex-attribute';\n\ntype Mode = 'QUADS' | number;\n\nexport class LegacyGL {\n  private gl: WebGLRenderingContext;\n  private mode: Mode;\n\n  shader: Shader;\n  uniforms: {\n    [key: string]: Uniform | ArrayUniform;\n  };\n  vertex_attributes: VertexAttribute[];\n  QUADS: 'QUADS';\n  displists: {\n    [key: string]: {\n      name: string;\n      drawcalls: {\n        buffers: WebGLBuffer[];\n        mode: number;\n        num_vertices: number;\n      }[];\n    };\n  };\n  current_displist_name: string;\n  AUTO_NORMAL: string;\n  flags: {\n    [key: string]: boolean;\n  };\n\n  constructor(\n    gl: WebGLRenderingContext,\n    vertex_shader_src: string,\n    fragment_shader_src: string\n  ) {\n    this.gl = gl;\n    this.shader = new Shader(gl, vertex_shader_src, fragment_shader_src);\n    this.uniforms = {};\n    this.vertex_attributes = [];\n    // special treatment for vertex position attribute\n    this.add_vertex_attribute('vertex', 3);\n    delete this.vertex_attributes[0].current;\n    const vertex = function (x: number, y: number, z: number) {\n      for (let i = 0; i < this.vertex_attributes.length; ++i) {\n        const vertex_attribute = this.vertex_attributes[i];\n        const value =\n          vertex_attribute.name == 'vertex'\n            ? [x, y, z]\n            : vertex_attribute.current;\n        for (let j = 0; j < vertex_attribute.size; ++j)\n          vertex_attribute.array.push(value[j]);\n      }\n      // emulate GL_QUADS\n      const num_vertices = this.vertex_attributes[0].array.length / 3;\n      if (this.mode == this.QUADS && num_vertices % 6 == 4) {\n        // 6 vertices per quad (= 2 triangles)\n        const v0 = num_vertices - 4;\n        // add 2 vertices identical to [v0] and [v0+2] to construct the other half of the quad\n        for (let k = 0; k < 3; ++k) {\n          if (k == 1) continue;\n          for (let i = 0; i < this.vertex_attributes.length; ++i) {\n            const vertex_attribute = this.vertex_attributes[i];\n            for (let j = 0; j < vertex_attribute.size; ++j)\n              vertex_attribute.array.push(\n                vertex_attribute.array[vertex_attribute.size * (v0 + k) + j]\n              );\n          }\n        }\n      }\n    };\n    (this as any)['vertex'] = vertex;\n    // emulate GL_QUADS\n    this.QUADS = 'QUADS';\n    // display list\n    this.displists = {};\n    this.current_displist_name = null;\n    // emulate GL_AUTO_NORMAL\n    this.AUTO_NORMAL = 'AUTO_NORMAL';\n    this.flags = {\n      AUTO_NORMAL: false,\n    };\n  }\n\n  add_uniform(name: string, type: UniformType) {\n    const location = this.gl.getUniformLocation(\n      this.shader.program,\n      'u_' + name\n    );\n    const uniform = new Uniform(location, type);\n    this.uniforms[name] = uniform;\n  }\n\n  add_uniform_array(name: string, type: UniformType, size: number) {\n    const location = this.gl.getUniformLocation(\n      this.shader.program,\n      'u_' + name\n    );\n    const uniform = new ArrayUniform(location, type, size);\n    this.uniforms[name] = uniform;\n  }\n\n  set_uniforms() {\n    for (const name in this.uniforms) {\n      const uniform = this.uniforms[name];\n      const type = uniform.type;\n      // in case of array type, flatten values\n      let passed_value;\n      if (uniform.is_array) {\n        passed_value = [];\n        for (let i = 0; i < uniform.value.length; ++i) {\n          const v: any = uniform.value[i];\n          if (type != '1f' && type != '1i') {\n            for (let j = 0; j < v.length; ++j) passed_value.push(v[j]);\n          } else {\n            passed_value.push(v);\n          }\n        }\n      } else {\n        passed_value = uniform.value;\n      }\n      // call appropriate WebGL function depending on data type\n      let func_name = 'uniform' + type;\n      if (uniform.is_array || (type != '1f' && type != '1i')) func_name += 'v';\n      if (type == 'Matrix2f' || type == 'Matrix3f' || type == 'Matrix4f') {\n        (this.gl as any)[func_name](uniform.location, false, passed_value);\n      } else (this.gl as any)[func_name](uniform.location, passed_value);\n    }\n  }\n\n  add_vertex_attribute(name: string, size: number) {\n    // shader location\n    const location = this.gl.getAttribLocation(\n      this.shader.program,\n      'a_' + name\n    );\n    const vertex_attribute = new VertexAttribute(location, name, size);\n    // initialize current value with 0\n    for (let i = 0; i < size; ++i) vertex_attribute.current.push(0);\n    // register current value setter func\n    (this as any)[name] = function (...args: number[]) {\n      for (let i = 0; i < size; ++i) vertex_attribute.current[i] = args[i];\n    };\n    this.gl.enableVertexAttribArray(vertex_attribute.location);\n    // add to the list\n    this.vertex_attributes.push(vertex_attribute);\n  }\n\n  begin(mode: Mode) {\n    this.set_uniforms();\n    this.mode = mode;\n    for (let i = 0; i < this.vertex_attributes.length; ++i) {\n      this.vertex_attributes[i].array = [];\n    }\n  }\n\n  end() {\n    const gl = this.gl;\n    const drawcall = {\n      buffers: [] as WebGLBuffer[],\n      mode: this.mode == this.QUADS ? gl.TRIANGLES : this.mode,\n      num_vertices: this.vertex_attributes[0].array.length / 3,\n    };\n    for (let k = 0; k < this.vertex_attributes.length; ++k) {\n      const vertex_attribute = this.vertex_attributes[k];\n      const buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      drawcall.buffers.push(buffer);\n      // simulate GL_AUTO_NORMAL\n      if (\n        drawcall.mode == gl.TRIANGLES &&\n        vertex_attribute.name == 'normal' &&\n        this.flags.AUTO_NORMAL\n      ) {\n        for (let i = 0; i < drawcall.num_vertices / 3; ++i) {\n          const v: vec3[] = [];\n          for (let j = 0; j < 3; ++j) {\n            const slicepos = 3 * (3 * i + j);\n            v.push(\n              this.vertex_attributes[0].array.slice(\n                slicepos,\n                slicepos + 3\n              ) as vec3\n            );\n          }\n          vec3.sub_ip(v[1], v[0]);\n          vec3.sub_ip(v[2], v[0]);\n          const n = vec3.cross(vec3.create(), v[1], v[2]);\n          vec3.normalize_ip(n);\n          for (let j = 0; j < 3; ++j) {\n            vertex_attribute.array.splice(3 * (3 * i + j), 3, n[0], n[1], n[2]);\n          }\n        }\n      }\n      gl.bufferData(\n        gl.ARRAY_BUFFER,\n        new Float32Array(vertex_attribute.array),\n        gl.STATIC_DRAW\n      );\n      gl.vertexAttribPointer(\n        vertex_attribute.location,\n        vertex_attribute.size,\n        gl.FLOAT,\n        false,\n        0,\n        0\n      );\n    }\n    gl.drawArrays(drawcall.mode, 0, drawcall.num_vertices);\n    // display list\n    if (this.current_displist_name) {\n      this.displists[this.current_displist_name].drawcalls.push(drawcall);\n    } else {\n      for (let i = 0; i < drawcall.buffers.length; ++i) {\n        gl.deleteBuffer(drawcall.buffers[i]);\n      }\n    }\n  }\n\n  newList(name: string) {\n    const displist = this.displists[name];\n    if (displist) {\n      // delete existing buffers\n      for (let i = 0; i < displist.drawcalls.length; ++i) {\n        const drawcall = displist.drawcalls[i];\n        for (let j = 0; j < drawcall.buffers.length; ++j) {\n          this.gl.deleteBuffer(drawcall.buffers[j]);\n        }\n      }\n      displist.drawcalls = [];\n    } else {\n      this.displists[name] = {\n        name: name,\n        drawcalls: [], // { buffers, mode, num_vertices }\n      };\n    }\n    this.current_displist_name = name;\n  }\n\n  endList() {\n    this.current_displist_name = null;\n  }\n\n  callList(name: string) {\n    const gl = this.gl;\n    const displist = this.displists[name];\n    if (!displist) return;\n    this.set_uniforms();\n    for (let k = 0; k < displist.drawcalls.length; ++k) {\n      const drawcall = displist.drawcalls[k];\n      for (let i = 0; i < this.vertex_attributes.length; ++i) {\n        const vertex_attribute = this.vertex_attributes[i];\n        gl.bindBuffer(gl.ARRAY_BUFFER, drawcall.buffers[i]);\n        gl.vertexAttribPointer(\n          vertex_attribute.location,\n          vertex_attribute.size,\n          gl.FLOAT,\n          false,\n          0,\n          0\n        );\n      }\n      gl.drawArrays(drawcall.mode, 0, drawcall.num_vertices);\n    }\n  }\n\n  displist_wrapper(name: string) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const legacygl = this;\n    const wrapper = {\n      is_valid: false,\n      draw(drawfunc: () => void) {\n        if (!this.is_valid) {\n          legacygl.newList(name);\n          drawfunc();\n          legacygl.endList();\n          this.is_valid = true;\n        } else {\n          legacygl.callList(name);\n        }\n      },\n      invalidate() {\n        this.is_valid = false;\n      },\n    };\n    return wrapper;\n  }\n\n  enable(flag: string) {\n    this.flags[flag] = true;\n  }\n\n  disable(flag: string) {\n    this.flags[flag] = false;\n  }\n}\n\n/* eslint-disable no-unused-vars */\nexport interface LegacyGL {\n  vertex?(x: number, y: number, z: number): void;\n  color?(r: number, g: number, b: number): void;\n}\n/* eslint-enable no-unused-vars */\n\nexport function get_legacygl(\n  gl: WebGLRenderingContext,\n  vertex_shader_src: string,\n  fragment_shader_src: string\n) {\n  return new LegacyGL(gl, vertex_shader_src, fragment_shader_src);\n}\n","import {vec2, vec3, quat, mat4} from 'gl-matrix';\n\ntype CameraMode = 'none' | 'rotate' | 'pan' | 'zoom';\n\nexport class Camera {\n  private viewport_width: number;\n\n  eye: vec3;\n  center: vec3;\n  up: vec3;\n  mode: CameraMode;\n  prevpos: vec2;\n\n  constructor(viewport_width: number) {\n    this.viewport_width = viewport_width;\n    this.eye = [0, 0, 1];\n    this.center = [0, 0, 0];\n    this.up = [0, 1, 0];\n    this.mode = 'none';\n    this.prevpos = vec2.create();\n  }\n\n  center_to_eye() {\n    return vec3.sub(vec3.create(), this.eye, this.center);\n  }\n\n  eye_to_center() {\n    return vec3.sub(vec3.create(), this.center, this.eye);\n  }\n\n  right() {\n    return vec3.normalize(\n      vec3.create(),\n      vec3.cross(vec3.create(), this.eye_to_center(), this.up)\n    );\n  }\n\n  lookAt(modelview_matrix: mat4) {\n    mat4.lookAt(modelview_matrix, this.eye, this.center, this.up);\n  }\n\n  is_moving() {\n    return this.mode != 'none';\n  }\n\n  start_moving(mousepos: vec2, mode: CameraMode) {\n    vec2.copy(this.prevpos, mousepos);\n    this.mode = mode;\n    // correct up vector\n    this.up = vec3.normalize(\n      vec3.create(),\n      vec3.cross(vec3.create(), this.right(), this.eye_to_center())\n    );\n  }\n\n  move(mousepos: vec2) {\n    const diff = vec2.scale_ip(\n      vec2.sub(vec2.create(), mousepos, this.prevpos),\n      1 / this.viewport_width\n    );\n    if (this.mode == 'rotate') {\n      const theta = vec2.scale(vec2.create(), diff, 1.7 * Math.PI);\n      const rot_hrz = quat.setAxisAngle(quat.create(), this.up, -theta[0]);\n      const rot_vrt = quat.setAxisAngle(quat.create(), this.right(), theta[1]);\n      const rot = quat.mul(quat.create(), rot_vrt, rot_hrz);\n      this.eye = vec3.transformQuat(vec3.create(), this.center_to_eye(), rot);\n      vec3.add_ip(this.eye, this.center);\n      vec3.transformQuat_ip(this.up, rot);\n    } else if (this.mode == 'pan') {\n      const s = vec2.scale(vec2.create(), diff, vec3.len(this.center_to_eye()));\n      const d0 = vec3.scale(vec3.create(), this.right(), -s[0]);\n      const d1 = vec3.scale(vec3.create(), this.up, -s[1]);\n      const d = vec3.add(vec3.create(), d0, d1);\n      vec3.add_ip(this.eye, d);\n      vec3.add_ip(this.center, d);\n    } else if (this.mode == 'zoom') {\n      const d = vec3.scale(\n        vec3.create(),\n        this.eye_to_center(),\n        diff[0] - diff[1]\n      );\n      vec3.add_ip(this.eye, d);\n    }\n    vec2.copy(this.prevpos, mousepos);\n  }\n\n  finish_moving() {\n    this.mode = 'none';\n  }\n}\n\nexport function get_camera(viewport_width: number) {\n  return new Camera(viewport_width);\n}\n","import {vec3, vec4, mat4} from 'gl-matrix';\n\nexport function project(\n  obj_xyz: vec3,\n  modelview: mat4,\n  projection: mat4,\n  viewport: vec4\n) {\n  // object coordinate to normalized device coordinate\n  const m = mat4.mul(mat4.create(), projection, modelview);\n  const ndc = vec4.transformMat4(\n    vec4.create(),\n    [obj_xyz[0], obj_xyz[1], obj_xyz[2], 1],\n    m\n  );\n  vec4.scale_ip(ndc, 1 / ndc[3]);\n  // normalized device coordinate to viewport coordinate\n  const win_x = ((ndc[0] + 1) * viewport[2]) / 2 + viewport[0];\n  const win_y = ((ndc[1] + 1) * viewport[3]) / 2 + viewport[1];\n  const win_z = (ndc[2] + 1) / 2;\n  return [win_x, win_y, win_z] as vec3;\n}\n\nexport function unproject(\n  win_xyz: vec3,\n  modelview: mat4,\n  projection: mat4,\n  viewport: vec4\n) {\n  // viewport coordinate to normalized device coordinate\n  const ndc_x = ((win_xyz[0] - viewport[0]) * 2) / viewport[2] - 1;\n  const ndc_y = ((win_xyz[1] - viewport[1]) * 2) / viewport[3] - 1;\n  const ndc_z = win_xyz[2] * 2 - 1;\n  const ndc: vec4 = [ndc_x, ndc_y, ndc_z, 1];\n  // normalized device coordinate to object coordinate\n  const m = mat4.mul(mat4.create(), projection, modelview);\n  mat4.invert_ip(m);\n  const obj_xyzw = vec4.transformMat4(vec4.create(), ndc, m);\n  vec4.scale_ip(obj_xyzw, 1 / obj_xyzw[3]);\n  return [obj_xyzw[0], obj_xyzw[1], obj_xyzw[2]] as vec3;\n}\n\nexport function ortho2D(\n  out: mat4,\n  left: number,\n  right: number,\n  bottom: number,\n  top: number\n) {\n  return mat4.ortho(out, left, right, bottom, top, -1, 1);\n}\n","import {vec2} from 'gl-matrix';\n\ndeclare global {\n  interface HTMLCanvasElement {\n    get_mousepos(event: MouseEvent, flip_y?: boolean): vec2;\n    aspect_ratio(): number;\n  }\n}\n\nif (typeof window !== `undefined`) {\n  HTMLCanvasElement.prototype.get_mousepos = function (event, flip_y) {\n    let totalOffsetX = 0;\n    let totalOffsetY = 0;\n    for (\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let currentElement = this;\n      currentElement;\n      currentElement = currentElement.offsetParent\n    ) {\n      totalOffsetX += currentElement.offsetLeft;\n      totalOffsetY += currentElement.offsetTop;\n    }\n    for (\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let currentElement = this;\n      currentElement && currentElement != document.body;\n      currentElement = currentElement.parentElement\n    ) {\n      totalOffsetX -= currentElement.scrollLeft;\n      totalOffsetY -= currentElement.scrollTop;\n    }\n    const x = event.pageX - totalOffsetX;\n    let y = event.pageY - totalOffsetY;\n    if (flip_y === undefined || flip_y)\n      // flip y by default\n      y = this.height - y;\n    return [x, y];\n  };\n  HTMLCanvasElement.prototype.aspect_ratio = function () {\n    return this.width / this.height;\n  };\n}\n\nexport function get_filename_extension(filename: string) {\n  return '.' + filename.toLowerCase().split(/#|\\?/)[0].split('.').pop().trim(); // https://stackoverflow.com/a/47767860\n}\nexport function verify_filename_extension(\n  filename: string,\n  supported_extensions: any\n) {\n  const given_extension = get_filename_extension(filename);\n  if (\n    supported_extensions.some(function (x: string) {\n      return x == given_extension;\n    })\n  )\n    return given_extension;\n  alert('Supported formats are: ' + supported_extensions);\n  return undefined;\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport {vec2, vec3, vec4, mat4} from 'gl-matrix';\nimport {rhythm, scale} from '../../../src/lib/typography';\nimport {\n  glu,\n  get_camera,\n  get_drawutil,\n  get_legacygl,\n  Camera,\n  Drawutil,\n  LegacyGL,\n} from '../../../src/lib/legacygl';\n\ndeclare module '../../../src/lib/legacygl' {\n  interface LegacyGL {\n    vertex2(p: vec2): void;\n  }\n}\n\nlet gl: WebGLRenderingContext;\nlet canvas: HTMLCanvasElement;\nlet legacygl: LegacyGL;\nlet drawutil: Drawutil;\nlet camera: Camera;\nlet p0: vec2, p1: vec2, p2: vec2;\nlet selected: vec2 = null;\n\nfunction eval_quadratic_bezier(p0: vec2, p1: vec2, p2: vec2, t: number) {\n  const p01 = vec2.scaleAndAdd_ip(vec2.scale(vec2.create(), p0, 1 - t), p1, t);\n  const p12 = vec2.scaleAndAdd_ip(vec2.scale(vec2.create(), p1, 1 - t), p2, t);\n  return vec2.scaleAndAdd_ip(vec2.scale(vec2.create(), p01, 1 - t), p12, t);\n}\n\nfunction draw() {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  // projection & camera position\n  mat4.perspective(\n    legacygl.uniforms.projection.value as mat4,\n    Math.PI / 6,\n    canvas.aspect_ratio(),\n    0.1,\n    1000\n  );\n  const modelview = legacygl.uniforms.modelview;\n  camera.lookAt(modelview.value as mat4);\n\n  // xy grid\n  gl.lineWidth(1);\n  legacygl.color(0.5, 0.5, 0.5);\n  drawutil.xygrid(100);\n\n  // draw line segments composing curve\n  legacygl.color(1, 0.6, 0.2);\n  legacygl.begin(gl.LINE_STRIP);\n  const input_numsteps = document.getElementById(\n    'input_numsteps'\n  ) as HTMLInputElement;\n  const numsteps = Number(input_numsteps.value);\n  for (let i = 0; i <= numsteps; ++i) {\n    const t = i / numsteps;\n    legacygl.vertex2(eval_quadratic_bezier(p0, p1, p2, t));\n  }\n  legacygl.end();\n  // draw sample points\n  const input_show_samplepoints = document.getElementById(\n    'input_show_samplepoints'\n  ) as HTMLInputElement;\n  if (input_show_samplepoints.checked) {\n    legacygl.begin(gl.POINTS);\n    for (let i = 0; i <= numsteps; ++i) {\n      const t = i / numsteps;\n      legacygl.vertex2(eval_quadratic_bezier(p0, p1, p2, t));\n    }\n    legacygl.end();\n  }\n  // draw control points\n  const input_show_controlpoints = document.getElementById(\n    'input_show_controlpoints'\n  ) as HTMLInputElement;\n  if (input_show_controlpoints.checked) {\n    legacygl.color(0.2, 0.5, 1);\n    legacygl.begin(gl.LINE_STRIP);\n    legacygl.vertex2(p0);\n    legacygl.vertex2(p1);\n    legacygl.vertex2(p2);\n    legacygl.end();\n    legacygl.begin(gl.POINTS);\n    legacygl.vertex2(p0);\n    legacygl.vertex2(p1);\n    legacygl.vertex2(p2);\n    legacygl.end();\n  }\n}\nfunction init() {\n  // OpenGL context\n  canvas = document.getElementById('canvas') as HTMLCanvasElement;\n  gl = canvas.getContext('experimental-webgl') as WebGLRenderingContext;\n  if (!gl) alert('Could not initialize WebGL, sorry :-(');\n  const vertex_shader_src =\n    '\\\n        attribute vec3 a_vertex;\\\n        attribute vec3 a_color;\\\n        varying vec3 v_color;\\\n        uniform mat4 u_modelview;\\\n        uniform mat4 u_projection;\\\n        void main(void) {\\\n            gl_Position = u_projection * u_modelview * vec4(a_vertex, 1.0);\\\n            v_color = a_color;\\\n            gl_PointSize = 5.0;\\\n        }\\\n        ';\n  const fragment_shader_src =\n    '\\\n        precision mediump float;\\\n        varying vec3 v_color;\\\n        void main(void) {\\\n            gl_FragColor = vec4(v_color, 1.0);\\\n        }\\\n        ';\n  legacygl = get_legacygl(gl, vertex_shader_src, fragment_shader_src);\n  legacygl.add_uniform('modelview', 'Matrix4f');\n  legacygl.add_uniform('projection', 'Matrix4f');\n  legacygl.add_vertex_attribute('color', 3);\n  legacygl.vertex2 = function (p: vec2) {\n    this.vertex(p[0], p[1], 0);\n  };\n  drawutil = get_drawutil(gl, legacygl);\n  camera = get_camera(canvas.width);\n  camera.eye = [0, 0, 7];\n  p0 = [-0.5, -0.6];\n  p1 = [1.2, 0.5];\n  p2 = [-0.4, 1.3];\n  // event handlers\n  canvas.onmousedown = function (evt) {\n    const mouse_win = canvas.get_mousepos(evt);\n    if (evt.altKey) {\n      camera.start_moving(mouse_win, evt.shiftKey ? 'zoom' : 'pan');\n      return;\n    }\n    // pick nearest object\n    const points = [p0, p1, p2];\n    const viewport: vec4 = [0, 0, canvas.width, canvas.height];\n    let dist_min = 10000000;\n    for (let i = 0; i < 3; ++i) {\n      const object_win = glu.project(\n        [points[i][0], points[i][1], 0],\n        legacygl.uniforms.modelview.value as mat4,\n        legacygl.uniforms.projection.value as mat4,\n        viewport\n      );\n      const dist = vec2.dist(mouse_win as vec2, object_win as vec2);\n      if (dist < dist_min) {\n        dist_min = dist;\n        selected = points[i];\n      }\n    }\n  };\n  canvas.onmousemove = function (evt) {\n    const mouse_win = canvas.get_mousepos(evt) as number[];\n    if (camera.is_moving()) {\n      camera.move(mouse_win as vec2);\n      draw();\n      return;\n    }\n    if (selected != null) {\n      const viewport: vec4 = [0, 0, canvas.width, canvas.height];\n      mouse_win.push(1);\n      const mouse_obj = glu.unproject(\n        mouse_win as vec3,\n        legacygl.uniforms.modelview.value as mat4,\n        legacygl.uniforms.projection.value as mat4,\n        viewport\n      );\n      // just reuse the same code as the 3D case\n      const plane_origin: vec3 = [0, 0, 0];\n      const plane_normal: vec3 = [0, 0, 1];\n      const eye_to_mouse = vec3.sub(vec3.create(), mouse_obj, camera.eye);\n      const eye_to_origin = vec3.sub(vec3.create(), plane_origin, camera.eye);\n      const s1 = vec3.dot(eye_to_mouse, plane_normal);\n      const s2 = vec3.dot(eye_to_origin, plane_normal);\n      const eye_to_intersection = vec3.scale(\n        vec3.create(),\n        eye_to_mouse,\n        s2 / s1\n      );\n      vec3.add(selected as any, camera.eye, eye_to_intersection);\n      draw();\n    }\n  };\n  document.onmouseup = function () {\n    if (camera.is_moving()) {\n      camera.finish_moving();\n      return;\n    }\n    selected = null;\n  };\n  // init OpenGL settings\n  gl.viewport(0, 0, canvas.width, canvas.height);\n  gl.clearColor(1, 1, 1, 1);\n}\n\nconst Post: React.FC = () => {\n  const [numsteps, setNumsteps] = React.useState(20);\n  const [showControlPoints, setShowControlPoints] = React.useState(true);\n  const [showSamplePoints, setShowSamplePoints] = React.useState(true);\n\n  const canvasContainerRef: React.LegacyRef<HTMLDivElement> = React.useRef(\n    null\n  );\n  const canvasRef: React.LegacyRef<HTMLCanvasElement> = React.useRef(null);\n  React.useEffect(() => {\n    const width = canvasContainerRef.current.clientWidth;\n    const height = canvasContainerRef.current.clientHeight;\n    canvasRef.current.width = width;\n    canvasRef.current.height = height;\n    init();\n    draw();\n  });\n\n  const numStepsCallback = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setNumsteps(Number(e.target.value));\n      draw();\n    },\n    [setNumsteps]\n  );\n  const showControlPointsCallBack = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setShowControlPoints(e.target.checked);\n      draw();\n    },\n    [setShowControlPoints]\n  );\n  const showSamplePointsCallback = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setShowSamplePoints(e.target.checked);\n      draw();\n    },\n    [setShowSamplePoints]\n  );\n\n  return (\n    <div>\n      <CanvasContainer ref={canvasContainerRef}>\n        <Canvas ref={canvasRef} id=\"canvas\" />\n      </CanvasContainer>\n      <TableContainer className=\"table-container\">\n        <Table className=\"table is-bordered\">\n          <tbody>\n            <tr>\n              <td>Number of Steps:</td>\n              <td colSpan={2}>\n                <input\n                  className=\"input is-small\"\n                  type=\"number\"\n                  id=\"input_numsteps\"\n                  step=\"1\"\n                  min=\"2\"\n                  value={numsteps}\n                  onChange={numStepsCallback}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Show Control Points:</td>\n              <td colSpan={2}>\n                <input\n                  type=\"checkbox\"\n                  id=\"input_show_controlpoints\"\n                  checked={showControlPoints}\n                  onChange={showControlPointsCallBack}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Show Sample Points:</td>\n              <td colSpan={2}>\n                <input\n                  type=\"checkbox\"\n                  id=\"input_show_samplepoints\"\n                  checked={showSamplePoints}\n                  onChange={showSamplePointsCallback}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </TableContainer>\n      <H3>Usage:</H3>\n      <ul>\n        <li>drag: move control points</li>\n        <li>alt+drag: camera pan</li>\n        <li>alt+shift+drag: camera zoom</li>\n      </ul>\n      <H3>Using Library</H3>\n      <ul>\n        <li>\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href=\"https://bitbucket.org/kenshi84/legacygl.js/src/master/\">\n            legachgl.js\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst CanvasContainer = styled.div({\n  width: '80%',\n  position: 'relative',\n  paddingTop: '80%' /* initial ratio of 1:1 */,\n});\n\nconst Canvas = styled.canvas({\n  border: '1px solid #000000',\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n});\n\nconst TableContainer = styled.div({\n  marginTop: rhythm(2),\n  marginBottom: `${rhythm(3)} !important`,\n  paddingLeft: '1px',\n  paddingTop: '1px',\n});\n\nconst Table = styled.table({\n  color: 'rgb(80, 80, 80)',\n  marginBottom: 0,\n});\n\nconst H3 = styled.h3({\n  marginTop: rhythm(2),\n  fontSize: scale(1 / 4).fontSize,\n  lineHeight: scale(1 / 4).lineHeight,\n});\n\nexport default Post;\n","import {vec3} from 'gl-matrix';\nimport {LegacyGL} from './legacygl';\n\nexport interface Drawutil {\n  xyzaxis(): void;\n  xygrid(size: number): void;\n  yzgrid(size: number): void;\n  zxgrid(size: number): void;\n  quadmesh(mode: string, vertices: number[], faces: number[]): void;\n  trimesh(mode: string, vertices: number[], faces: number[]): void;\n  cube(mode: string, size: number): void;\n  circle(mode: string, size: number, numdiv: number): void;\n  sphere(mode: string, radius: number, slices: number, stacks: number): void;\n  triangle_with_lines(p0: vec3, p1: vec3, p2: vec3, num_lines?: number): void;\n  quad_with_lines(\n    p0: vec3,\n    p1: vec3,\n    p2: vec3,\n    p3: vec3,\n    num_lines?: number\n  ): void;\n}\n\nexport function get_drawutil(\n  gl: WebGLRenderingContext,\n  legacygl: LegacyGL\n): Drawutil {\n  const drawutil: any = {};\n  drawutil.xyzaxis = function () {\n    legacygl.begin(gl.LINES);\n    legacygl.color(1, 0, 0);\n    legacygl.vertex(0, 0, 0);\n    legacygl.vertex(1, 0, 0);\n    legacygl.color(0, 1, 0);\n    legacygl.vertex(0, 0, 0);\n    legacygl.vertex(0, 1, 0);\n    legacygl.color(0, 0, 1);\n    legacygl.vertex(0, 0, 0);\n    legacygl.vertex(0, 0, 1);\n    legacygl.end();\n  };\n  drawutil.xygrid = function (size: number) {\n    legacygl.begin(gl.LINES);\n    for (let i = -size; i <= size; ++i) {\n      legacygl.vertex(i, -size, 0);\n      legacygl.vertex(i, size, 0);\n      legacygl.vertex(-size, i, 0);\n      legacygl.vertex(size, i, 0);\n    }\n    legacygl.end();\n  };\n  drawutil.yzgrid = function (size: number) {\n    legacygl.begin(gl.LINES);\n    for (let i = -size; i <= size; ++i) {\n      legacygl.vertex(0, i, -size);\n      legacygl.vertex(0, i, size);\n      legacygl.vertex(0, -size, i);\n      legacygl.vertex(0, size, i);\n    }\n    legacygl.end();\n  };\n  drawutil.zxgrid = function (size: number) {\n    legacygl.begin(gl.LINES);\n    for (let i = -size; i <= size; ++i) {\n      legacygl.vertex(i, 0, -size);\n      legacygl.vertex(i, 0, size);\n      legacygl.vertex(-size, 0, i);\n      legacygl.vertex(size, 0, i);\n    }\n    legacygl.end();\n  };\n  drawutil.quadmesh = function (\n    mode: string,\n    vertices: number[],\n    faces: number[]\n  ) {\n    legacygl.begin(mode == 'line' ? gl.LINES : legacygl.QUADS);\n    for (let f = 0; f < faces.length / 4; ++f) {\n      for (let i = 0; i < 4; ++i) {\n        const v0 = faces[4 * f + i];\n        const x0 = vertices[3 * v0];\n        const y0 = vertices[3 * v0 + 1];\n        const z0 = vertices[3 * v0 + 2];\n        legacygl.vertex(x0, y0, z0);\n        if (mode == 'line') {\n          const v1 = faces[4 * f + ((i + 1) % 4)];\n          const x1 = vertices[3 * v1];\n          const y1 = vertices[3 * v1 + 1];\n          const z1 = vertices[3 * v1 + 2];\n          legacygl.vertex(x1, y1, z1);\n        }\n      }\n    }\n    legacygl.end();\n  };\n  drawutil.trimesh = function (\n    mode: string,\n    vertices: number[],\n    faces: number[]\n  ) {\n    legacygl.begin(mode == 'line' ? gl.LINES : gl.TRIANGLES);\n    for (let f = 0; f < faces.length / 3; ++f) {\n      for (let i = 0; i < 3; ++i) {\n        const v0 = faces[3 * f + i];\n        const x0 = vertices[3 * v0];\n        const y0 = vertices[3 * v0 + 1];\n        const z0 = vertices[3 * v0 + 2];\n        legacygl.vertex(x0, y0, z0);\n        if (mode == 'line') {\n          const v1 = faces[3 * f + ((i + 1) % 3)];\n          const x1 = vertices[3 * v1];\n          const y1 = vertices[3 * v1 + 1];\n          const z1 = vertices[3 * v1 + 2];\n          legacygl.vertex(x1, y1, z1);\n        }\n      }\n    }\n    legacygl.end();\n  };\n  drawutil.cube = function (mode: string, size: number) {\n    const r = size / 2;\n    this.quadmesh(\n      mode,\n      [\n        // vertices\n        -r,\n        -r,\n        -r,\n        r,\n        -r,\n        -r,\n        -r,\n        r,\n        -r,\n        r,\n        r,\n        -r,\n        -r,\n        -r,\n        r,\n        r,\n        -r,\n        r,\n        -r,\n        r,\n        r,\n        r,\n        r,\n        r,\n      ],\n      [\n        // faces\n        1,\n        3,\n        7,\n        5, // positive-x\n        3,\n        2,\n        6,\n        7, // positive-y\n        2,\n        0,\n        4,\n        6, // negative-x\n        0,\n        1,\n        5,\n        4, // negative-y\n        4,\n        5,\n        7,\n        6, // positive-z\n        0,\n        2,\n        3,\n        1, // negative-z\n      ]\n    );\n  };\n  drawutil.circle = function (mode: string, size: number, numdiv?: number) {\n    if (!numdiv) numdiv = 12;\n    const r = size / 2;\n    legacygl.begin(mode == 'line' ? gl.LINE_LOOP : gl.TRIANGLE_FAN);\n    for (let i = 0; i < numdiv; ++i) {\n      const theta = (i * 2 * Math.PI) / numdiv;\n      const x = r * Math.cos(theta);\n      const y = r * Math.sin(theta);\n      legacygl.vertex(x, y, 0);\n    }\n    legacygl.end();\n  };\n  drawutil.sphere = function (\n    mode: string,\n    radius: number,\n    slices: number,\n    stacks: number\n  ) {\n    function angle2pos(theta: number, phi: number) {\n      const x = radius * Math.cos(theta) * Math.sin(phi);\n      const y = radius * Math.sin(theta) * Math.sin(phi);\n      const z = radius * Math.cos(phi);\n      return [x, y, z];\n    }\n    legacygl.begin(mode == 'line' ? gl.LINES : legacygl.QUADS);\n    let phi = 0;\n    const dphi = Math.PI / stacks;\n    for (let i = 0; i < stacks; ++i, phi += dphi) {\n      let theta = 0;\n      const dtheta = (2 * Math.PI) / slices;\n      for (let j = 0; j < slices; ++j, theta += dtheta) {\n        const p = [\n          angle2pos(theta, phi),\n          angle2pos(theta + dtheta, phi),\n          angle2pos(theta + dtheta, phi + dphi),\n          angle2pos(theta, phi + dphi),\n        ];\n        for (let k = 0; k < 4; ++k) {\n          legacygl.vertex(p[k][0], p[k][1], p[k][2]);\n          if (mode == 'line') {\n            const k1 = (k + 1) % 4;\n            legacygl.vertex(p[k1][0], p[k1][1], p[k1][2]);\n          }\n        }\n      }\n    }\n    legacygl.end();\n  };\n  drawutil.triangle_with_lines = function (\n    p0: vec3,\n    p1: vec3,\n    p2: vec3,\n    num_lines = 10\n  ) {\n    const p = [p0, p1, p2];\n    legacygl.begin(gl.LINES);\n    for (let i = 0; i < num_lines; ++i) {\n      const t = i / num_lines;\n      for (let j = 0; j < 3; ++j) {\n        const a = vec3.lerp([0, 0, 0], p[j], p[(j + 2) % 3], t);\n        const b = vec3.lerp([0, 0, 0], p[(j + 1) % 3], p[(j + 2) % 3], t);\n        legacygl.vertex(a[0], a[1], a[2]);\n        legacygl.vertex(b[0], b[1], b[2]);\n      }\n    }\n    legacygl.end();\n  };\n  drawutil.quad_with_lines = function (\n    p0: vec3,\n    p1: vec3,\n    p2: vec3,\n    p3: vec3,\n    num_lines = 10\n  ) {\n    legacygl.begin(gl.LINES);\n    for (let i = 0; i <= num_lines; ++i) {\n      const t = i / num_lines;\n      {\n        const a = vec3.lerp([0, 0, 0], p0, p1, t);\n        const b = vec3.lerp([0, 0, 0], p3, p2, t);\n        legacygl.vertex(a[0], a[1], a[2]);\n        legacygl.vertex(b[0], b[1], b[2]);\n      }\n      {\n        const a = vec3.lerp([0, 0, 0], p0, p3, t);\n        const b = vec3.lerp([0, 0, 0], p1, p2, t);\n        legacygl.vertex(a[0], a[1], a[2]);\n        legacygl.vertex(b[0], b[1], b[2]);\n      }\n    }\n    legacygl.end();\n  };\n  return drawutil;\n}\n","import * as React from 'react';\nimport {graphql} from 'gatsby';\n\nimport {Seo} from '../components/atoms';\nimport {BlogPage, Content} from '../components/organisms';\nimport {UiContext} from '../contexts';\nimport {PostReactTemplateQuery} from '../../types/graphql-types';\n\nimport QuadraticBezierCurvePost from '../../contents/posts/2021-04-22QuadraticBezierCurve';\n\ntype Props = {\n  data: PostReactTemplateQuery;\n};\n\ntype Posts = {\n  [key: string]: JSX.Element;\n};\n\nconst posts: Posts = {\n  ['/quadratic-bezeir-curve/']: <QuadraticBezierCurvePost />,\n};\n\nconst Post: React.FC<Props> = ({data}) => {\n  const {setSlug} = React.useContext(UiContext.Context);\n\n  const fm = data.markdown.frontmatter;\n  const url = `${data.site.siteMetadata.siteUrl}${fm.slug}`;\n  const imageUrl = `${data.site.siteMetadata.siteUrl}${fm.thumbnail.publicURL}`;\n\n  React.useEffect(() => {\n    setSlug(fm.slug);\n  }, []);\n\n  return (\n    <>\n      <Seo\n        isPostPage\n        title={fm.title}\n        description={fm.description}\n        url={url}\n        imageUrl={imageUrl}\n      />\n      <Content>\n        <BlogPage\n          title={fm.title}\n          date={fm.date}\n          description={fm.description}\n          slug={fm.slug}\n          thumbnail={fm.thumbnail.name}\n          html={data.markdown.html}\n          tags={fm.tags}\n          toc={data.markdown.toc}>\n          {posts[fm.slug]}\n        </BlogPage>\n      </Content>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query PostReactTemplate($slug: String!) {\n    markdown: markdownRemark(frontmatter: {slug: {eq: $slug}}) {\n      frontmatter {\n        slug\n        date(formatString: \"YYYY.MM.DD\")\n        tags\n        title\n        description\n        thumbnail {\n          name\n          publicURL\n        }\n      }\n      html\n      toc: tableOfContents(pathToSlugField: \"frontmatter.slug\")\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`;\n\nexport default Post;\n","var $ = require('../internals/export');\n\n// eslint-disable-next-line es/no-math-hypot -- required for testing\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt;\n\n// Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\n\n// `Math.hypot` method\n// https://tc39.es/ecma262/#sec-math.hypot\n$({ target: 'Math', stat: true, forced: BUGGY }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  hypot: function hypot(value1, value2) {\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.10.2',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n});\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n"],"sourceRoot":""}